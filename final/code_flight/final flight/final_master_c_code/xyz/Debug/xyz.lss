
xyz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  00006f18  00006fac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006f18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000039a  008001a6  008001a6  00007052  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00007052  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00007084  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003c0  00000000  00000000  000070c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006842  00000000  00000000  00007480  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000016f7  00000000  00000000  0000dcc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002ea1  00000000  00000000  0000f3b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f70  00000000  00000000  0001225c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d61  00000000  00000000  000131cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004f96  00000000  00000000  00013f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000310  00000000  00000000  00018ec3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e5 c3       	rjmp	.+1994   	; 0x7cc <__ctors_end>
       2:	00 00       	nop
       4:	02 c4       	rjmp	.+2052   	; 0x80a <__bad_interrupt>
       6:	00 00       	nop
       8:	00 c4       	rjmp	.+2048   	; 0x80a <__bad_interrupt>
       a:	00 00       	nop
       c:	fe c3       	rjmp	.+2044   	; 0x80a <__bad_interrupt>
       e:	00 00       	nop
      10:	fc c3       	rjmp	.+2040   	; 0x80a <__bad_interrupt>
      12:	00 00       	nop
      14:	fa c3       	rjmp	.+2036   	; 0x80a <__bad_interrupt>
      16:	00 00       	nop
      18:	f8 c3       	rjmp	.+2032   	; 0x80a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f6 c3       	rjmp	.+2028   	; 0x80a <__bad_interrupt>
      1e:	00 00       	nop
      20:	f4 c3       	rjmp	.+2024   	; 0x80a <__bad_interrupt>
      22:	00 00       	nop
      24:	f2 c3       	rjmp	.+2020   	; 0x80a <__bad_interrupt>
      26:	00 00       	nop
      28:	f0 c3       	rjmp	.+2016   	; 0x80a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ee c3       	rjmp	.+2012   	; 0x80a <__bad_interrupt>
      2e:	00 00       	nop
      30:	ec c3       	rjmp	.+2008   	; 0x80a <__bad_interrupt>
      32:	00 00       	nop
      34:	ea c3       	rjmp	.+2004   	; 0x80a <__bad_interrupt>
      36:	00 00       	nop
      38:	e8 c3       	rjmp	.+2000   	; 0x80a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e6 c3       	rjmp	.+1996   	; 0x80a <__bad_interrupt>
      3e:	00 00       	nop
      40:	e4 c3       	rjmp	.+1992   	; 0x80a <__bad_interrupt>
      42:	00 00       	nop
      44:	e2 c3       	rjmp	.+1988   	; 0x80a <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 42 12 	jmp	0x2484	; 0x2484 <__vector_18>
      4c:	de c3       	rjmp	.+1980   	; 0x80a <__bad_interrupt>
      4e:	00 00       	nop
      50:	dc c3       	rjmp	.+1976   	; 0x80a <__bad_interrupt>
      52:	00 00       	nop
      54:	da c3       	rjmp	.+1972   	; 0x80a <__bad_interrupt>
      56:	00 00       	nop
      58:	d8 c3       	rjmp	.+1968   	; 0x80a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d6 c3       	rjmp	.+1964   	; 0x80a <__bad_interrupt>
      5e:	00 00       	nop
      60:	d4 c3       	rjmp	.+1960   	; 0x80a <__bad_interrupt>
      62:	00 00       	nop
      64:	d2 c3       	rjmp	.+1956   	; 0x80a <__bad_interrupt>
      66:	00 00       	nop
      68:	d0 c3       	rjmp	.+1952   	; 0x80a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ce c3       	rjmp	.+1948   	; 0x80a <__bad_interrupt>
      6e:	00 00       	nop
      70:	cc c3       	rjmp	.+1944   	; 0x80a <__bad_interrupt>
      72:	00 00       	nop
      74:	ca c3       	rjmp	.+1940   	; 0x80a <__bad_interrupt>
      76:	00 00       	nop
      78:	0c 94 0b 1c 	jmp	0x3816	; 0x3816 <__vector_30>
      7c:	c6 c3       	rjmp	.+1932   	; 0x80a <__bad_interrupt>
      7e:	00 00       	nop
      80:	c4 c3       	rjmp	.+1928   	; 0x80a <__bad_interrupt>
      82:	00 00       	nop
      84:	c2 c3       	rjmp	.+1924   	; 0x80a <__bad_interrupt>
      86:	00 00       	nop
      88:	c0 c3       	rjmp	.+1920   	; 0x80a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e6 0b       	sbc	r30, r22
      8e:	ef 0b       	sbc	r30, r31
      90:	f8 0b       	sbc	r31, r24
      92:	01 0c       	add	r0, r1
      94:	0a 0c       	add	r0, r10
      96:	13 0c       	add	r1, r3
      98:	1c 0c       	add	r1, r12
      9a:	25 0c       	add	r2, r5
      9c:	2e 0c       	add	r2, r14
      9e:	37 0c       	add	r3, r7
      a0:	40 0c       	add	r4, r0
      a2:	03 6e       	ori	r16, 0xE3	; 227
      a4:	db 36       	cpi	r29, 0x6B	; 107
      a6:	3d 9a       	sbi	0x07, 5	; 7
      a8:	99 99       	sbic	0x13, 1	; 19
      aa:	99 3d       	cpi	r25, 0xD9	; 217
      ac:	ab aa       	std	Y+51, r10	; 0x33
      ae:	aa 2a       	or	r10, r26
      b0:	3e 00       	.word	0x003e	; ????
      b2:	00 00       	nop
      b4:	80 3f       	cpi	r24, 0xF0	; 240
      b6:	08 4a       	sbci	r16, 0xA8	; 168
      b8:	d7 3b       	cpi	r29, 0xB7	; 183
      ba:	3b ce       	rjmp	.-906    	; 0xfffffd32 <__eeprom_end+0xff7efd32>
      bc:	01 6e       	ori	r16, 0xE1	; 225
      be:	84 bc       	out	0x24, r8	; 36
      c0:	bf fd       	.word	0xfdbf	; ????
      c2:	c1 2f       	mov	r28, r17
      c4:	3d 6c       	ori	r19, 0xCD	; 205
      c6:	74 31       	cpi	r23, 0x14	; 20
      c8:	9a bd       	out	0x2a, r25	; 42
      ca:	56 83       	std	Z+6, r21	; 0x06
      cc:	3d da       	rcall	.-2950   	; 0xfffff548 <__eeprom_end+0xff7ef548>
      ce:	3d 00       	.word	0x003d	; ????
      d0:	c7 7f       	andi	r28, 0xF7	; 247
      d2:	11 be       	out	0x31, r1	; 49
      d4:	d9 e4       	ldi	r29, 0x49	; 73
      d6:	bb 4c       	sbci	r27, 0xCB	; 203
      d8:	3e 91       	ld	r19, -X
      da:	6b aa       	std	Y+51, r6	; 0x33
      dc:	aa be       	out	0x3a, r10	; 58
      de:	00 00       	nop
      e0:	00 80       	ld	r0, Z
      e2:	3f 07       	cpc	r19, r31
      e4:	2c 7a       	andi	r18, 0xAC	; 172
      e6:	a5 ba       	out	0x15, r10	; 21
      e8:	6c c5       	rjmp	.+2776   	; 0xbc2 <nominal+0x1e4>
      ea:	90 da       	rcall	.-2784   	; 0xfffff60c <__eeprom_end+0xff7ef60c>
      ec:	3b 93       	.word	0x933b	; ????
      ee:	65 fc       	sbrc	r6, 5
      f0:	8b bc       	out	0x2b, r8	; 43
      f2:	53 f8       	bld	r5, 3
      f4:	10 fd       	sbrc	r17, 0
      f6:	3c 56       	subi	r19, 0x6C	; 108
      f8:	92 83       	std	Z+2, r25	; 0x02
      fa:	4d bd       	out	0x2d, r20	; 45
      fc:	87 9d       	mul	r24, r7
      fe:	3a b6       	in	r3, 0x3a	; 58
     100:	3d cb       	rjmp	.-2438   	; 0xfffff77c <__eeprom_end+0xff7ef77c>
     102:	c9 bf       	out	0x39, r28	; 57
     104:	5b be       	out	0x3b, r5	; 59
     106:	73 da       	rcall	.-2842   	; 0xfffff5ee <__eeprom_end+0xff7ef5ee>
     108:	0f c9       	rjmp	.-3554   	; 0xfffff328 <__eeprom_end+0xff7ef328>
     10a:	3f 05       	cpc	r19, r15
     10c:	a8 4c       	sbci	r26, 0xC8	; 200
     10e:	cd b2       	in	r12, 0x1d	; 29
     110:	d4 4e       	sbci	r29, 0xE4	; 228
     112:	b9 38       	cpi	r27, 0x89	; 137
     114:	36 a9       	ldd	r19, Z+54	; 0x36
     116:	02 0c       	add	r0, r2
     118:	50 b9       	out	0x00, r21	; 0
     11a:	91 86       	std	Z+9, r9	; 0x09
     11c:	88 08       	sbc	r8, r8
     11e:	3c a6       	std	Y+44, r3	; 0x2c
     120:	aa aa       	std	Y+50, r10	; 0x32
     122:	2a be       	out	0x3a, r2	; 58
     124:	00 00       	nop
     126:	00 80       	ld	r0, Z
     128:	3f 07       	cpc	r19, r31
     12a:	63 42       	sbci	r22, 0x23	; 35
     12c:	36 b7       	in	r19, 0x36	; 54
     12e:	9b d8       	rcall	.-3786   	; 0xfffff266 <__eeprom_end+0xff7ef266>
     130:	a7 1a       	sub	r10, r23
     132:	39 68       	ori	r19, 0x89	; 137
     134:	56 18       	sub	r5, r6
     136:	ae ba       	out	0x1e, r10	; 30
     138:	ab 55       	subi	r26, 0x5B	; 91
     13a:	8c 1d       	adc	r24, r12
     13c:	3c b7       	in	r19, 0x3c	; 60
     13e:	cc 57       	subi	r28, 0x7C	; 124
     140:	63 bd       	out	0x23, r22	; 35
     142:	6d ed       	ldi	r22, 0xDD	; 221
     144:	fd 75       	andi	r31, 0x5D	; 93
     146:	3e f6       	brtc	.-114    	; 0xd6 <__SREG__+0x97>
     148:	17 72       	andi	r17, 0x27	; 39
     14a:	31 bf       	out	0x31, r19	; 49
     14c:	00 00       	nop
     14e:	00 80       	ld	r0, Z
     150:	3f 08       	sbc	r3, r15
     152:	00 00       	nop
     154:	00 be       	out	0x30, r0	; 48
     156:	92 24       	eor	r9, r2
     158:	49 12       	cpse	r4, r25
     15a:	3e ab       	std	Y+54, r19	; 0x36
     15c:	aa aa       	std	Y+50, r10	; 0x32
     15e:	2a be       	out	0x3a, r2	; 58
     160:	cd cc       	rjmp	.-1638   	; 0xfffffafc <__eeprom_end+0xff7efafc>
     162:	cc 4c       	sbci	r28, 0xCC	; 204
     164:	3e 00       	.word	0x003e	; ????
     166:	00 00       	nop
     168:	80 be       	out	0x30, r8	; 48
     16a:	ab aa       	std	Y+51, r10	; 0x33
     16c:	aa aa       	std	Y+50, r10	; 0x32
     16e:	3e 00       	.word	0x003e	; ????
     170:	00 00       	nop
     172:	00 bf       	out	0x30, r16	; 48
     174:	00 00       	nop
     176:	00 80       	ld	r0, Z
     178:	3f 00       	.word	0x003f	; ????
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 41       	sbci	r16, 0x18	; 24
     180:	78 d3       	rcall	.+1776   	; 0x872 <detumbling+0x66>
     182:	bb 43       	sbci	r27, 0x3B	; 59
     184:	87 d1       	rcall	.+782    	; 0x494 <__trampolines_end+0x2e8>
     186:	13 3d       	cpi	r17, 0xD3	; 211
     188:	19 0e       	add	r1, r25
     18a:	3c c3       	rjmp	.+1656   	; 0x804 <.do_clear_bss_start+0x8>
     18c:	bd 42       	sbci	r27, 0x2D	; 45
     18e:	82 ad       	ldd	r24, Z+58	; 0x3a
     190:	2b 3e       	cpi	r18, 0xEB	; 235
     192:	68 ec       	ldi	r22, 0xC8	; 200
     194:	82 76       	andi	r24, 0x62	; 98
     196:	be d9       	rcall	.-3204   	; 0xfffff514 <__eeprom_end+0xff7ef514>
     198:	8f e1       	ldi	r24, 0x1F	; 31
     19a:	a9 3e       	cpi	r26, 0xE9	; 233
     19c:	4c 80       	ldd	r4, Y+4	; 0x04
     19e:	ef ff       	.word	0xffef	; ????
     1a0:	be 01       	movw	r22, r28
     1a2:	c4 ff       	sbrs	r28, 4
     1a4:	7f 3f       	cpi	r23, 0xFF	; 255
     1a6:	00 00       	nop
     1a8:	00 00       	nop
	...

000001ac <__trampolines_end>:
     1ac:	00 00       	nop
     1ae:	00 00       	nop
     1b0:	cd cc       	rjmp	.-1638   	; 0xfffffb4c <__eeprom_end+0xff7efb4c>
     1b2:	24 41       	sbci	r18, 0x14	; 20
     1b4:	cd cc       	rjmp	.-1638   	; 0xfffffb50 <__eeprom_end+0xff7efb50>
     1b6:	90 41       	sbci	r25, 0x10	; 16
     1b8:	cd cc       	rjmp	.-1638   	; 0xfffffb54 <__eeprom_end+0xff7efb54>
     1ba:	d4 c1       	rjmp	.+936    	; 0x564 <agh+0xa8>
     1bc:	33 33       	cpi	r19, 0x33	; 51
     1be:	0b c1       	rjmp	.+534    	; 0x3d6 <__trampolines_end+0x22a>
     1c0:	33 33       	cpi	r19, 0x33	; 51
     1c2:	53 c0       	rjmp	.+166    	; 0x26a <__trampolines_end+0xbe>
     1c4:	33 33       	cpi	r19, 0x33	; 51
     1c6:	db c1       	rjmp	.+950    	; 0x57e <agh+0xc2>
     1c8:	66 66       	ori	r22, 0x66	; 102
     1ca:	06 40       	sbci	r16, 0x06	; 6
     1cc:	9a 99       	sbic	0x13, 2	; 19
     1ce:	61 c1       	rjmp	.+706    	; 0x492 <__trampolines_end+0x2e6>
     1d0:	9a 99       	sbic	0x13, 2	; 19
     1d2:	59 40       	sbci	r21, 0x09	; 9
     1d4:	00 00       	nop
     1d6:	b0 c0       	rjmp	.+352    	; 0x338 <__trampolines_end+0x18c>
     1d8:	33 33       	cpi	r19, 0x33	; 51
     1da:	03 41       	sbci	r16, 0x13	; 19
     1dc:	33 33       	cpi	r19, 0x33	; 51
     1de:	33 bf       	out	0x33, r19	; 51
     1e0:	cd cc       	rjmp	.-1638   	; 0xfffffb7c <__eeprom_end+0xff7efb7c>
     1e2:	cc be       	out	0x3c, r12	; 60
     1e4:	9a 99       	sbic	0x13, 2	; 19
     1e6:	21 c1       	rjmp	.+578    	; 0x42a <__trampolines_end+0x27e>
     1e8:	66 66       	ori	r22, 0x66	; 102
     1ea:	e6 3f       	cpi	r30, 0xF6	; 246
     1ec:	33 33       	cpi	r19, 0x33	; 51
     1ee:	33 bf       	out	0x33, r19	; 51
     1f0:	cd cc       	rjmp	.-1638   	; 0xfffffb8c <__eeprom_end+0xff7efb8c>
     1f2:	4c 3e       	cpi	r20, 0xEC	; 236
     1f4:	66 66       	ori	r22, 0x66	; 102
     1f6:	a6 bf       	out	0x36, r26	; 54
     1f8:	9a 99       	sbic	0x13, 2	; 19
     1fa:	11 c1       	rjmp	.+546    	; 0x41e <__trampolines_end+0x272>
     1fc:	9a 99       	sbic	0x13, 2	; 19
     1fe:	a9 40       	sbci	r26, 0x09	; 9
     200:	33 33       	cpi	r19, 0x33	; 51
     202:	83 40       	sbci	r24, 0x03	; 3
     204:	9a 99       	sbic	0x13, 2	; 19
     206:	39 40       	sbci	r19, 0x09	; 9
     208:	9a 99       	sbic	0x13, 2	; 19
     20a:	89 c0       	rjmp	.+274    	; 0x31e <__trampolines_end+0x172>
     20c:	66 66       	ori	r22, 0x66	; 102
     20e:	a6 c0       	rjmp	.+332    	; 0x35c <__trampolines_end+0x1b0>
     210:	cd cc       	rjmp	.-1638   	; 0xfffffbac <__eeprom_end+0xff7efbac>
     212:	4c be       	out	0x3c, r4	; 60
     214:	00 00       	nop
     216:	00 3f       	cpi	r16, 0xF0	; 240
     218:	9a 99       	sbic	0x13, 2	; 19
     21a:	19 3f       	cpi	r17, 0xF9	; 249
     21c:	66 66       	ori	r22, 0x66	; 102
     21e:	a6 bf       	out	0x36, r26	; 54
     220:	9a 99       	sbic	0x13, 2	; 19
     222:	d9 3f       	cpi	r29, 0xF9	; 249
     224:	cd cc       	rjmp	.-1638   	; 0xfffffbc0 <__eeprom_end+0xff7efbc0>
     226:	cc bd       	out	0x2c, r28	; 44
     228:	9a 99       	sbic	0x13, 2	; 19
     22a:	99 bf       	out	0x39, r25	; 57
     22c:	33 33       	cpi	r19, 0x33	; 51
     22e:	b3 3f       	cpi	r27, 0xF3	; 243
     230:	9a 99       	sbic	0x13, 2	; 19
     232:	59 40       	sbci	r21, 0x09	; 9
     234:	9a 99       	sbic	0x13, 2	; 19
     236:	79 40       	sbci	r23, 0x09	; 9
     238:	00 00       	nop
     23a:	00 00       	nop
     23c:	9a 99       	sbic	0x13, 2	; 19
     23e:	99 be       	out	0x39, r9	; 57
     240:	cd cc       	rjmp	.-1638   	; 0xfffffbdc <__eeprom_end+0xff7efbdc>
     242:	cc bd       	out	0x2c, r28	; 44
     244:	00 00       	nop
     246:	00 00       	nop
     248:	33 33       	cpi	r19, 0x33	; 51
     24a:	33 bf       	out	0x33, r19	; 51
     24c:	66 66       	ori	r22, 0x66	; 102
     24e:	06 c0       	rjmp	.+12     	; 0x25c <__trampolines_end+0xb0>
     250:	66 66       	ori	r22, 0x66	; 102
     252:	06 40       	sbci	r16, 0x06	; 6
     254:	33 33       	cpi	r19, 0x33	; 51
     256:	33 bf       	out	0x33, r19	; 51
     258:	9a 99       	sbic	0x13, 2	; 19
     25a:	99 bf       	out	0x39, r25	; 57
     25c:	cd cc       	rjmp	.-1638   	; 0xfffffbf8 <__eeprom_end+0xff7efbf8>
     25e:	4c 3e       	cpi	r20, 0xEC	; 236
     260:	9a 99       	sbic	0x13, 2	; 19
     262:	99 3e       	cpi	r25, 0xE9	; 233
     264:	66 66       	ori	r22, 0x66	; 102
     266:	66 3f       	cpi	r22, 0xF6	; 246
     268:	cd cc       	rjmp	.-1638   	; 0xfffffc04 <__eeprom_end+0xff7efc04>
     26a:	cc 3f       	cpi	r28, 0xFC	; 252
     26c:	00 00       	nop
     26e:	80 3f       	cpi	r24, 0xF0	; 240
     270:	9a 99       	sbic	0x13, 2	; 19
     272:	99 3e       	cpi	r25, 0xE9	; 233
     274:	cd cc       	rjmp	.-1638   	; 0xfffffc10 <__eeprom_end+0xff7efc10>
     276:	4c be       	out	0x3c, r4	; 60
     278:	cd cc       	rjmp	.-1638   	; 0xfffffc14 <__eeprom_end+0xff7efc14>
     27a:	4c 3f       	cpi	r20, 0xFC	; 252
     27c:	00 00       	nop
     27e:	00 bf       	out	0x30, r16	; 48
     280:	cd cc       	rjmp	.-1638   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
     282:	cc 3e       	cpi	r28, 0xEC	; 236
     284:	66 66       	ori	r22, 0x66	; 102
     286:	a6 3f       	cpi	r26, 0xF6	; 246
     288:	cd cc       	rjmp	.-1638   	; 0xfffffc24 <__eeprom_end+0xff7efc24>
     28a:	4c be       	out	0x3c, r4	; 60
     28c:	cd cc       	rjmp	.-1638   	; 0xfffffc28 <__eeprom_end+0xff7efc28>
     28e:	cc 3d       	cpi	r28, 0xDC	; 220
     290:	9a 99       	sbic	0x13, 2	; 19
     292:	99 be       	out	0x39, r9	; 57
     294:	9a 99       	sbic	0x13, 2	; 19
     296:	19 bf       	out	0x39, r17	; 57
     298:	9a 99       	sbic	0x13, 2	; 19
     29a:	19 bf       	out	0x39, r17	; 57
     29c:	cd cc       	rjmp	.-1638   	; 0xfffffc38 <__eeprom_end+0xff7efc38>
     29e:	4c bf       	out	0x3c, r20	; 60
     2a0:	cd cc       	rjmp	.-1638   	; 0xfffffc3c <__eeprom_end+0xff7efc3c>
     2a2:	cc 3d       	cpi	r28, 0xDC	; 220
     2a4:	cd cc       	rjmp	.-1638   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
     2a6:	4c 3e       	cpi	r20, 0xEC	; 236
     2a8:	cd cc       	rjmp	.-1638   	; 0xfffffc44 <__eeprom_end+0xff7efc44>
     2aa:	4c be       	out	0x3c, r4	; 60
     2ac:	cd cc       	rjmp	.-1638   	; 0xfffffc48 <__eeprom_end+0xff7efc48>
     2ae:	4c 3e       	cpi	r20, 0xEC	; 236
     2b0:	00 00       	nop
     2b2:	00 00       	nop
     2b4:	9a 99       	sbic	0x13, 2	; 19
     2b6:	99 be       	out	0x39, r9	; 57
     2b8:	9a 99       	sbic	0x13, 2	; 19
     2ba:	19 bf       	out	0x39, r17	; 57
     2bc:	9a 99       	sbic	0x13, 2	; 19
     2be:	99 3e       	cpi	r25, 0xE9	; 233
     2c0:	00 00       	nop
     2c2:	00 3f       	cpi	r16, 0xF0	; 240
     2c4:	cd cc       	rjmp	.-1638   	; 0xfffffc60 <__eeprom_end+0xff7efc60>
     2c6:	cc 3d       	cpi	r28, 0xDC	; 220
     2c8:	cd cc       	rjmp	.-1638   	; 0xfffffc64 <__eeprom_end+0xff7efc64>
     2ca:	4c be       	out	0x3c, r4	; 60
     2cc:	00 00       	nop
     2ce:	00 3f       	cpi	r16, 0xF0	; 240
     2d0:	cd cc       	rjmp	.-1638   	; 0xfffffc6c <__eeprom_end+0xff7efc6c>
     2d2:	cc 3e       	cpi	r28, 0xEC	; 236
     2d4:	cd cc       	rjmp	.-1638   	; 0xfffffc70 <__eeprom_end+0xff7efc70>
     2d6:	4c be       	out	0x3c, r4	; 60
     2d8:	cd cc       	rjmp	.-1638   	; 0xfffffc74 <__eeprom_end+0xff7efc74>
     2da:	cc 3d       	cpi	r28, 0xDC	; 220
     2dc:	9a 99       	sbic	0x13, 2	; 19
     2de:	99 be       	out	0x39, r9	; 57
     2e0:	cd cc       	rjmp	.-1638   	; 0xfffffc7c <__eeprom_end+0xff7efc7c>
     2e2:	cc be       	out	0x3c, r12	; 60
     2e4:	9a 99       	sbic	0x13, 2	; 19
     2e6:	99 3e       	cpi	r25, 0xE9	; 233
     2e8:	9a 99       	sbic	0x13, 2	; 19
     2ea:	99 3e       	cpi	r25, 0xE9	; 233
	...

000004bc <agh>:
     4bc:	00 00 00 00 00 04 e6 c6 00 a0 bb c4 cd e8 95 45     ...............E
     4cc:	9a d1 18 c5 66 4e 3c 45 9a d9 31 c5 66 96 d1 44     ....fN<E..1.f..D
     4dc:	9a 79 20 c4 66 d6 a8 44 cd 04 13 c5 9a 99 e6 c2     .y .f..D........
     4ec:	33 33 99 44 66 e6 74 43 00 80 11 44 9a 99 06 c4     33.Df.tC...D....
     4fc:	66 e6 62 44 cd 6c 4b 44 66 a6 8d 43 cd cc f0 42     f.bD.lKDf..C...B
     50c:	33 b3 3c c3 33 73 a7 c3 66 e6 34 43 cd cc 8c 42     3.<.3s..f.4C...B
     51c:	00 c0 a4 c3 9a 99 68 c3 cd 0c b4 43 33 33 3d 42     ......h....C33=B
     52c:	66 66 40 43 00 00 45 43 66 e6 0c c3 9a 99 ee c2     ff@C..ECf.......
     53c:	00 80 1d c3 00 00 80 41 33 33 83 40 66 66 c8 42     .......A33.@ff.B
     54c:	00 00 8c 42 66 66 87 42 66 66 a6 c1 66 66 91 42     ...Bff.Bff..ff.B
     55c:	cd cc 04 42 66 e6 01 c3 9a 99 6b 42 33 33 e7 c1     ...Bf.....kB33..
     56c:	66 66 85 c2 33 33 53 41 9a 99 e9 40 cd cc 8d c2     ff..33SA...@....
     57c:	66 66 7a 42 33 33 a3 42 33 33 98 c2 66 66 58 c2     ffzB33.B33..ffX.
     58c:	9a 99 d9 c0 00 00 9c c1 33 33 4f 42 66 66 b6 40     ........33OBff.@
     59c:	00 00 70 41 33 33 c3 41 66 66 16 41 9a 99 59 40     ..pA33.Aff.A..Y@
     5ac:	33 33 33 c0 33 33 db c1 9a 99 d9 40 cd cc 0c c0     333.33.....@....
     5bc:	9a 99 c1 41 cd cc 0c 41 9a 99 21 41 33 33 87 c1     ...A...A..!A33..
     5cc:	66 66 92 c1 cd cc 4c c0 cd cc 54 41 cd cc a4 c1     ff....L...TA....
     5dc:	9a 99 69 c1 66 66 56 41 9a 99 81 41 33 33 3b 41     ..i.ffVA...A33;A
     5ec:	66 66 b6 40 66 66 7e c1 9a 99 11 c1 00 00 00 c0     ff.@ff~.........
     5fc:	66 66 06 40 cd cc ac 40 cd cc 0c 41 cd cc ac c1     ff.@...@...A....
     60c:	66 66 46 40 cd cc 2c 41 33 33 53 c0 cd cc 3c 41     ffF@..,A33S...<A
     61c:	33 33 33 3f 9a 99 d9 c0 cd cc 54 c1 cd cc dc c0     333?......T.....
     62c:	cd cc cc bd 9a 99 f9 40 33 33 0b 41 00 00 80 3f     .......@33.A...?
     63c:	9a 99 11 c1 00 00 80 c0 00 00 28 c1 66 66 06 41     ..........(.ff.A
     64c:	33 33 f3 bf 9a 99 c9 c0 cd cc 4c 40 cd cc cc 3d     33........L@...=
     65c:	cd cc cc be 00 00 00 3f 33 33 93 40 00 00 00 bf     .......?33.@....
     66c:	cd cc 8c 40 66 66 e6 3f cd cc fc c0 33 33 33 bf     ...@ff.?....333.
     67c:	9a 99 19 bf 66 66 06 40 66 66 86 c0 9a 99 19 40     ....ff.@ff.....@
     68c:	33 33 33 c0 66 66 e6 bf 9a 99 99 bf 66 66 66 c0     333.ff......fff.
     69c:	33 33 0b c1 66 66 46 40 00 00 c0 bf cd cc cc bd     33..ffF@........
     6ac:	33 33 13 c0 00 00 00 40 00 00 00 40 33 33 33 bf     33.....@...@333.
     6bc:	cd cc 4c bf cd cc 8c bf 9a 99 19 3f cd cc 4c 3f     ..L........?..L?
     6cc:	33 33 33 bf cd cc 4c be cd cc 4c 3e cd cc 0c c0     333...L...L>....
     6dc:	9a 99 d9 3f 33 33 b3 bf cd cc 4c be 00 00 20 c0     ...?33....L... .
     6ec:	cd cc cc 3e 00 00 00 c0 00 00 60 40 9a 99 19 c0     ...>......`@....
     6fc:	33 33 f3 bf cd cc 4c be cd cc 8c bf cd cc cc 3e     33....L........>
     70c:	cd cc cc 3e 9a 99 99 3f 33 33 f3 3f cd cc 4c bf     ...>...?33.?..L.
     71c:	cd cc 0c c0 66 66 66 3f 9a 99 99 3e cd cc cc 3d     ....fff?...>...=
     72c:	33 33 33 3f 00 00 00 3f cd cc cc bd 9a 99 99 be     333?...?........
     73c:	9a 99 99 3e cd cc cc be cd cc 4c 3e cd cc 4c 3e     ...>......L>..L>
     74c:	66 66 66 bf 66 66 66 bf cd cc cc bd 00 00 00 00     fff.fff.........
     75c:	33 33 33 3f 00 00 00 00 66 66 66 bf 66 66 66 bf     333?....fff.fff.
     76c:	cd cc cc 3e cd cc cc 3e 00 00 00 3f cd cc cc 3f     ...>...>...?...?
     77c:	00 00 00 bf 00 00 00 bf 00 00 80 3f 9a 99 99 bf     ...........?....
     78c:	cd cc 4c be cd cc cc bd cd cc 4c 3f cd cc cc 3e     ..L.......L?...>
     79c:	cd cc cc bd cd cc cc bd 9a 99 99 3e cd cc cc 3e     ...........>...>
     7ac:	cd cc cc 3d 00 00 00 3f 00 00 00 3f 9a 99 99 be     ...=...?...?....
     7bc:	cd cc cc be cd cc cc be 9a 99 99 be cd cc 4c bf     ..............L.

000007cc <__ctors_end>:
     7cc:	11 24       	eor	r1, r1
     7ce:	1f be       	out	0x3f, r1	; 63
     7d0:	cf ef       	ldi	r28, 0xFF	; 255
     7d2:	d0 e1       	ldi	r29, 0x10	; 16
     7d4:	de bf       	out	0x3e, r29	; 62
     7d6:	cd bf       	out	0x3d, r28	; 61

000007d8 <__do_copy_data>:
     7d8:	11 e0       	ldi	r17, 0x01	; 1
     7da:	a0 e0       	ldi	r26, 0x00	; 0
     7dc:	b1 e0       	ldi	r27, 0x01	; 1
     7de:	e8 e1       	ldi	r30, 0x18	; 24
     7e0:	ff e6       	ldi	r31, 0x6F	; 111
     7e2:	00 e0       	ldi	r16, 0x00	; 0
     7e4:	0b bf       	out	0x3b, r16	; 59
     7e6:	02 c0       	rjmp	.+4      	; 0x7ec <__do_copy_data+0x14>
     7e8:	07 90       	elpm	r0, Z+
     7ea:	0d 92       	st	X+, r0
     7ec:	a6 3a       	cpi	r26, 0xA6	; 166
     7ee:	b1 07       	cpc	r27, r17
     7f0:	d9 f7       	brne	.-10     	; 0x7e8 <__do_copy_data+0x10>

000007f2 <__do_clear_bss>:
     7f2:	25 e0       	ldi	r18, 0x05	; 5
     7f4:	a6 ea       	ldi	r26, 0xA6	; 166
     7f6:	b1 e0       	ldi	r27, 0x01	; 1
     7f8:	01 c0       	rjmp	.+2      	; 0x7fc <.do_clear_bss_start>

000007fa <.do_clear_bss_loop>:
     7fa:	1d 92       	st	X+, r1

000007fc <.do_clear_bss_start>:
     7fc:	a0 34       	cpi	r26, 0x40	; 64
     7fe:	b2 07       	cpc	r27, r18
     800:	e1 f7       	brne	.-8      	; 0x7fa <.do_clear_bss_loop>
     802:	0e 94 6e 2d 	call	0x5adc	; 0x5adc <main>
     806:	0c 94 8a 37 	jmp	0x6f14	; 0x6f14 <_exit>

0000080a <__bad_interrupt>:
     80a:	fa cb       	rjmp	.-2060   	; 0x0 <__vectors>

0000080c <detumbling>:
static matrix m_Kd = { {0.000535150172975969,	-3.12026783469290e-07,	-1.96841119693718e-06},
						{-3.12026783469290e-07,	0.000544550567435251,	-7.23446290799174e-06},
						{-1.96841119693718e-06,	-7.23446290799174e-06,	0.000520788038046765} };

void detumbling(vector v_m_D)
{
     80c:	2f 92       	push	r2
     80e:	3f 92       	push	r3
     810:	4f 92       	push	r4
     812:	5f 92       	push	r5
     814:	6f 92       	push	r6
     816:	7f 92       	push	r7
     818:	8f 92       	push	r8
     81a:	9f 92       	push	r9
     81c:	af 92       	push	r10
     81e:	bf 92       	push	r11
     820:	cf 92       	push	r12
     822:	df 92       	push	r13
     824:	ef 92       	push	r14
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	cd b7       	in	r28, 0x3d	; 61
     832:	de b7       	in	r29, 0x3e	; 62
     834:	6a 97       	sbiw	r28, 0x1a	; 26
     836:	0f b6       	in	r0, 0x3f	; 63
     838:	f8 94       	cli
     83a:	de bf       	out	0x3e, r29	; 62
     83c:	0f be       	out	0x3f, r0	; 63
     83e:	cd bf       	out	0x3d, r28	; 61
     840:	9a 8f       	std	Y+26, r25	; 0x1a
     842:	89 8f       	std	Y+25, r24	; 0x19
	static vector v_B_old;
	  v_B[2] = Current_state.mm.B_x;
     844:	80 91 14 05 	lds	r24, 0x0514
     848:	90 91 15 05 	lds	r25, 0x0515
     84c:	a0 91 16 05 	lds	r26, 0x0516
     850:	b0 91 17 05 	lds	r27, 0x0517
     854:	ef ef       	ldi	r30, 0xFF	; 255
     856:	f1 e0       	ldi	r31, 0x01	; 1
     858:	80 87       	std	Z+8, r24	; 0x08
     85a:	91 87       	std	Z+9, r25	; 0x09
     85c:	a2 87       	std	Z+10, r26	; 0x0a
     85e:	b3 87       	std	Z+11, r27	; 0x0b
	  v_B[1] = -1*Current_state.mm.B_y;
     860:	80 91 18 05 	lds	r24, 0x0518
     864:	90 91 19 05 	lds	r25, 0x0519
     868:	a0 91 1a 05 	lds	r26, 0x051A
     86c:	b0 91 1b 05 	lds	r27, 0x051B
     870:	b0 58       	subi	r27, 0x80	; 128
     872:	84 83       	std	Z+4, r24	; 0x04
     874:	95 83       	std	Z+5, r25	; 0x05
     876:	a6 83       	std	Z+6, r26	; 0x06
     878:	b7 83       	std	Z+7, r27	; 0x07
	  v_B[0] = Current_state.mm.B_z;
     87a:	80 91 1c 05 	lds	r24, 0x051C
     87e:	90 91 1d 05 	lds	r25, 0x051D
     882:	a0 91 1e 05 	lds	r26, 0x051E
     886:	b0 91 1f 05 	lds	r27, 0x051F
     88a:	80 83       	st	Z, r24
     88c:	91 83       	std	Z+1, r25	; 0x01
     88e:	a2 83       	std	Z+2, r26	; 0x02
     890:	b3 83       	std	Z+3, r27	; 0x03
	  
	if(first_B)
     892:	80 91 0c 01 	lds	r24, 0x010C
     896:	88 23       	and	r24, r24
     898:	41 f0       	breq	.+16     	; 0x8aa <detumbling+0x9e>
	{
		
		copy_vector(v_B, v_B_old);
     89a:	66 ea       	ldi	r22, 0xA6	; 166
     89c:	71 e0       	ldi	r23, 0x01	; 1
     89e:	cf 01       	movw	r24, r30
     8a0:	0e 94 f7 1c 	call	0x39ee	; 0x39ee <copy_vector>
		first_B = 0;
     8a4:	10 92 0c 01 	sts	0x010C, r1
     8a8:	81 c0       	rjmp	.+258    	; 0x9ac <detumbling+0x1a0>
     8aa:	0f ef       	ldi	r16, 0xFF	; 255
     8ac:	11 e0       	ldi	r17, 0x01	; 1
     8ae:	0f 2e       	mov	r0, r31
     8b0:	f6 ea       	ldi	r31, 0xA6	; 166
     8b2:	8f 2e       	mov	r8, r31
     8b4:	f1 e0       	ldi	r31, 0x01	; 1
     8b6:	9f 2e       	mov	r9, r31
     8b8:	f0 2d       	mov	r31, r0
     8ba:	5e 01       	movw	r10, r28
     8bc:	8d e0       	ldi	r24, 0x0D	; 13
     8be:	a8 0e       	add	r10, r24
     8c0:	b1 1c       	adc	r11, r1
     8c2:	fe 01       	movw	r30, r28
     8c4:	31 96       	adiw	r30, 0x01	; 1
     8c6:	1f 01       	movw	r2, r30
	double factor;
	uint8_t i;
	
	for(i = 0; i < 3; i++)
	{
		v_dB[i] = (v_B[i] - v_B_old[i]) / FRAME_TIME;
     8c8:	f8 01       	movw	r30, r16
     8ca:	c1 90       	ld	r12, Z+
     8cc:	d1 90       	ld	r13, Z+
     8ce:	e1 90       	ld	r14, Z+
     8d0:	f1 90       	ld	r15, Z+
     8d2:	8f 01       	movw	r16, r30
     8d4:	f4 01       	movw	r30, r8
     8d6:	41 90       	ld	r4, Z+
     8d8:	51 90       	ld	r5, Z+
     8da:	61 90       	ld	r6, Z+
     8dc:	71 90       	ld	r7, Z+
     8de:	4f 01       	movw	r8, r30
     8e0:	a3 01       	movw	r20, r6
     8e2:	92 01       	movw	r18, r4
     8e4:	c7 01       	movw	r24, r14
     8e6:	b6 01       	movw	r22, r12
     8e8:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
     8ec:	20 e0       	ldi	r18, 0x00	; 0
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	40 e0       	ldi	r20, 0x00	; 0
     8f2:	5f e3       	ldi	r21, 0x3F	; 63
     8f4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     8f8:	f5 01       	movw	r30, r10
     8fa:	61 93       	st	Z+, r22
     8fc:	71 93       	st	Z+, r23
     8fe:	81 93       	st	Z+, r24
     900:	91 93       	st	Z+, r25
     902:	5f 01       	movw	r10, r30
		v_B_avg[i] = (v_B[i] + v_B_old[i]) / 2;
     904:	a3 01       	movw	r20, r6
     906:	92 01       	movw	r18, r4
     908:	c7 01       	movw	r24, r14
     90a:	b6 01       	movw	r22, r12
     90c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     91c:	f1 01       	movw	r30, r2
     91e:	61 93       	st	Z+, r22
     920:	71 93       	st	Z+, r23
     922:	81 93       	st	Z+, r24
     924:	91 93       	st	Z+, r25
     926:	1f 01       	movw	r2, r30
	
	vector v_B_avg, v_dB;
	double factor;
	uint8_t i;
	
	for(i = 0; i < 3; i++)
     928:	f2 e0       	ldi	r31, 0x02	; 2
     92a:	0b 30       	cpi	r16, 0x0B	; 11
     92c:	1f 07       	cpc	r17, r31
     92e:	61 f6       	brne	.-104    	; 0x8c8 <detumbling+0xbc>
	{
		v_dB[i] = (v_B[i] - v_B_old[i]) / FRAME_TIME;
		v_B_avg[i] = (v_B[i] + v_B_old[i]) / 2;
	}
	
	factor = (-1 * K_DETUMBLING * MAG_B) / vector_norm(v_B_avg);                         //factor = -1 / vector_norm(v_B_avg);//??????
     930:	ce 01       	movw	r24, r28
     932:	01 96       	adiw	r24, 0x01	; 1
     934:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <vector_norm>
     938:	9b 01       	movw	r18, r22
     93a:	ac 01       	movw	r20, r24
     93c:	60 e0       	ldi	r22, 0x00	; 0
     93e:	70 e0       	ldi	r23, 0x00	; 0
     940:	80 e8       	ldi	r24, 0x80	; 128
     942:	9f eb       	ldi	r25, 0xBF	; 191
     944:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     948:	6b 01       	movw	r12, r22
     94a:	7c 01       	movw	r14, r24
	
	for(i = 0; i < 3; i++)
	{
		v_m_D[i] = factor *v_dB[i];
     94c:	9b 01       	movw	r18, r22
     94e:	ac 01       	movw	r20, r24
     950:	6d 85       	ldd	r22, Y+13	; 0x0d
     952:	7e 85       	ldd	r23, Y+14	; 0x0e
     954:	8f 85       	ldd	r24, Y+15	; 0x0f
     956:	98 89       	ldd	r25, Y+16	; 0x10
     958:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     95c:	e9 8d       	ldd	r30, Y+25	; 0x19
     95e:	fa 8d       	ldd	r31, Y+26	; 0x1a
     960:	60 83       	st	Z, r22
     962:	71 83       	std	Z+1, r23	; 0x01
     964:	82 83       	std	Z+2, r24	; 0x02
     966:	93 83       	std	Z+3, r25	; 0x03
     968:	a7 01       	movw	r20, r14
     96a:	96 01       	movw	r18, r12
     96c:	69 89       	ldd	r22, Y+17	; 0x11
     96e:	7a 89       	ldd	r23, Y+18	; 0x12
     970:	8b 89       	ldd	r24, Y+19	; 0x13
     972:	9c 89       	ldd	r25, Y+20	; 0x14
     974:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     978:	e9 8d       	ldd	r30, Y+25	; 0x19
     97a:	fa 8d       	ldd	r31, Y+26	; 0x1a
     97c:	64 83       	std	Z+4, r22	; 0x04
     97e:	75 83       	std	Z+5, r23	; 0x05
     980:	86 83       	std	Z+6, r24	; 0x06
     982:	97 83       	std	Z+7, r25	; 0x07
     984:	a7 01       	movw	r20, r14
     986:	96 01       	movw	r18, r12
     988:	6d 89       	ldd	r22, Y+21	; 0x15
     98a:	7e 89       	ldd	r23, Y+22	; 0x16
     98c:	8f 89       	ldd	r24, Y+23	; 0x17
     98e:	98 8d       	ldd	r25, Y+24	; 0x18
     990:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     994:	e9 8d       	ldd	r30, Y+25	; 0x19
     996:	fa 8d       	ldd	r31, Y+26	; 0x1a
     998:	60 87       	std	Z+8, r22	; 0x08
     99a:	71 87       	std	Z+9, r23	; 0x09
     99c:	82 87       	std	Z+10, r24	; 0x0a
     99e:	93 87       	std	Z+11, r25	; 0x0b
		
	}
	
	copy_vector(v_B, v_B_old);
     9a0:	66 ea       	ldi	r22, 0xA6	; 166
     9a2:	71 e0       	ldi	r23, 0x01	; 1
     9a4:	8f ef       	ldi	r24, 0xFF	; 255
     9a6:	91 e0       	ldi	r25, 0x01	; 1
     9a8:	0e 94 f7 1c 	call	0x39ee	; 0x39ee <copy_vector>
	
}
     9ac:	6a 96       	adiw	r28, 0x1a	; 26
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	f8 94       	cli
     9b2:	de bf       	out	0x3e, r29	; 62
     9b4:	0f be       	out	0x3f, r0	; 63
     9b6:	cd bf       	out	0x3d, r28	; 61
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	1f 91       	pop	r17
     9be:	0f 91       	pop	r16
     9c0:	ff 90       	pop	r15
     9c2:	ef 90       	pop	r14
     9c4:	df 90       	pop	r13
     9c6:	cf 90       	pop	r12
     9c8:	bf 90       	pop	r11
     9ca:	af 90       	pop	r10
     9cc:	9f 90       	pop	r9
     9ce:	8f 90       	pop	r8
     9d0:	7f 90       	pop	r7
     9d2:	6f 90       	pop	r6
     9d4:	5f 90       	pop	r5
     9d6:	4f 90       	pop	r4
     9d8:	3f 90       	pop	r3
     9da:	2f 90       	pop	r2
     9dc:	08 95       	ret

000009de <nominal>:
 

void nominal(vector v_m_N)
{
     9de:	2f 92       	push	r2
     9e0:	3f 92       	push	r3
     9e2:	4f 92       	push	r4
     9e4:	5f 92       	push	r5
     9e6:	6f 92       	push	r6
     9e8:	7f 92       	push	r7
     9ea:	8f 92       	push	r8
     9ec:	9f 92       	push	r9
     9ee:	af 92       	push	r10
     9f0:	bf 92       	push	r11
     9f2:	cf 92       	push	r12
     9f4:	df 92       	push	r13
     9f6:	ef 92       	push	r14
     9f8:	ff 92       	push	r15
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	e9 97       	sbiw	r28, 0x39	; 57
     a08:	0f b6       	in	r0, 0x3f	; 63
     a0a:	f8 94       	cli
     a0c:	de bf       	out	0x3e, r29	; 62
     a0e:	0f be       	out	0x3f, r0	; 63
     a10:	cd bf       	out	0x3d, r28	; 61
     a12:	9d ab       	std	Y+53, r25	; 0x35
     a14:	8c ab       	std	Y+52, r24	; 0x34
  //static vector v_ieu = { 0.0, 0.0, 0.0 };
	     v_B[2] = Current_state.mm.B_x/10000;
     a16:	60 91 14 05 	lds	r22, 0x0514
     a1a:	70 91 15 05 	lds	r23, 0x0515
     a1e:	80 91 16 05 	lds	r24, 0x0516
     a22:	90 91 17 05 	lds	r25, 0x0517
     a26:	0f ef       	ldi	r16, 0xFF	; 255
     a28:	11 e0       	ldi	r17, 0x01	; 1
     a2a:	20 e0       	ldi	r18, 0x00	; 0
     a2c:	30 e4       	ldi	r19, 0x40	; 64
     a2e:	4c e1       	ldi	r20, 0x1C	; 28
     a30:	56 e4       	ldi	r21, 0x46	; 70
     a32:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     a36:	f8 01       	movw	r30, r16
     a38:	60 87       	std	Z+8, r22	; 0x08
     a3a:	71 87       	std	Z+9, r23	; 0x09
     a3c:	82 87       	std	Z+10, r24	; 0x0a
     a3e:	93 87       	std	Z+11, r25	; 0x0b
	     v_B[1] = -1*(Current_state.mm.B_y/10000);
     a40:	60 91 18 05 	lds	r22, 0x0518
     a44:	70 91 19 05 	lds	r23, 0x0519
     a48:	80 91 1a 05 	lds	r24, 0x051A
     a4c:	90 91 1b 05 	lds	r25, 0x051B
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e4       	ldi	r19, 0x40	; 64
     a54:	4c e1       	ldi	r20, 0x1C	; 28
     a56:	56 e4       	ldi	r21, 0x46	; 70
     a58:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     a5c:	dc 01       	movw	r26, r24
     a5e:	cb 01       	movw	r24, r22
     a60:	b0 58       	subi	r27, 0x80	; 128
     a62:	f8 01       	movw	r30, r16
     a64:	84 83       	std	Z+4, r24	; 0x04
     a66:	95 83       	std	Z+5, r25	; 0x05
     a68:	a6 83       	std	Z+6, r26	; 0x06
     a6a:	b7 83       	std	Z+7, r27	; 0x07
	     v_B[0] = Current_state.mm.B_z/10000;
     a6c:	60 91 1c 05 	lds	r22, 0x051C
     a70:	70 91 1d 05 	lds	r23, 0x051D
     a74:	80 91 1e 05 	lds	r24, 0x051E
     a78:	90 91 1f 05 	lds	r25, 0x051F
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e4       	ldi	r19, 0x40	; 64
     a80:	4c e1       	ldi	r20, 0x1C	; 28
     a82:	56 e4       	ldi	r21, 0x46	; 70
     a84:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     a88:	f8 01       	movw	r30, r16
     a8a:	60 83       	st	Z, r22
     a8c:	71 83       	std	Z+1, r23	; 0x01
     a8e:	82 83       	std	Z+2, r24	; 0x02
     a90:	93 83       	std	Z+3, r25	; 0x03
	     
  vector v_eu;
  uint8_t i, j;
  float norm_B = vector_norm(v_B);
     a92:	c8 01       	movw	r24, r16
     a94:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <vector_norm>
     a98:	6f 87       	std	Y+15, r22	; 0x0f
     a9a:	78 8b       	std	Y+16, r23	; 0x10
     a9c:	89 8b       	std	Y+17, r24	; 0x11
     a9e:	9a 8b       	std	Y+18, r25	; 0x12
    
  for(i = 0; i < 3; i++)
  {
    v_eu[i] = 2 * q_o[i] * q_o[3];
     aa0:	40 90 94 04 	lds	r4, 0x0494
     aa4:	50 90 95 04 	lds	r5, 0x0495
     aa8:	60 90 96 04 	lds	r6, 0x0496
     aac:	70 90 97 04 	lds	r7, 0x0497
     ab0:	0f 2e       	mov	r0, r31
     ab2:	f8 e8       	ldi	r31, 0x88	; 136
     ab4:	ef 2e       	mov	r14, r31
     ab6:	f4 e0       	ldi	r31, 0x04	; 4
     ab8:	ff 2e       	mov	r15, r31
     aba:	f0 2d       	mov	r31, r0
     abc:	ce 01       	movw	r24, r28
     abe:	01 96       	adiw	r24, 0x01	; 1
     ac0:	4c 01       	movw	r8, r24
     ac2:	0f 2e       	mov	r0, r31
     ac4:	f7 ee       	ldi	r31, 0xE7	; 231
     ac6:	2f 2e       	mov	r2, r31
     ac8:	f1 e0       	ldi	r31, 0x01	; 1
     aca:	3f 2e       	mov	r3, r31
     acc:	f0 2d       	mov	r31, r0
     ace:	0f 2e       	mov	r0, r31
     ad0:	f4 e9       	ldi	r31, 0x94	; 148
     ad2:	af 2e       	mov	r10, r31
     ad4:	f4 e0       	ldi	r31, 0x04	; 4
     ad6:	bf 2e       	mov	r11, r31
     ad8:	f0 2d       	mov	r31, r0
     ada:	81 01       	movw	r16, r2
     adc:	6c 01       	movw	r12, r24
     ade:	f7 01       	movw	r30, r14
     ae0:	61 91       	ld	r22, Z+
     ae2:	71 91       	ld	r23, Z+
     ae4:	81 91       	ld	r24, Z+
     ae6:	91 91       	ld	r25, Z+
     ae8:	7f 01       	movw	r14, r30
     aea:	9b 01       	movw	r18, r22
     aec:	ac 01       	movw	r20, r24
     aee:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     af2:	a3 01       	movw	r20, r6
     af4:	92 01       	movw	r18, r4
     af6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     afa:	f6 01       	movw	r30, r12
     afc:	61 93       	st	Z+, r22
     afe:	71 93       	st	Z+, r23
     b00:	81 93       	st	Z+, r24
     b02:	91 93       	st	Z+, r25
     b04:	6f 01       	movw	r12, r30
    v_ieu[i] += v_eu[i] * FRAME_TIME;
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     b0e:	9b 01       	movw	r18, r22
     b10:	ac 01       	movw	r20, r24
     b12:	f8 01       	movw	r30, r16
     b14:	60 81       	ld	r22, Z
     b16:	71 81       	ldd	r23, Z+1	; 0x01
     b18:	82 81       	ldd	r24, Z+2	; 0x02
     b1a:	93 81       	ldd	r25, Z+3	; 0x03
     b1c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     b20:	f8 01       	movw	r30, r16
     b22:	61 93       	st	Z+, r22
     b24:	71 93       	st	Z+, r23
     b26:	81 93       	st	Z+, r24
     b28:	91 93       	st	Z+, r25
     b2a:	8f 01       	movw	r16, r30
	     
  vector v_eu;
  uint8_t i, j;
  float norm_B = vector_norm(v_B);
    
  for(i = 0; i < 3; i++)
     b2c:	ea 14       	cp	r14, r10
     b2e:	fb 04       	cpc	r15, r11
     b30:	b1 f6       	brne	.-84     	; 0xade <nominal+0x100>
  for(i = 0; i < 3; i++)
  {
    v_m_temp[i] = 0;
    for(j = 0; j < 3; j++)
      v_m_temp[i] += v_eu[j] * m_Kp[i][j] + v_ieu[j] * m_Ki[i][j] + v_w[j] * m_Kd[i][j];
    v_m_temp[i] /= norm_B * norm_B;	
     b32:	2f 85       	ldd	r18, Y+15	; 0x0f
     b34:	38 89       	ldd	r19, Y+16	; 0x10
     b36:	49 89       	ldd	r20, Y+17	; 0x11
     b38:	5a 89       	ldd	r21, Y+18	; 0x12
     b3a:	ca 01       	movw	r24, r20
     b3c:	b9 01       	movw	r22, r18
     b3e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     b42:	6c a7       	std	Y+44, r22	; 0x2c
     b44:	7d a7       	std	Y+45, r23	; 0x2d
     b46:	8e a7       	std	Y+46, r24	; 0x2e
     b48:	9f a7       	std	Y+47, r25	; 0x2f
     b4a:	82 eb       	ldi	r24, 0xB2	; 178
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	9f a3       	std	Y+39, r25	; 0x27
     b50:	8e a3       	std	Y+38, r24	; 0x26
     b52:	c1 2c       	mov	r12, r1
     b54:	d1 2c       	mov	r13, r1
     b56:	fe 01       	movw	r30, r28
     b58:	3d 96       	adiw	r30, 0x0d	; 13
     b5a:	fe 87       	std	Y+14, r31	; 0x0e
     b5c:	ed 87       	std	Y+13, r30	; 0x0d
     b5e:	28 aa       	std	Y+48, r2	; 0x30
     b60:	39 aa       	std	Y+49, r3	; 0x31
     b62:	8a aa       	std	Y+50, r8	; 0x32
     b64:	9b aa       	std	Y+51, r9	; 0x33
     b66:	86 01       	movw	r16, r12
     b68:	ce a0       	ldd	r12, Y+38	; 0x26
     b6a:	df a0       	ldd	r13, Y+39	; 0x27
     b6c:	d9 a6       	std	Y+41, r13	; 0x29
     b6e:	c8 a6       	std	Y+40, r12	; 0x28
     b70:	c8 01       	movw	r24, r16
     b72:	80 59       	subi	r24, 0x90	; 144
     b74:	9e 4f       	sbci	r25, 0xFE	; 254
     b76:	9d 8b       	std	Y+21, r25	; 0x15
     b78:	8c 8b       	std	Y+20, r24	; 0x14
     b7a:	f8 01       	movw	r30, r16
     b7c:	e4 5b       	subi	r30, 0xB4	; 180
     b7e:	fe 4f       	sbci	r31, 0xFE	; 254
     b80:	ff 8b       	std	Y+23, r31	; 0x17
     b82:	ee 8b       	std	Y+22, r30	; 0x16
     b84:	83 ef       	ldi	r24, 0xF3	; 243
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	99 8f       	std	Y+25, r25	; 0x19
     b8a:	88 8f       	std	Y+24, r24	; 0x18
     b8c:	f8 01       	movw	r30, r16
     b8e:	e8 5d       	subi	r30, 0xD8	; 216
     b90:	fe 4f       	sbci	r31, 0xFE	; 254
     b92:	fb 8f       	std	Y+27, r31	; 0x1b
     b94:	ea 8f       	std	Y+26, r30	; 0x1a
     b96:	c8 a8       	ldd	r12, Y+48	; 0x30
     b98:	d9 a8       	ldd	r13, Y+49	; 0x31
     b9a:	ea a8       	ldd	r14, Y+50	; 0x32
     b9c:	fb a8       	ldd	r15, Y+51	; 0x33
     b9e:	1f 86       	std	Y+15, r1	; 0x0f
     ba0:	1b 8a       	std	Y+19, r1	; 0x13
     ba2:	31 2c       	mov	r3, r1
     ba4:	21 2c       	mov	r2, r1
     ba6:	1b a7       	std	Y+43, r17	; 0x2b
     ba8:	0a a7       	std	Y+42, r16	; 0x2a
     baa:	87 01       	movw	r16, r14
     bac:	dd 8e       	std	Y+29, r13	; 0x1d
     bae:	cc 8e       	std	Y+28, r12	; 0x1c
    
  for(i = 0; i < 3; i++)
  {
    v_m_temp[i] = 0;
    for(j = 0; j < 3; j++)
      v_m_temp[i] += v_eu[j] * m_Kp[i][j] + v_ieu[j] * m_Ki[i][j] + v_w[j] * m_Kd[i][j];
     bb0:	f8 01       	movw	r30, r16
     bb2:	61 91       	ld	r22, Z+
     bb4:	71 91       	ld	r23, Z+
     bb6:	81 91       	ld	r24, Z+
     bb8:	91 91       	ld	r25, Z+
     bba:	8f 01       	movw	r16, r30
     bbc:	ec 89       	ldd	r30, Y+20	; 0x14
     bbe:	fd 89       	ldd	r31, Y+21	; 0x15
     bc0:	21 91       	ld	r18, Z+
     bc2:	31 91       	ld	r19, Z+
     bc4:	41 91       	ld	r20, Z+
     bc6:	51 91       	ld	r21, Z+
     bc8:	fd 8b       	std	Y+21, r31	; 0x15
     bca:	ec 8b       	std	Y+20, r30	; 0x14
     bcc:	ec 8d       	ldd	r30, Y+28	; 0x1c
     bce:	fd 8d       	ldd	r31, Y+29	; 0x1d
     bd0:	81 90       	ld	r8, Z+
     bd2:	91 90       	ld	r9, Z+
     bd4:	a1 90       	ld	r10, Z+
     bd6:	b1 90       	ld	r11, Z+
     bd8:	fd 8f       	std	Y+29, r31	; 0x1d
     bda:	ec 8f       	std	Y+28, r30	; 0x1c
     bdc:	ee 89       	ldd	r30, Y+22	; 0x16
     bde:	ff 89       	ldd	r31, Y+23	; 0x17
     be0:	41 90       	ld	r4, Z+
     be2:	51 90       	ld	r5, Z+
     be4:	61 90       	ld	r6, Z+
     be6:	71 90       	ld	r7, Z+
     be8:	ff 8b       	std	Y+23, r31	; 0x17
     bea:	ee 8b       	std	Y+22, r30	; 0x16
     bec:	e8 8d       	ldd	r30, Y+24	; 0x18
     bee:	f9 8d       	ldd	r31, Y+25	; 0x19
     bf0:	c1 90       	ld	r12, Z+
     bf2:	d1 90       	ld	r13, Z+
     bf4:	e1 90       	ld	r14, Z+
     bf6:	f1 90       	ld	r15, Z+
     bf8:	f9 8f       	std	Y+25, r31	; 0x19
     bfa:	e8 8f       	std	Y+24, r30	; 0x18
     bfc:	ce aa       	std	Y+54, r12	; 0x36
     bfe:	df aa       	std	Y+55, r13	; 0x37
     c00:	e8 ae       	std	Y+56, r14	; 0x38
     c02:	f9 ae       	std	Y+57, r15	; 0x39
     c04:	ea 8d       	ldd	r30, Y+26	; 0x1a
     c06:	fb 8d       	ldd	r31, Y+27	; 0x1b
     c08:	c1 90       	ld	r12, Z+
     c0a:	d1 90       	ld	r13, Z+
     c0c:	e1 90       	ld	r14, Z+
     c0e:	f1 90       	ld	r15, Z+
     c10:	fb 8f       	std	Y+27, r31	; 0x1b
     c12:	ea 8f       	std	Y+26, r30	; 0x1a
     c14:	ce 8e       	std	Y+30, r12	; 0x1e
     c16:	df 8e       	std	Y+31, r13	; 0x1f
     c18:	e8 a2       	std	Y+32, r14	; 0x20
     c1a:	f9 a2       	std	Y+33, r15	; 0x21
     c1c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     c20:	6b 01       	movw	r12, r22
     c22:	7c 01       	movw	r14, r24
     c24:	a3 01       	movw	r20, r6
     c26:	92 01       	movw	r18, r4
     c28:	c5 01       	movw	r24, r10
     c2a:	b4 01       	movw	r22, r8
     c2c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     c30:	9b 01       	movw	r18, r22
     c32:	ac 01       	movw	r20, r24
     c34:	c7 01       	movw	r24, r14
     c36:	b6 01       	movw	r22, r12
     c38:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     c3c:	4b 01       	movw	r8, r22
     c3e:	5c 01       	movw	r10, r24
     c40:	2e 8d       	ldd	r18, Y+30	; 0x1e
     c42:	3f 8d       	ldd	r19, Y+31	; 0x1f
     c44:	48 a1       	ldd	r20, Y+32	; 0x20
     c46:	59 a1       	ldd	r21, Y+33	; 0x21
     c48:	6e a9       	ldd	r22, Y+54	; 0x36
     c4a:	7f a9       	ldd	r23, Y+55	; 0x37
     c4c:	88 ad       	ldd	r24, Y+56	; 0x38
     c4e:	99 ad       	ldd	r25, Y+57	; 0x39
     c50:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     c54:	9b 01       	movw	r18, r22
     c56:	ac 01       	movw	r20, r24
     c58:	c5 01       	movw	r24, r10
     c5a:	b4 01       	movw	r22, r8
     c5c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     c60:	9b 01       	movw	r18, r22
     c62:	ac 01       	movw	r20, r24
     c64:	6f 85       	ldd	r22, Y+15	; 0x0f
     c66:	7b 89       	ldd	r23, Y+19	; 0x13
     c68:	83 2d       	mov	r24, r3
     c6a:	92 2d       	mov	r25, r2
     c6c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     c70:	6f 87       	std	Y+15, r22	; 0x0f
     c72:	7b 8b       	std	Y+19, r23	; 0x13
     c74:	38 2e       	mov	r3, r24
     c76:	29 2e       	mov	r2, r25
  }
    
  for(i = 0; i < 3; i++)
  {
    v_m_temp[i] = 0;
    for(j = 0; j < 3; j++)
     c78:	cd 84       	ldd	r12, Y+13	; 0x0d
     c7a:	de 84       	ldd	r13, Y+14	; 0x0e
     c7c:	0c 15       	cp	r16, r12
     c7e:	1d 05       	cpc	r17, r13
     c80:	09 f0       	breq	.+2      	; 0xc84 <nominal+0x2a6>
     c82:	96 cf       	rjmp	.-212    	; 0xbb0 <nominal+0x1d2>
     c84:	0a a5       	ldd	r16, Y+42	; 0x2a
     c86:	1b a5       	ldd	r17, Y+43	; 0x2b
      v_m_temp[i] += v_eu[j] * m_Kp[i][j] + v_ieu[j] * m_Ki[i][j] + v_w[j] * m_Kd[i][j];
    v_m_temp[i] /= norm_B * norm_B;	
     c88:	2c a5       	ldd	r18, Y+44	; 0x2c
     c8a:	3d a5       	ldd	r19, Y+45	; 0x2d
     c8c:	4e a5       	ldd	r20, Y+46	; 0x2e
     c8e:	5f a5       	ldd	r21, Y+47	; 0x2f
     c90:	92 2d       	mov	r25, r2
     c92:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     c96:	e8 a5       	ldd	r30, Y+40	; 0x28
     c98:	f9 a5       	ldd	r31, Y+41	; 0x29
     c9a:	60 83       	st	Z, r22
     c9c:	71 83       	std	Z+1, r23	; 0x01
     c9e:	82 83       	std	Z+2, r24	; 0x02
     ca0:	93 83       	std	Z+3, r25	; 0x03
     ca2:	8e a1       	ldd	r24, Y+38	; 0x26
     ca4:	9f a1       	ldd	r25, Y+39	; 0x27
     ca6:	04 96       	adiw	r24, 0x04	; 4
     ca8:	9f a3       	std	Y+39, r25	; 0x27
     caa:	8e a3       	std	Y+38, r24	; 0x26
     cac:	04 5f       	subi	r16, 0xF4	; 244
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    v_eu[i] = 2 * q_o[i] * q_o[3];
    v_ieu[i] += v_eu[i] * FRAME_TIME;
  }
    
  for(i = 0; i < 3; i++)
     cb0:	04 32       	cpi	r16, 0x24	; 36
     cb2:	11 05       	cpc	r17, r1
     cb4:	09 f0       	breq	.+2      	; 0xcb8 <nominal+0x2da>
     cb6:	58 cf       	rjmp	.-336    	; 0xb68 <nominal+0x18a>
    for(j = 0; j < 3; j++)
      v_m_temp[i] += v_eu[j] * m_Kp[i][j] + v_ieu[j] * m_Ki[i][j] + v_w[j] * m_Kd[i][j];
    v_m_temp[i] /= norm_B * norm_B;	
  }
    
  vector_cross_product(v_m_temp, v_B, v_m_N);
     cb8:	4c a9       	ldd	r20, Y+52	; 0x34
     cba:	5d a9       	ldd	r21, Y+53	; 0x35
     cbc:	6f ef       	ldi	r22, 0xFF	; 255
     cbe:	71 e0       	ldi	r23, 0x01	; 1
     cc0:	82 eb       	ldi	r24, 0xB2	; 178
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <vector_cross_product>
  scalar_into_vector(v_m_N, light);//scalar_into_vector(v_m_N, light);//values are very small as compared to matlab check
     cc8:	60 91 e6 01 	lds	r22, 0x01E6
     ccc:	70 e0       	ldi	r23, 0x00	; 0
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	0e 94 98 33 	call	0x6730	; 0x6730 <__floatunsisf>
     cd6:	ab 01       	movw	r20, r22
     cd8:	bc 01       	movw	r22, r24
     cda:	8c a9       	ldd	r24, Y+52	; 0x34
     cdc:	9d a9       	ldd	r25, Y+53	; 0x35
     cde:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <scalar_into_vector>
	   sen1 = (int8_t)(st>>8);
	   transmit_UART0(sen);
	   transmit_UART0(sen1);
   }*/
   
}
     ce2:	e9 96       	adiw	r28, 0x39	; 57
     ce4:	0f b6       	in	r0, 0x3f	; 63
     ce6:	f8 94       	cli
     ce8:	de bf       	out	0x3e, r29	; 62
     cea:	0f be       	out	0x3f, r0	; 63
     cec:	cd bf       	out	0x3d, r28	; 61
     cee:	df 91       	pop	r29
     cf0:	cf 91       	pop	r28
     cf2:	1f 91       	pop	r17
     cf4:	0f 91       	pop	r16
     cf6:	ff 90       	pop	r15
     cf8:	ef 90       	pop	r14
     cfa:	df 90       	pop	r13
     cfc:	cf 90       	pop	r12
     cfe:	bf 90       	pop	r11
     d00:	af 90       	pop	r10
     d02:	9f 90       	pop	r9
     d04:	8f 90       	pop	r8
     d06:	7f 90       	pop	r7
     d08:	6f 90       	pop	r6
     d0a:	5f 90       	pop	r5
     d0c:	4f 90       	pop	r4
     d0e:	3f 90       	pop	r3
     d10:	2f 90       	pop	r2
     d12:	08 95       	ret

00000d14 <apply_torque>:

void apply_torque(vector v_m)
{
     d14:	2f 92       	push	r2
     d16:	3f 92       	push	r3
     d18:	4f 92       	push	r4
     d1a:	5f 92       	push	r5
     d1c:	6f 92       	push	r6
     d1e:	7f 92       	push	r7
     d20:	8f 92       	push	r8
     d22:	9f 92       	push	r9
     d24:	af 92       	push	r10
     d26:	bf 92       	push	r11
     d28:	cf 92       	push	r12
     d2a:	df 92       	push	r13
     d2c:	ef 92       	push	r14
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	6c 01       	movw	r12, r24
     d3a:	8c 01       	movw	r16, r24
     d3c:	7c 01       	movw	r14, r24
     d3e:	8c e0       	ldi	r24, 0x0C	; 12
     d40:	e8 0e       	add	r14, r24
     d42:	f1 1c       	adc	r15, r1
     d44:	e6 01       	movw	r28, r12
	}*/
    
	
	for(i = 0; i < 3; i++)
	{
		if(fabs(v_m[i]) > M_MAX)
     d46:	48 80       	ld	r4, Y
     d48:	59 80       	ldd	r5, Y+1	; 0x01
     d4a:	6a 80       	ldd	r6, Y+2	; 0x02
     d4c:	7b 80       	ldd	r7, Y+3	; 0x03
     d4e:	53 01       	movw	r10, r6
     d50:	42 01       	movw	r8, r4
     d52:	e8 94       	clt
     d54:	b7 f8       	bld	r11, 7
     d56:	23 e3       	ldi	r18, 0x33	; 51
     d58:	33 e3       	ldi	r19, 0x33	; 51
     d5a:	43 e7       	ldi	r20, 0x73	; 115
     d5c:	5f e3       	ldi	r21, 0x3F	; 63
     d5e:	c5 01       	movw	r24, r10
     d60:	b4 01       	movw	r22, r8
     d62:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
     d66:	18 16       	cp	r1, r24
     d68:	fc f4       	brge	.+62     	; 0xda8 <apply_torque+0x94>
		{
			if (fabs(v_m[i])/v_m[i] == -1)
     d6a:	a3 01       	movw	r20, r6
     d6c:	92 01       	movw	r18, r4
     d6e:	c5 01       	movw	r24, r10
     d70:	b4 01       	movw	r22, r8
     d72:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	40 e8       	ldi	r20, 0x80	; 128
     d7c:	5f eb       	ldi	r21, 0xBF	; 191
     d7e:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
     d82:	81 11       	cpse	r24, r1
     d84:	09 c0       	rjmp	.+18     	; 0xd98 <apply_torque+0x84>
			v_m[i] = -1*M_MAX;
     d86:	83 e3       	ldi	r24, 0x33	; 51
     d88:	93 e3       	ldi	r25, 0x33	; 51
     d8a:	a3 e7       	ldi	r26, 0x73	; 115
     d8c:	bf eb       	ldi	r27, 0xBF	; 191
     d8e:	88 83       	st	Y, r24
     d90:	99 83       	std	Y+1, r25	; 0x01
     d92:	aa 83       	std	Y+2, r26	; 0x02
     d94:	bb 83       	std	Y+3, r27	; 0x03
     d96:	08 c0       	rjmp	.+16     	; 0xda8 <apply_torque+0x94>
			else
			v_m[i] = M_MAX;
     d98:	83 e3       	ldi	r24, 0x33	; 51
     d9a:	93 e3       	ldi	r25, 0x33	; 51
     d9c:	a3 e7       	ldi	r26, 0x73	; 115
     d9e:	bf e3       	ldi	r27, 0x3F	; 63
     da0:	88 83       	st	Y, r24
     da2:	99 83       	std	Y+1, r25	; 0x01
     da4:	aa 83       	std	Y+2, r26	; 0x02
     da6:	bb 83       	std	Y+3, r27	; 0x03
     da8:	24 96       	adiw	r28, 0x04	; 4
		sen = (v_m[i]*255);
		transmit_UART0(sen);
	}*/
    
	
	for(i = 0; i < 3; i++)
     daa:	ce 15       	cp	r28, r14
     dac:	df 05       	cpc	r29, r15
     dae:	59 f6       	brne	.-106    	; 0xd46 <apply_torque+0x32>
		
	}
	
	
	
	scalar_into_vector(v_m, 1.0 / (N_TURNS * AREA));  // nturns should be 60
     db0:	45 ed       	ldi	r20, 0xD5	; 213
     db2:	5f e0       	ldi	r21, 0x0F	; 15
     db4:	61 ec       	ldi	r22, 0xC1	; 193
     db6:	7e e3       	ldi	r23, 0x3E	; 62
     db8:	c6 01       	movw	r24, r12
     dba:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <scalar_into_vector>
     dbe:	e6 01       	movw	r28, r12
	
	
	for(i = 0; i < 3; i++)
	{
		if(fabs(v_m[i]) > I_MAX)
     dc0:	48 80       	ld	r4, Y
     dc2:	59 80       	ldd	r5, Y+1	; 0x01
     dc4:	6a 80       	ldd	r6, Y+2	; 0x02
     dc6:	7b 80       	ldd	r7, Y+3	; 0x03
     dc8:	53 01       	movw	r10, r6
     dca:	42 01       	movw	r8, r4
     dcc:	e8 94       	clt
     dce:	b7 f8       	bld	r11, 7
     dd0:	28 ea       	ldi	r18, 0xA8	; 168
     dd2:	36 ec       	ldi	r19, 0xC6	; 198
     dd4:	4b e8       	ldi	r20, 0x8B	; 139
     dd6:	5e e3       	ldi	r21, 0x3E	; 62
     dd8:	c5 01       	movw	r24, r10
     dda:	b4 01       	movw	r22, r8
     ddc:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
     de0:	18 16       	cp	r1, r24
     de2:	fc f4       	brge	.+62     	; 0xe22 <apply_torque+0x10e>
		{
			if (fabs(v_m[i])/v_m[i] == -1)
     de4:	a3 01       	movw	r20, r6
     de6:	92 01       	movw	r18, r4
     de8:	c5 01       	movw	r24, r10
     dea:	b4 01       	movw	r22, r8
     dec:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	40 e8       	ldi	r20, 0x80	; 128
     df6:	5f eb       	ldi	r21, 0xBF	; 191
     df8:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
     dfc:	81 11       	cpse	r24, r1
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <apply_torque+0xfe>
			v_m[i] = -1*I_MAX;
     e00:	88 ea       	ldi	r24, 0xA8	; 168
     e02:	96 ec       	ldi	r25, 0xC6	; 198
     e04:	ab e8       	ldi	r26, 0x8B	; 139
     e06:	be eb       	ldi	r27, 0xBE	; 190
     e08:	88 83       	st	Y, r24
     e0a:	99 83       	std	Y+1, r25	; 0x01
     e0c:	aa 83       	std	Y+2, r26	; 0x02
     e0e:	bb 83       	std	Y+3, r27	; 0x03
     e10:	08 c0       	rjmp	.+16     	; 0xe22 <apply_torque+0x10e>
			else
			v_m[i] = I_MAX;
     e12:	88 ea       	ldi	r24, 0xA8	; 168
     e14:	96 ec       	ldi	r25, 0xC6	; 198
     e16:	ab e8       	ldi	r26, 0x8B	; 139
     e18:	be e3       	ldi	r27, 0x3E	; 62
     e1a:	88 83       	st	Y, r24
     e1c:	99 83       	std	Y+1, r25	; 0x01
     e1e:	aa 83       	std	Y+2, r26	; 0x02
     e20:	bb 83       	std	Y+3, r27	; 0x03
     e22:	24 96       	adiw	r28, 0x04	; 4
	
	
	scalar_into_vector(v_m, 1.0 / (N_TURNS * AREA));  // nturns should be 60
	
	
	for(i = 0; i < 3; i++)
     e24:	ec 16       	cp	r14, r28
     e26:	fd 06       	cpc	r15, r29
     e28:	59 f6       	brne	.-106    	; 0xdc0 <apply_torque+0xac>
	 uint8_t buf0,buf1,buf2,buf3;
	 
	for (int i=0;i<3;i=i+1)
	{
		//sen = ((int8_t)((lambda))/2);
		st =(int32_t)(v_m[i]*65535000);
     e2a:	d8 01       	movw	r26, r16
     e2c:	6d 91       	ld	r22, X+
     e2e:	7d 91       	ld	r23, X+
     e30:	8d 91       	ld	r24, X+
     e32:	9d 91       	ld	r25, X+
     e34:	8d 01       	movw	r16, r26
     e36:	26 e0       	ldi	r18, 0x06	; 6
     e38:	3f ef       	ldi	r19, 0xFF	; 255
     e3a:	49 e7       	ldi	r20, 0x79	; 121
     e3c:	5c e4       	ldi	r21, 0x4C	; 76
     e3e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     e42:	0e 94 67 33 	call	0x66ce	; 0x66ce <__fixsfsi>
     e46:	b7 2e       	mov	r11, r23
     e48:	d8 2f       	mov	r29, r24
     e4a:	c9 2f       	mov	r28, r25
		sen = (int8_t)st;
		sen1 = (int8_t)(st>>8);
		sen2 = (int8_t)(st>>16);
		sen3 = (int8_t)(st>>24);
		transmit_UART0(sen);
     e4c:	86 2f       	mov	r24, r22
     e4e:	66 0f       	add	r22, r22
     e50:	99 0b       	sbc	r25, r25
     e52:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
		transmit_UART0(sen1);
     e56:	8b 2d       	mov	r24, r11
     e58:	bb 0c       	add	r11, r11
     e5a:	99 0b       	sbc	r25, r25
     e5c:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
		transmit_UART0(sen2);
     e60:	8d 2f       	mov	r24, r29
     e62:	dd 0f       	add	r29, r29
     e64:	99 0b       	sbc	r25, r25
     e66:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
		transmit_UART0(sen3);
     e6a:	8c 2f       	mov	r24, r28
     e6c:	cc 0f       	add	r28, r28
     e6e:	99 0b       	sbc	r25, r25
     e70:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
	int8_t sen,sen1,sen2,sen3;
	int32_t st;
	// x.f=3.145689123;
	 uint8_t buf0,buf1,buf2,buf3;
	 
	for (int i=0;i<3;i=i+1)
     e74:	0e 15       	cp	r16, r14
     e76:	1f 05       	cpc	r17, r15
     e78:	c1 f6       	brne	.-80     	; 0xe2a <apply_torque+0x116>
	transmit_UART0(buf3);*/	
	}
	
	
	sen = Mode;
	transmit_UART0(sen);
     e7a:	80 91 26 01 	lds	r24, 0x0126
     e7e:	08 2e       	mov	r0, r24
     e80:	00 0c       	add	r0, r0
     e82:	99 0b       	sbc	r25, r25
     e84:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
	sen = gps_power;
	transmit_UART0(sen);
     e88:	80 91 c2 01 	lds	r24, 0x01C2
     e8c:	08 2e       	mov	r0, r24
     e8e:	00 0c       	add	r0, r0
     e90:	99 0b       	sbc	r25, r25
     e92:	0e 94 e3 2c 	call	0x59c6	; 0x59c6 <transmit_UART0>
	////////////////////////
	if (v_m[0] > 0)
     e96:	f6 01       	movw	r30, r12
     e98:	80 80       	ld	r8, Z
     e9a:	91 80       	ldd	r9, Z+1	; 0x01
     e9c:	a2 80       	ldd	r10, Z+2	; 0x02
     e9e:	b3 80       	ldd	r11, Z+3	; 0x03
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	a9 01       	movw	r20, r18
     ea6:	c5 01       	movw	r24, r10
     ea8:	b4 01       	movw	r22, r8
     eaa:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
     eae:	18 16       	cp	r1, r24
     eb0:	c4 f4       	brge	.+48     	; 0xee2 <apply_torque+0x1ce>
	{
		Current_state.pwm.x = fabs((v_m[0] * PWM_RES) / I_MAX);
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	3f ef       	ldi	r19, 0xFF	; 255
     eb6:	4f e7       	ldi	r20, 0x7F	; 127
     eb8:	57 e4       	ldi	r21, 0x47	; 71
     eba:	c5 01       	movw	r24, r10
     ebc:	b4 01       	movw	r22, r8
     ebe:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     ec2:	28 ea       	ldi	r18, 0xA8	; 168
     ec4:	36 ec       	ldi	r19, 0xC6	; 198
     ec6:	4b e8       	ldi	r20, 0x8B	; 139
     ec8:	5e e3       	ldi	r21, 0x3E	; 62
     eca:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     ece:	9f 77       	andi	r25, 0x7F	; 127
     ed0:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
     ed4:	70 93 28 05 	sts	0x0528, r23
     ed8:	60 93 27 05 	sts	0x0527, r22
		Current_state.pwm.x_dir = 0;
     edc:	10 92 2d 05 	sts	0x052D, r1
     ee0:	1e c0       	rjmp	.+60     	; 0xf1e <apply_torque+0x20a>
	}
	else
	{
		Current_state.pwm.x = fabs( (1+(v_m[0]/ I_MAX))*PWM_RES );
     ee2:	28 ea       	ldi	r18, 0xA8	; 168
     ee4:	36 ec       	ldi	r19, 0xC6	; 198
     ee6:	4b e8       	ldi	r20, 0x8B	; 139
     ee8:	5e e3       	ldi	r21, 0x3E	; 62
     eea:	c5 01       	movw	r24, r10
     eec:	b4 01       	movw	r22, r8
     eee:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     ef2:	20 e0       	ldi	r18, 0x00	; 0
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	40 e8       	ldi	r20, 0x80	; 128
     ef8:	5f e3       	ldi	r21, 0x3F	; 63
     efa:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	3f ef       	ldi	r19, 0xFF	; 255
     f02:	4f e7       	ldi	r20, 0x7F	; 127
     f04:	57 e4       	ldi	r21, 0x47	; 71
     f06:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     f0a:	9f 77       	andi	r25, 0x7F	; 127
     f0c:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
     f10:	70 93 28 05 	sts	0x0528, r23
     f14:	60 93 27 05 	sts	0x0527, r22
		Current_state.pwm.x_dir = 1;
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	80 93 2d 05 	sts	0x052D, r24
	}
	if (v_m[1] > 0)
     f1e:	d6 01       	movw	r26, r12
     f20:	14 96       	adiw	r26, 0x04	; 4
     f22:	8d 90       	ld	r8, X+
     f24:	9d 90       	ld	r9, X+
     f26:	ad 90       	ld	r10, X+
     f28:	bc 90       	ld	r11, X
     f2a:	17 97       	sbiw	r26, 0x07	; 7
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	a9 01       	movw	r20, r18
     f32:	c5 01       	movw	r24, r10
     f34:	b4 01       	movw	r22, r8
     f36:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
     f3a:	18 16       	cp	r1, r24
     f3c:	c4 f4       	brge	.+48     	; 0xf6e <apply_torque+0x25a>
	{
		Current_state.pwm.y = fabs((v_m[1] * PWM_RES) / I_MAX);
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	3f ef       	ldi	r19, 0xFF	; 255
     f42:	4f e7       	ldi	r20, 0x7F	; 127
     f44:	57 e4       	ldi	r21, 0x47	; 71
     f46:	c5 01       	movw	r24, r10
     f48:	b4 01       	movw	r22, r8
     f4a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     f4e:	28 ea       	ldi	r18, 0xA8	; 168
     f50:	36 ec       	ldi	r19, 0xC6	; 198
     f52:	4b e8       	ldi	r20, 0x8B	; 139
     f54:	5e e3       	ldi	r21, 0x3E	; 62
     f56:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     f5a:	9f 77       	andi	r25, 0x7F	; 127
     f5c:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
     f60:	70 93 2a 05 	sts	0x052A, r23
     f64:	60 93 29 05 	sts	0x0529, r22
		Current_state.pwm.y_dir = 0;
     f68:	10 92 2e 05 	sts	0x052E, r1
     f6c:	1e c0       	rjmp	.+60     	; 0xfaa <apply_torque+0x296>
	}
	else
	{
		Current_state.pwm.y = fabs( (1+(v_m[1]/ I_MAX))*PWM_RES );
     f6e:	28 ea       	ldi	r18, 0xA8	; 168
     f70:	36 ec       	ldi	r19, 0xC6	; 198
     f72:	4b e8       	ldi	r20, 0x8B	; 139
     f74:	5e e3       	ldi	r21, 0x3E	; 62
     f76:	c5 01       	movw	r24, r10
     f78:	b4 01       	movw	r22, r8
     f7a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     f7e:	20 e0       	ldi	r18, 0x00	; 0
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	40 e8       	ldi	r20, 0x80	; 128
     f84:	5f e3       	ldi	r21, 0x3F	; 63
     f86:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
     f8a:	20 e0       	ldi	r18, 0x00	; 0
     f8c:	3f ef       	ldi	r19, 0xFF	; 255
     f8e:	4f e7       	ldi	r20, 0x7F	; 127
     f90:	57 e4       	ldi	r21, 0x47	; 71
     f92:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     f96:	9f 77       	andi	r25, 0x7F	; 127
     f98:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
     f9c:	70 93 2a 05 	sts	0x052A, r23
     fa0:	60 93 29 05 	sts	0x0529, r22
		Current_state.pwm.y_dir = 1;
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	80 93 2e 05 	sts	0x052E, r24
	}
	if (v_m[2] > 0)
     faa:	f6 01       	movw	r30, r12
     fac:	c0 84       	ldd	r12, Z+8	; 0x08
     fae:	d1 84       	ldd	r13, Z+9	; 0x09
     fb0:	e2 84       	ldd	r14, Z+10	; 0x0a
     fb2:	f3 84       	ldd	r15, Z+11	; 0x0b
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	a9 01       	movw	r20, r18
     fba:	c7 01       	movw	r24, r14
     fbc:	b6 01       	movw	r22, r12
     fbe:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
     fc2:	18 16       	cp	r1, r24
     fc4:	c4 f4       	brge	.+48     	; 0xff6 <apply_torque+0x2e2>
	{
		Current_state.pwm.z = fabs((v_m[2] * PWM_RES) / I_MAX);
     fc6:	20 e0       	ldi	r18, 0x00	; 0
     fc8:	3f ef       	ldi	r19, 0xFF	; 255
     fca:	4f e7       	ldi	r20, 0x7F	; 127
     fcc:	57 e4       	ldi	r21, 0x47	; 71
     fce:	c7 01       	movw	r24, r14
     fd0:	b6 01       	movw	r22, r12
     fd2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
     fd6:	28 ea       	ldi	r18, 0xA8	; 168
     fd8:	36 ec       	ldi	r19, 0xC6	; 198
     fda:	4b e8       	ldi	r20, 0x8B	; 139
     fdc:	5e e3       	ldi	r21, 0x3E	; 62
     fde:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
     fe2:	9f 77       	andi	r25, 0x7F	; 127
     fe4:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
     fe8:	70 93 2c 05 	sts	0x052C, r23
     fec:	60 93 2b 05 	sts	0x052B, r22
		Current_state.pwm.z_dir = 0;
     ff0:	10 92 2f 05 	sts	0x052F, r1
     ff4:	1e c0       	rjmp	.+60     	; 0x1032 <apply_torque+0x31e>
	}
	else
	{
		Current_state.pwm.z = fabs( (1+(v_m[2]/ I_MAX))*PWM_RES );
     ff6:	28 ea       	ldi	r18, 0xA8	; 168
     ff8:	36 ec       	ldi	r19, 0xC6	; 198
     ffa:	4b e8       	ldi	r20, 0x8B	; 139
     ffc:	5e e3       	ldi	r21, 0x3E	; 62
     ffe:	c7 01       	movw	r24, r14
    1000:	b6 01       	movw	r22, r12
    1002:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	40 e8       	ldi	r20, 0x80	; 128
    100c:	5f e3       	ldi	r21, 0x3F	; 63
    100e:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	3f ef       	ldi	r19, 0xFF	; 255
    1016:	4f e7       	ldi	r20, 0x7F	; 127
    1018:	57 e4       	ldi	r21, 0x47	; 71
    101a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    101e:	9f 77       	andi	r25, 0x7F	; 127
    1020:	0e 94 6c 33 	call	0x66d8	; 0x66d8 <__fixunssfsi>
    1024:	70 93 2c 05 	sts	0x052C, r23
    1028:	60 93 2b 05 	sts	0x052B, r22
		Current_state.pwm.z_dir = 1;
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	80 93 2f 05 	sts	0x052F, r24
	}

	////////////////////////
	
PORTA=0xA0;
    1032:	80 ea       	ldi	r24, 0xA0	; 160
    1034:	8b bb       	out	0x1b, r24	; 27
}
    1036:	df 91       	pop	r29
    1038:	cf 91       	pop	r28
    103a:	1f 91       	pop	r17
    103c:	0f 91       	pop	r16
    103e:	ff 90       	pop	r15
    1040:	ef 90       	pop	r14
    1042:	df 90       	pop	r13
    1044:	cf 90       	pop	r12
    1046:	bf 90       	pop	r11
    1048:	af 90       	pop	r10
    104a:	9f 90       	pop	r9
    104c:	8f 90       	pop	r8
    104e:	7f 90       	pop	r7
    1050:	6f 90       	pop	r6
    1052:	5f 90       	pop	r5
    1054:	4f 90       	pop	r4
    1056:	3f 90       	pop	r3
    1058:	2f 90       	pop	r2
    105a:	08 95       	ret

0000105c <control>:
    Current_state.pwm.y_dir = 1;
  if(v_m[2] < 0)
    Current_state.pwm.z_dir = 1;
}
*/
void control(void){
    105c:	6f 92       	push	r6
    105e:	7f 92       	push	r7
    1060:	8f 92       	push	r8
    1062:	9f 92       	push	r9
    1064:	af 92       	push	r10
    1066:	bf 92       	push	r11
    1068:	cf 92       	push	r12
    106a:	df 92       	push	r13
    106c:	ef 92       	push	r14
    106e:	ff 92       	push	r15
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	cd b7       	in	r28, 0x3d	; 61
    107a:	de b7       	in	r29, 0x3e	; 62
    107c:	e0 97       	sbiw	r28, 0x30	; 48
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
 // wdt_reset();
  ///Watchdog enabled for the control law
  //watch_dog(T_CONTROL);
  
  /// Take B readings from Magnetometer, clear torquer first
  reset_PWM();//see that current are not setting becoz of this
    1088:	0e 94 ae 20 	call	0x415c	; 0x415c <reset_PWM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    108c:	8f ec       	ldi	r24, 0xCF	; 207
    108e:	97 e0       	ldi	r25, 0x07	; 7
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	f1 f7       	brne	.-4      	; 0x1090 <control+0x34>
    1094:	00 c0       	rjmp	.+0      	; 0x1096 <control+0x3a>
    1096:	00 00       	nop
  
  _delay_ms(1);
  
  read_MM();
    1098:	0e 94 51 20 	call	0x40a2	; 0x40a2 <read_MM>
  // write apply torquer function here
   if(Mode == DETUMBLING)
    109c:	80 91 26 01 	lds	r24, 0x0126
    10a0:	84 30       	cpi	r24, 0x04	; 4
    10a2:	21 f4       	brne	.+8      	; 0x10ac <control+0x50>
   apply_torque(v_m_D);
    10a4:	ce 01       	movw	r24, r28
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	35 de       	rcall	.-918    	; 0xd14 <apply_torque>
    10aa:	05 c0       	rjmp	.+10     	; 0x10b6 <control+0x5a>
   else if(Mode == NOMINAL)
    10ac:	81 30       	cpi	r24, 0x01	; 1
    10ae:	19 f4       	brne	.+6      	; 0x10b6 <control+0x5a>
   apply_torque(v_m_N);
    10b0:	ce 01       	movw	r24, r28
    10b2:	0d 96       	adiw	r24, 0x0d	; 13
    10b4:	2f de       	rcall	.-930    	; 0xd14 <apply_torque>
   
  set_PWM();
    10b6:	0e 94 7d 20 	call	0x40fa	; 0x40fa <set_PWM>
  
 // _delay_ms(10);
  detumbling(v_m_D);
    10ba:	ce 01       	movw	r24, r28
    10bc:	01 96       	adiw	r24, 0x01	; 1
    10be:	a6 db       	rcall	.-2228   	; 0x80c <detumbling>
  d= Current_state.pwm.z_dir;
  transmit_UART0(c1);
  transmit_UART0(c2);
  transmit_UART0(d);
  */
  v_B[2] = Current_state.mm.B_x;
    10c0:	80 91 14 05 	lds	r24, 0x0514
    10c4:	90 91 15 05 	lds	r25, 0x0515
    10c8:	a0 91 16 05 	lds	r26, 0x0516
    10cc:	b0 91 17 05 	lds	r27, 0x0517
    10d0:	ef ef       	ldi	r30, 0xFF	; 255
    10d2:	f1 e0       	ldi	r31, 0x01	; 1
    10d4:	80 87       	std	Z+8, r24	; 0x08
    10d6:	91 87       	std	Z+9, r25	; 0x09
    10d8:	a2 87       	std	Z+10, r26	; 0x0a
    10da:	b3 87       	std	Z+11, r27	; 0x0b
  v_B[1] = -1*Current_state.mm.B_y;
    10dc:	80 91 18 05 	lds	r24, 0x0518
    10e0:	90 91 19 05 	lds	r25, 0x0519
    10e4:	a0 91 1a 05 	lds	r26, 0x051A
    10e8:	b0 91 1b 05 	lds	r27, 0x051B
    10ec:	b0 58       	subi	r27, 0x80	; 128
    10ee:	84 83       	std	Z+4, r24	; 0x04
    10f0:	95 83       	std	Z+5, r25	; 0x05
    10f2:	a6 83       	std	Z+6, r26	; 0x06
    10f4:	b7 83       	std	Z+7, r27	; 0x07
  v_B[0] = Current_state.mm.B_z;
    10f6:	80 91 1c 05 	lds	r24, 0x051C
    10fa:	90 91 1d 05 	lds	r25, 0x051D
    10fe:	a0 91 1e 05 	lds	r26, 0x051E
    1102:	b0 91 1f 05 	lds	r27, 0x051F
    1106:	80 83       	st	Z, r24
    1108:	91 83       	std	Z+1, r25	; 0x01
    110a:	a2 83       	std	Z+2, r26	; 0x02
    110c:	b3 83       	std	Z+3, r27	; 0x03
  //if(((GPS_done == 0) && (Time % 600 == 0)) || ((GPS_done < 0) && (!first_B) && (vector_norm(v_m_D) < 2 )))
    ///* Switch on the GPS First
	//if((gps_power) == 2)
	//{
		
		if ((gps_power==2))
    110e:	80 91 c2 01 	lds	r24, 0x01C2
    1112:	90 91 c3 01 	lds	r25, 0x01C3
    1116:	02 97       	sbiw	r24, 0x02	; 2
    1118:	59 f4       	brne	.+22     	; 0x1130 <__stack+0x31>
		{
  // uint8_t q= 90;
   //transmit_UART0(q);
    read_GPS();
    111a:	0e 94 4c 20 	call	0x4098	; 0x4098 <read_GPS>
    111e:	9f ef       	ldi	r25, 0xFF	; 255
    1120:	e9 e6       	ldi	r30, 0x69	; 105
    1122:	18 e1       	ldi	r17, 0x18	; 24
    1124:	91 50       	subi	r25, 0x01	; 1
    1126:	e0 40       	sbci	r30, 0x00	; 0
    1128:	10 40       	sbci	r17, 0x00	; 0
    112a:	e1 f7       	brne	.-8      	; 0x1124 <__stack+0x25>
    112c:	00 c0       	rjmp	.+0      	; 0x112e <__stack+0x2f>
    112e:	00 00       	nop
  
  /// Check if in Nominal or Detumbling Mode
  //if(GPS_done >= 0)
  //{
	   //_delay_ms(700);
    if(GPS_done == 1)
    1130:	80 91 27 01 	lds	r24, 0x0127
    1134:	81 30       	cpi	r24, 0x01	; 1
    1136:	19 f4       	brne	.+6      	; 0x113e <__stack+0x3f>
      copy_gps_reading();  //check if gps is on but pdop data
    1138:	0e 94 c2 20 	call	0x4184	; 0x4184 <copy_gps_reading>
    113c:	61 c0       	rjmp	.+194    	; 0x1200 <__stack+0x101>
	  else
	  {
	  seconds_since_equinox += FRAME_TIME; //  ??jaroori hai ye plz dont delete??
    113e:	20 91 a4 04 	lds	r18, 0x04A4
    1142:	30 91 a5 04 	lds	r19, 0x04A5
    1146:	40 91 a6 04 	lds	r20, 0x04A6
    114a:	50 91 a7 04 	lds	r21, 0x04A7
    114e:	60 91 a8 04 	lds	r22, 0x04A8
    1152:	70 91 a9 04 	lds	r23, 0x04A9
    1156:	80 91 aa 04 	lds	r24, 0x04AA
    115a:	90 91 ab 04 	lds	r25, 0x04AB
    115e:	a2 e0       	ldi	r26, 0x02	; 2
    1160:	0e 94 58 37 	call	0x6eb0	; 0x6eb0 <__adddi3_s8>
    1164:	20 93 a4 04 	sts	0x04A4, r18
    1168:	30 93 a5 04 	sts	0x04A5, r19
    116c:	40 93 a6 04 	sts	0x04A6, r20
    1170:	50 93 a7 04 	sts	0x04A7, r21
    1174:	60 93 a8 04 	sts	0x04A8, r22
    1178:	70 93 a9 04 	sts	0x04A9, r23
    117c:	80 93 aa 04 	sts	0x04AA, r24
    1180:	90 93 ab 04 	sts	0x04AB, r25
	  seconds_since_pivot += FRAME_TIME;
    1184:	20 91 9c 04 	lds	r18, 0x049C
    1188:	30 91 9d 04 	lds	r19, 0x049D
    118c:	40 91 9e 04 	lds	r20, 0x049E
    1190:	50 91 9f 04 	lds	r21, 0x049F
    1194:	60 91 a0 04 	lds	r22, 0x04A0
    1198:	70 91 a1 04 	lds	r23, 0x04A1
    119c:	80 91 a2 04 	lds	r24, 0x04A2
    11a0:	90 91 a3 04 	lds	r25, 0x04A3
    11a4:	0e 94 58 37 	call	0x6eb0	; 0x6eb0 <__adddi3_s8>
    11a8:	20 93 9c 04 	sts	0x049C, r18
    11ac:	30 93 9d 04 	sts	0x049D, r19
    11b0:	40 93 9e 04 	sts	0x049E, r20
    11b4:	50 93 9f 04 	sts	0x049F, r21
    11b8:	60 93 a0 04 	sts	0x04A0, r22
    11bc:	70 93 a1 04 	sts	0x04A1, r23
    11c0:	80 93 a2 04 	sts	0x04A2, r24
    11c4:	90 93 a3 04 	sts	0x04A3, r25
	  // Current_state.gps.time_since_reading += FRAME_TIME;
	  /////////////////////////////////////////
	  Current_state.gps.seconds += FRAME_TIME;
    11c8:	ef eb       	ldi	r30, 0xBF	; 191
    11ca:	f4 e0       	ldi	r31, 0x04	; 4
    11cc:	86 a1       	ldd	r24, Z+38	; 0x26
    11ce:	8e 5f       	subi	r24, 0xFE	; 254
    11d0:	86 a3       	std	Z+38, r24	; 0x26
	  if(Current_state.gps.seconds > 58)
    11d2:	86 a1       	ldd	r24, Z+38	; 0x26
    11d4:	8b 33       	cpi	r24, 0x3B	; 59
    11d6:	20 f0       	brcs	.+8      	; 0x11e0 <__stack+0xe1>
	  {
		  Current_state.gps.seconds = 0;
    11d8:	16 a2       	std	Z+38, r1	; 0x26
		  Current_state.gps.minutes += 1;
    11da:	85 a1       	ldd	r24, Z+37	; 0x25
    11dc:	8f 5f       	subi	r24, 0xFF	; 255
    11de:	85 a3       	std	Z+37, r24	; 0x25
		  
	  }
	  if (Current_state.gps.minutes > 59)
    11e0:	80 91 e4 04 	lds	r24, 0x04E4
    11e4:	8c 33       	cpi	r24, 0x3C	; 60
    11e6:	30 f0       	brcs	.+12     	; 0x11f4 <__stack+0xf5>
	  {
		  Current_state.gps.minutes = 0;
    11e8:	ef eb       	ldi	r30, 0xBF	; 191
    11ea:	f4 e0       	ldi	r31, 0x04	; 4
    11ec:	15 a2       	std	Z+37, r1	; 0x25
		  Current_state.gps.hours += 1;
    11ee:	84 a1       	ldd	r24, Z+36	; 0x24
    11f0:	8f 5f       	subi	r24, 0xFF	; 255
    11f2:	84 a3       	std	Z+36, r24	; 0x24
	  }
	  if (Current_state.gps.hours > 23)
    11f4:	80 91 e3 04 	lds	r24, 0x04E3
    11f8:	88 31       	cpi	r24, 0x18	; 24
    11fa:	10 f0       	brcs	.+4      	; 0x1200 <__stack+0x101>
	  {
		  Current_state.gps.hours = 0;
    11fc:	10 92 e3 04 	sts	0x04E3, r1

	  }
	  
    //uint8_t e=100;
    //transmit_UART0(e);
    read_SS();
    1200:	0e 94 4e 20 	call	0x409c	; 0x409c <read_SS>
		sen = (int8_t)st;
		sen1 = (int8_t)(st>>8);
		transmit_UART0(sen);
		transmit_UART0(sen1);
	}*/
	light = light_cal();
    1204:	0e 94 80 24 	call	0x4900	; 0x4900 <light_cal>
    1208:	80 93 e6 01 	sts	0x01E6, r24
	if(GPS_done != 255)
    120c:	80 91 27 01 	lds	r24, 0x0127
    1210:	8f 3f       	cpi	r24, 0xFF	; 255
    1212:	09 f4       	brne	.+2      	; 0x1216 <__stack+0x117>
    1214:	43 c0       	rjmp	.+134    	; 0x129c <__stack+0x19d>
	{
		
    sgp_orbit_propagator();
    1216:	0e 94 99 22 	call	0x4532	; 0x4532 <sgp_orbit_propagator>
	
    sun_vector_estimator(v_sun_o);
    121a:	ce 01       	movw	r24, r28
    121c:	49 96       	adiw	r24, 0x19	; 25
    121e:	0e 94 36 23 	call	0x466c	; 0x466c <sun_vector_estimator>
	
    magnetic_field_estimator(v_B_o);
    1222:	ce 01       	movw	r24, r28
    1224:	85 96       	adiw	r24, 0x25	; 37
    1226:	0e 94 05 24 	call	0x480a	; 0x480a <magnetic_field_estimator>

	
	
    light = quest(v_B_o, v_sun_o, q_o, &w_ctrl); // to be checked
    122a:	25 ee       	ldi	r18, 0xE5	; 229
    122c:	31 e0       	ldi	r19, 0x01	; 1
    122e:	48 e8       	ldi	r20, 0x88	; 136
    1230:	54 e0       	ldi	r21, 0x04	; 4
    1232:	be 01       	movw	r22, r28
    1234:	67 5e       	subi	r22, 0xE7	; 231
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	ce 01       	movw	r24, r28
    123a:	85 96       	adiw	r24, 0x25	; 37
    123c:	0e 94 a8 24 	call	0x4950	; 0x4950 <quest>
    1240:	80 93 e6 01 	sts	0x01E6, r24
    
    omega_estimation(q_o, v_w);
    1244:	63 ef       	ldi	r22, 0xF3	; 243
    1246:	71 e0       	ldi	r23, 0x01	; 1
    1248:	88 e8       	ldi	r24, 0x88	; 136
    124a:	94 e0       	ldi	r25, 0x04	; 4
    124c:	0e 94 a9 28 	call	0x5152	; 0x5152 <omega_estimation>
	
    scalar_into_vector(v_w, light*w_ctrl); //light * w_ctrl
    1250:	80 91 e6 01 	lds	r24, 0x01E6
    1254:	60 91 e5 01 	lds	r22, 0x01E5
    1258:	86 9f       	mul	r24, r22
    125a:	b0 01       	movw	r22, r0
    125c:	11 24       	eor	r1, r1
    125e:	07 2e       	mov	r0, r23
    1260:	00 0c       	add	r0, r0
    1262:	88 0b       	sbc	r24, r24
    1264:	99 0b       	sbc	r25, r25
    1266:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    126a:	ab 01       	movw	r20, r22
    126c:	bc 01       	movw	r22, r24
    126e:	83 ef       	ldi	r24, 0xF3	; 243
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <scalar_into_vector>
	/*if(v_m[i]<0)
	transmit_UART0(0x01);
	else
	transmit_UART0(0x00);*/
//}  
    mod_w = vector_norm(v_w); 
    1276:	83 ef       	ldi	r24, 0xF3	; 243
    1278:	91 e0       	ldi	r25, 0x01	; 1
    127a:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <vector_norm>
    127e:	60 93 98 04 	sts	0x0498, r22
    1282:	70 93 99 04 	sts	0x0499, r23
    1286:	80 93 9a 04 	sts	0x049A, r24
    128a:	90 93 9b 04 	sts	0x049B, r25
    convert_unit_quaternion(q_o);
    128e:	88 e8       	ldi	r24, 0x88	; 136
    1290:	94 e0       	ldi	r25, 0x04	; 4
    1292:	0e 94 25 20 	call	0x404a	; 0x404a <convert_unit_quaternion>
		transmit_UART0(sen);
		transmit_UART0(sen1);
	}*/
	
	
    nominal(v_m_N);
    1296:	ce 01       	movw	r24, r28
    1298:	0d 96       	adiw	r24, 0x0d	; 13
    129a:	a1 db       	rcall	.-2238   	; 0x9de <nominal>
	//uint8_t sen =Mode;
	//transmit_UART0(sen);
	//PORTA^=0x00;
	}//if((star_flag >= 10)||(Time > gps_max))   // 90
	if((star_flag >= 120) || (Time > 500000))   // 90
    129c:	80 91 d8 01 	lds	r24, 0x01D8
    12a0:	88 37       	cpi	r24, 0x78	; 120
    12a2:	dc f4       	brge	.+54     	; 0x12da <__stack+0x1db>
    12a4:	20 91 31 05 	lds	r18, 0x0531
    12a8:	30 91 32 05 	lds	r19, 0x0532
    12ac:	40 91 33 05 	lds	r20, 0x0533
    12b0:	50 91 34 05 	lds	r21, 0x0534
    12b4:	60 91 35 05 	lds	r22, 0x0535
    12b8:	70 91 36 05 	lds	r23, 0x0536
    12bc:	80 91 37 05 	lds	r24, 0x0537
    12c0:	90 91 38 05 	lds	r25, 0x0538
    12c4:	20 32       	cpi	r18, 0x20	; 32
    12c6:	31 4a       	sbci	r19, 0xA1	; 161
    12c8:	47 40       	sbci	r20, 0x07	; 7
    12ca:	51 05       	cpc	r21, r1
    12cc:	61 05       	cpc	r22, r1
    12ce:	71 05       	cpc	r23, r1
    12d0:	81 05       	cpc	r24, r1
    12d2:	91 05       	cpc	r25, r1
    12d4:	09 f0       	breq	.+2      	; 0x12d8 <__stack+0x1d9>
    12d6:	08 f4       	brcc	.+2      	; 0x12da <__stack+0x1db>
    12d8:	6b c0       	rjmp	.+214    	; 0x13b0 <__stack+0x2b1>
		{    avg_md_new = 0;
    12da:	10 92 c6 01 	sts	0x01C6, r1
    12de:	10 92 c7 01 	sts	0x01C7, r1
    12e2:	10 92 c8 01 	sts	0x01C8, r1
    12e6:	10 92 c9 01 	sts	0x01C9, r1
			star_flag = 121;                 // 91
    12ea:	89 e7       	ldi	r24, 0x79	; 121
    12ec:	80 93 d8 01 	sts	0x01D8, r24
			if (light ==1)
    12f0:	80 91 e6 01 	lds	r24, 0x01E6
    12f4:	81 30       	cpi	r24, 0x01	; 1
    12f6:	21 f5       	brne	.+72     	; 0x1340 <__stack+0x241>
			{
				time_l = time_l +2;
    12f8:	80 91 be 01 	lds	r24, 0x01BE
    12fc:	90 91 bf 01 	lds	r25, 0x01BF
    1300:	02 96       	adiw	r24, 0x02	; 2
    1302:	90 93 bf 01 	sts	0x01BF, r25
    1306:	80 93 be 01 	sts	0x01BE, r24
				time_e =0;
    130a:	10 92 c1 01 	sts	0x01C1, r1
    130e:	10 92 c0 01 	sts	0x01C0, r1
				start_time = time_l % 720;   //690
    1312:	60 ed       	ldi	r22, 0xD0	; 208
    1314:	72 e0       	ldi	r23, 0x02	; 2
    1316:	0e 94 0b 37 	call	0x6e16	; 0x6e16 <__divmodhi4>
    131a:	90 93 d7 01 	sts	0x01D7, r25
    131e:	80 93 d6 01 	sts	0x01D6, r24
				if (start_time <600)       //600
    1322:	88 35       	cpi	r24, 0x58	; 88
    1324:	92 40       	sbci	r25, 0x02	; 2
    1326:	2c f4       	brge	.+10     	; 0x1332 <__stack+0x233>
				{
					gps_power =0;          // 0 
    1328:	10 92 c3 01 	sts	0x01C3, r1
    132c:	10 92 c2 01 	sts	0x01C2, r1
    1330:	2c c1       	rjmp	.+600    	; 0x158a <__stack+0x48b>
				}
				else
				{
					gps_power =2;
    1332:	82 e0       	ldi	r24, 0x02	; 2
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	90 93 c3 01 	sts	0x01C3, r25
    133a:	80 93 c2 01 	sts	0x01C2, r24
    133e:	25 c1       	rjmp	.+586    	; 0x158a <__stack+0x48b>
				}
			}
			else
			{
				start_time =0;
    1340:	10 92 d7 01 	sts	0x01D7, r1
    1344:	10 92 d6 01 	sts	0x01D6, r1
				time_e = time_e +2;
    1348:	60 91 c0 01 	lds	r22, 0x01C0
    134c:	70 91 c1 01 	lds	r23, 0x01C1
    1350:	6e 5f       	subi	r22, 0xFE	; 254
    1352:	7f 4f       	sbci	r23, 0xFF	; 255
    1354:	70 93 c1 01 	sts	0x01C1, r23
    1358:	60 93 c0 01 	sts	0x01C0, r22
				if (time_e > (eclipse_time-150))
    135c:	07 2e       	mov	r0, r23
    135e:	00 0c       	add	r0, r0
    1360:	88 0b       	sbc	r24, r24
    1362:	99 0b       	sbc	r25, r25
    1364:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    1368:	6b 01       	movw	r12, r22
    136a:	7c 01       	movw	r14, r24
    136c:	20 e0       	ldi	r18, 0x00	; 0
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	46 e1       	ldi	r20, 0x16	; 22
    1372:	53 e4       	ldi	r21, 0x43	; 67
    1374:	60 91 04 01 	lds	r22, 0x0104
    1378:	70 91 05 01 	lds	r23, 0x0105
    137c:	80 91 06 01 	lds	r24, 0x0106
    1380:	90 91 07 01 	lds	r25, 0x0107
    1384:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    1388:	9b 01       	movw	r18, r22
    138a:	ac 01       	movw	r20, r24
    138c:	c7 01       	movw	r24, r14
    138e:	b6 01       	movw	r22, r12
    1390:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    1394:	18 16       	cp	r1, r24
    1396:	3c f4       	brge	.+14     	; 0x13a6 <__stack+0x2a7>
				{
					gps_power =2;
    1398:	82 e0       	ldi	r24, 0x02	; 2
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	90 93 c3 01 	sts	0x01C3, r25
    13a0:	80 93 c2 01 	sts	0x01C2, r24
    13a4:	f2 c0       	rjmp	.+484    	; 0x158a <__stack+0x48b>
				}
				else
				{
					gps_power =0;
    13a6:	10 92 c3 01 	sts	0x01C3, r1
    13aa:	10 92 c2 01 	sts	0x01C2, r1
    13ae:	ed c0       	rjmp	.+474    	; 0x158a <__stack+0x48b>
			}
		}

	else
		{
			norm_m_d = vector_norm(v_m_D);
    13b0:	ce 01       	movw	r24, r28
    13b2:	01 96       	adiw	r24, 0x01	; 1
    13b4:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <vector_norm>
    13b8:	6b 01       	movw	r12, r22
    13ba:	7c 01       	movw	r14, r24
    13bc:	60 93 d2 01 	sts	0x01D2, r22
    13c0:	70 93 d3 01 	sts	0x01D3, r23
    13c4:	80 93 d4 01 	sts	0x01D4, r24
    13c8:	90 93 d5 01 	sts	0x01D5, r25
			md_start = norm_m_d * light;
    13cc:	80 91 e6 01 	lds	r24, 0x01E6
    13d0:	68 2f       	mov	r22, r24
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    13dc:	9b 01       	movw	r18, r22
    13de:	ac 01       	movw	r20, r24
    13e0:	c7 01       	movw	r24, r14
    13e2:	b6 01       	movw	r22, r12
    13e4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    13e8:	6b 01       	movw	r12, r22
    13ea:	7c 01       	movw	r14, r24
    13ec:	60 93 ce 01 	sts	0x01CE, r22
    13f0:	70 93 cf 01 	sts	0x01CF, r23
    13f4:	80 93 d0 01 	sts	0x01D0, r24
    13f8:	90 93 d1 01 	sts	0x01D1, r25
			if (md_start != 0)
    13fc:	20 e0       	ldi	r18, 0x00	; 0
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	a9 01       	movw	r20, r18
    1402:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    1406:	88 23       	and	r24, r24
    1408:	09 f4       	brne	.+2      	; 0x140c <__stack+0x30d>
    140a:	62 c0       	rjmp	.+196    	; 0x14d0 <__stack+0x3d1>
			{
				if (num==2)
    140c:	80 90 08 01 	lds	r8, 0x0108
    1410:	90 90 09 01 	lds	r9, 0x0109
    1414:	22 e0       	ldi	r18, 0x02	; 2
    1416:	82 16       	cp	r8, r18
    1418:	91 04       	cpc	r9, r1
    141a:	a9 f4       	brne	.+42     	; 0x1446 <__stack+0x347>
				{
					avg_md_new = (md_start + (num - 1)*md_start)/num;
    141c:	a7 01       	movw	r20, r14
    141e:	96 01       	movw	r18, r12
    1420:	c7 01       	movw	r24, r14
    1422:	b6 01       	movw	r22, r12
    1424:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	40 e0       	ldi	r20, 0x00	; 0
    142e:	5f e3       	ldi	r21, 0x3F	; 63
    1430:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    1434:	60 93 c6 01 	sts	0x01C6, r22
    1438:	70 93 c7 01 	sts	0x01C7, r23
    143c:	80 93 c8 01 	sts	0x01C8, r24
    1440:	90 93 c9 01 	sts	0x01C9, r25
    1444:	2c c0       	rjmp	.+88     	; 0x149e <__stack+0x39f>
				}
				else
				{
					avg_md_new = (md_start + (num-1)*avg_md)/num;
    1446:	b4 01       	movw	r22, r8
    1448:	61 50       	subi	r22, 0x01	; 1
    144a:	71 09       	sbc	r23, r1
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	0e 94 98 33 	call	0x6730	; 0x6730 <__floatunsisf>
    1454:	20 91 ca 01 	lds	r18, 0x01CA
    1458:	30 91 cb 01 	lds	r19, 0x01CB
    145c:	40 91 cc 01 	lds	r20, 0x01CC
    1460:	50 91 cd 01 	lds	r21, 0x01CD
    1464:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    1468:	9b 01       	movw	r18, r22
    146a:	ac 01       	movw	r20, r24
    146c:	c7 01       	movw	r24, r14
    146e:	b6 01       	movw	r22, r12
    1470:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    1474:	6b 01       	movw	r12, r22
    1476:	7c 01       	movw	r14, r24
    1478:	b4 01       	movw	r22, r8
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	0e 94 98 33 	call	0x6730	; 0x6730 <__floatunsisf>
    1482:	9b 01       	movw	r18, r22
    1484:	ac 01       	movw	r20, r24
    1486:	c7 01       	movw	r24, r14
    1488:	b6 01       	movw	r22, r12
    148a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    148e:	60 93 c6 01 	sts	0x01C6, r22
    1492:	70 93 c7 01 	sts	0x01C7, r23
    1496:	80 93 c8 01 	sts	0x01C8, r24
    149a:	90 93 c9 01 	sts	0x01C9, r25
				}
				num = num +1;
    149e:	8f ef       	ldi	r24, 0xFF	; 255
    14a0:	88 1a       	sub	r8, r24
    14a2:	98 0a       	sbc	r9, r24
    14a4:	90 92 09 01 	sts	0x0109, r9
    14a8:	80 92 08 01 	sts	0x0108, r8
			else
			{
				num = 2;
				avg_md_new = 0;
			}
			if ((avg_md_new !=0) && (avg_md_new <0.04) || (avg_md_new ==0) && (avg_md !=0))
    14ac:	c0 90 c6 01 	lds	r12, 0x01C6
    14b0:	d0 90 c7 01 	lds	r13, 0x01C7
    14b4:	e0 90 c8 01 	lds	r14, 0x01C8
    14b8:	f0 90 c9 01 	lds	r15, 0x01C9
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	a9 01       	movw	r20, r18
    14c2:	c7 01       	movw	r24, r14
    14c4:	b6 01       	movw	r22, r12
    14c6:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    14ca:	81 11       	cpse	r24, r1
    14cc:	10 c0       	rjmp	.+32     	; 0x14ee <__stack+0x3ef>
    14ce:	1a c0       	rjmp	.+52     	; 0x1504 <__stack+0x405>
				}
				num = num +1;
			}
			else
			{
				num = 2;
    14d0:	82 e0       	ldi	r24, 0x02	; 2
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	90 93 09 01 	sts	0x0109, r25
    14d8:	80 93 08 01 	sts	0x0108, r24
				avg_md_new = 0;
    14dc:	10 92 c6 01 	sts	0x01C6, r1
    14e0:	10 92 c7 01 	sts	0x01C7, r1
    14e4:	10 92 c8 01 	sts	0x01C8, r1
    14e8:	10 92 c9 01 	sts	0x01C9, r1
    14ec:	0b c0       	rjmp	.+22     	; 0x1504 <__stack+0x405>
			}
			if ((avg_md_new !=0) && (avg_md_new <0.04) || (avg_md_new ==0) && (avg_md !=0))
    14ee:	2a e0       	ldi	r18, 0x0A	; 10
    14f0:	37 ed       	ldi	r19, 0xD7	; 215
    14f2:	43 e2       	ldi	r20, 0x23	; 35
    14f4:	5d e3       	ldi	r21, 0x3D	; 61
    14f6:	c7 01       	movw	r24, r14
    14f8:	b6 01       	movw	r22, r12
    14fa:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    14fe:	88 23       	and	r24, r24
    1500:	84 f0       	brlt	.+32     	; 0x1522 <__stack+0x423>
    1502:	19 c0       	rjmp	.+50     	; 0x1536 <__stack+0x437>
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	a9 01       	movw	r20, r18
    150a:	60 91 ca 01 	lds	r22, 0x01CA
    150e:	70 91 cb 01 	lds	r23, 0x01CB
    1512:	80 91 cc 01 	lds	r24, 0x01CC
    1516:	90 91 cd 01 	lds	r25, 0x01CD
    151a:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    151e:	88 23       	and	r24, r24
    1520:	51 f0       	breq	.+20     	; 0x1536 <__stack+0x437>
			{
				flag_on = flag_on +2;
    1522:	80 91 c4 01 	lds	r24, 0x01C4
    1526:	90 91 c5 01 	lds	r25, 0x01C5
    152a:	02 96       	adiw	r24, 0x02	; 2
    152c:	90 93 c5 01 	sts	0x01C5, r25
    1530:	80 93 c4 01 	sts	0x01C4, r24
    1534:	04 c0       	rjmp	.+8      	; 0x153e <__stack+0x43f>
			}
			else
			{
				flag_on = 0;
    1536:	10 92 c5 01 	sts	0x01C5, r1
    153a:	10 92 c4 01 	sts	0x01C4, r1
			}
			if (flag_on > gps_start)
    153e:	60 91 c4 01 	lds	r22, 0x01C4
    1542:	70 91 c5 01 	lds	r23, 0x01C5
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	0e 94 98 33 	call	0x6730	; 0x6730 <__floatunsisf>
    154e:	20 91 00 01 	lds	r18, 0x0100
    1552:	30 91 01 01 	lds	r19, 0x0101
    1556:	40 91 02 01 	lds	r20, 0x0102
    155a:	50 91 03 01 	lds	r21, 0x0103
    155e:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    1562:	18 16       	cp	r1, r24
    1564:	64 f4       	brge	.+24     	; 0x157e <__stack+0x47f>
			{
				gps_power = 2;
    1566:	82 e0       	ldi	r24, 0x02	; 2
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	90 93 c3 01 	sts	0x01C3, r25
    156e:	80 93 c2 01 	sts	0x01C2, r24
				star_flag = star_flag +2;
    1572:	80 91 d8 01 	lds	r24, 0x01D8
    1576:	8e 5f       	subi	r24, 0xFE	; 254
    1578:	80 93 d8 01 	sts	0x01D8, r24
    157c:	06 c0       	rjmp	.+12     	; 0x158a <__stack+0x48b>
			}
			else
			{
				gps_power=0;
    157e:	10 92 c3 01 	sts	0x01C3, r1
    1582:	10 92 c2 01 	sts	0x01C2, r1
				star_flag = 0;                        
    1586:	10 92 d8 01 	sts	0x01D8, r1
			}
			
		}
  avg_md = avg_md_new;
    158a:	80 91 c6 01 	lds	r24, 0x01C6
    158e:	90 91 c7 01 	lds	r25, 0x01C7
    1592:	a0 91 c8 01 	lds	r26, 0x01C8
    1596:	b0 91 c9 01 	lds	r27, 0x01C9
    159a:	80 93 ca 01 	sts	0x01CA, r24
    159e:	90 93 cb 01 	sts	0x01CB, r25
    15a2:	a0 93 cc 01 	sts	0x01CC, r26
    15a6:	b0 93 cd 01 	sts	0x01CD, r27
	transmit_UART0(buf1);
	transmit_UART0(buf2);
	transmit_UART0(buf3);*/	
	//}
	
   if((mod_w < TOLW_D2N)&&(light*w_ctrl==1))
    15aa:	c0 90 98 04 	lds	r12, 0x0498
    15ae:	d0 90 99 04 	lds	r13, 0x0499
    15b2:	e0 90 9a 04 	lds	r14, 0x049A
    15b6:	f0 90 9b 04 	lds	r15, 0x049B
    15ba:	2f e6       	ldi	r18, 0x6F	; 111
    15bc:	32 e1       	ldi	r19, 0x12	; 18
    15be:	43 e8       	ldi	r20, 0x83	; 131
    15c0:	5b e3       	ldi	r21, 0x3B	; 59
    15c2:	c7 01       	movw	r24, r14
    15c4:	b6 01       	movw	r22, r12
    15c6:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    15ca:	88 23       	and	r24, r24
    15cc:	bc f4       	brge	.+46     	; 0x15fc <__stack+0x4fd>
    15ce:	80 91 e6 01 	lds	r24, 0x01E6
    15d2:	90 91 e5 01 	lds	r25, 0x01E5
    15d6:	89 9f       	mul	r24, r25
    15d8:	c0 01       	movw	r24, r0
    15da:	11 24       	eor	r1, r1
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	71 f4       	brne	.+28     	; 0x15fc <__stack+0x4fd>
   {
	   flag_N = flag_N+1;
    15e0:	80 91 e3 01 	lds	r24, 0x01E3
    15e4:	90 91 e4 01 	lds	r25, 0x01E4
    15e8:	01 96       	adiw	r24, 0x01	; 1
    15ea:	90 93 e4 01 	sts	0x01E4, r25
    15ee:	80 93 e3 01 	sts	0x01E3, r24
	   flag_D = 0;
    15f2:	10 92 e2 01 	sts	0x01E2, r1
    15f6:	10 92 e1 01 	sts	0x01E1, r1
    15fa:	17 c0       	rjmp	.+46     	; 0x162a <__stack+0x52b>
   }
   else if (mod_w > TOLW_N2D)
    15fc:	2f e6       	ldi	r18, 0x6F	; 111
    15fe:	32 e1       	ldi	r19, 0x12	; 18
    1600:	43 e0       	ldi	r20, 0x03	; 3
    1602:	5c e3       	ldi	r21, 0x3C	; 60
    1604:	c7 01       	movw	r24, r14
    1606:	b6 01       	movw	r22, r12
    1608:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    160c:	18 16       	cp	r1, r24
    160e:	6c f4       	brge	.+26     	; 0x162a <__stack+0x52b>
   {
	   flag_D = flag_D +1;
    1610:	80 91 e1 01 	lds	r24, 0x01E1
    1614:	90 91 e2 01 	lds	r25, 0x01E2
    1618:	01 96       	adiw	r24, 0x01	; 1
    161a:	90 93 e2 01 	sts	0x01E2, r25
    161e:	80 93 e1 01 	sts	0x01E1, r24
	   flag_N = 0;
    1622:	10 92 e4 01 	sts	0x01E4, r1
    1626:	10 92 e3 01 	sts	0x01E3, r1
   }
   
   
   //sen = flag_N;
    //transmit_UART0(sen);  
	if (Time<500)
    162a:	60 90 31 05 	lds	r6, 0x0531
    162e:	70 90 32 05 	lds	r7, 0x0532
    1632:	80 90 33 05 	lds	r8, 0x0533
    1636:	90 90 34 05 	lds	r9, 0x0534
    163a:	b0 91 35 05 	lds	r27, 0x0535
    163e:	a0 91 36 05 	lds	r26, 0x0536
    1642:	f0 91 37 05 	lds	r31, 0x0537
    1646:	e0 91 38 05 	lds	r30, 0x0538
    164a:	26 2d       	mov	r18, r6
    164c:	37 2d       	mov	r19, r7
    164e:	48 2d       	mov	r20, r8
    1650:	59 2d       	mov	r21, r9
    1652:	6b 2f       	mov	r22, r27
    1654:	7a 2f       	mov	r23, r26
    1656:	8f 2f       	mov	r24, r31
    1658:	9e 2f       	mov	r25, r30
    165a:	23 3f       	cpi	r18, 0xF3	; 243
    165c:	31 40       	sbci	r19, 0x01	; 1
    165e:	41 05       	cpc	r20, r1
    1660:	51 05       	cpc	r21, r1
    1662:	61 05       	cpc	r22, r1
    1664:	71 05       	cpc	r23, r1
    1666:	81 05       	cpc	r24, r1
    1668:	91 05       	cpc	r25, r1
    166a:	09 f0       	breq	.+2      	; 0x166e <__stack+0x56f>
    166c:	a0 f4       	brcc	.+40     	; 0x1696 <__stack+0x597>
	{
		Mode = DETUMBLING;
    166e:	84 e0       	ldi	r24, 0x04	; 4
    1670:	80 93 26 01 	sts	0x0126, r24
		t_now = 0;
    1674:	10 92 d9 01 	sts	0x01D9, r1
    1678:	10 92 da 01 	sts	0x01DA, r1
    167c:	10 92 db 01 	sts	0x01DB, r1
    1680:	10 92 dc 01 	sts	0x01DC, r1
    1684:	10 92 dd 01 	sts	0x01DD, r1
    1688:	10 92 de 01 	sts	0x01DE, r1
    168c:	10 92 df 01 	sts	0x01DF, r1
    1690:	10 92 e0 01 	sts	0x01E0, r1
    1694:	77 c0       	rjmp	.+238    	; 0x1784 <__stack+0x685>
	}
	else
	{
		if (star_flag >0)
    1696:	80 91 d8 01 	lds	r24, 0x01D8
    169a:	18 16       	cp	r1, r24
    169c:	5c f5       	brge	.+86     	; 0x16f4 <__stack+0x5f5>
		{
			if (Mode == DETUMBLING)
    169e:	80 91 26 01 	lds	r24, 0x0126
    16a2:	84 30       	cpi	r24, 0x04	; 4
    16a4:	39 f5       	brne	.+78     	; 0x16f4 <__stack+0x5f5>
			{
				if (flag_N > tol_time)
    16a6:	20 91 e3 01 	lds	r18, 0x01E3
    16aa:	30 91 e4 01 	lds	r19, 0x01E4
    16ae:	80 91 0a 01 	lds	r24, 0x010A
    16b2:	90 91 0b 01 	lds	r25, 0x010B
    16b6:	82 17       	cp	r24, r18
    16b8:	93 07       	cpc	r25, r19
    16ba:	c4 f4       	brge	.+48     	; 0x16ec <__stack+0x5ed>
				{
					Mode = NOMINAL;
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	80 93 26 01 	sts	0x0126, r24
					t_now = Time;
    16c2:	60 92 d9 01 	sts	0x01D9, r6
    16c6:	70 92 da 01 	sts	0x01DA, r7
    16ca:	80 92 db 01 	sts	0x01DB, r8
    16ce:	90 92 dc 01 	sts	0x01DC, r9
    16d2:	b0 93 dd 01 	sts	0x01DD, r27
    16d6:	a0 93 de 01 	sts	0x01DE, r26
    16da:	f0 93 df 01 	sts	0x01DF, r31
    16de:	e0 93 e0 01 	sts	0x01E0, r30
					flag_N = 0;
    16e2:	10 92 e4 01 	sts	0x01E4, r1
    16e6:	10 92 e3 01 	sts	0x01E3, r1
    16ea:	04 c0       	rjmp	.+8      	; 0x16f4 <__stack+0x5f5>
				}
				else
				{flag_D = 0;}	
    16ec:	10 92 e2 01 	sts	0x01E2, r1
    16f0:	10 92 e1 01 	sts	0x01E1, r1
			}	
		}
	
	 
	 if (Mode == NOMINAL)
    16f4:	80 91 26 01 	lds	r24, 0x0126
    16f8:	81 30       	cpi	r24, 0x01	; 1
    16fa:	09 f0       	breq	.+2      	; 0x16fe <__stack+0x5ff>
    16fc:	43 c0       	rjmp	.+134    	; 0x1784 <__stack+0x685>
	 {
		 if ((flag_D > tol_time) && (Time > (t_now+N2D_TIME)))
    16fe:	20 91 e1 01 	lds	r18, 0x01E1
    1702:	30 91 e2 01 	lds	r19, 0x01E2
    1706:	80 91 0a 01 	lds	r24, 0x010A
    170a:	90 91 0b 01 	lds	r25, 0x010B
    170e:	82 17       	cp	r24, r18
    1710:	93 07       	cpc	r25, r19
    1712:	a4 f5       	brge	.+104    	; 0x177c <__stack+0x67d>
    1714:	20 91 d9 01 	lds	r18, 0x01D9
    1718:	30 91 da 01 	lds	r19, 0x01DA
    171c:	40 91 db 01 	lds	r20, 0x01DB
    1720:	50 91 dc 01 	lds	r21, 0x01DC
    1724:	60 91 dd 01 	lds	r22, 0x01DD
    1728:	70 91 de 01 	lds	r23, 0x01DE
    172c:	80 91 df 01 	lds	r24, 0x01DF
    1730:	90 91 e0 01 	lds	r25, 0x01E0
    1734:	20 5f       	subi	r18, 0xF0	; 240
    1736:	38 4d       	sbci	r19, 0xD8	; 216
    1738:	4f 4f       	sbci	r20, 0xFF	; 255
    173a:	5f 4f       	sbci	r21, 0xFF	; 255
    173c:	6f 4f       	sbci	r22, 0xFF	; 255
    173e:	7f 4f       	sbci	r23, 0xFF	; 255
    1740:	8f 4f       	sbci	r24, 0xFF	; 255
    1742:	9f 4f       	sbci	r25, 0xFF	; 255
    1744:	a2 2e       	mov	r10, r18
    1746:	b3 2e       	mov	r11, r19
    1748:	c4 2e       	mov	r12, r20
    174a:	d5 2e       	mov	r13, r21
    174c:	e6 2e       	mov	r14, r22
    174e:	f7 2e       	mov	r15, r23
    1750:	08 2f       	mov	r16, r24
    1752:	19 2f       	mov	r17, r25
    1754:	26 2d       	mov	r18, r6
    1756:	37 2d       	mov	r19, r7
    1758:	48 2d       	mov	r20, r8
    175a:	59 2d       	mov	r21, r9
    175c:	6b 2f       	mov	r22, r27
    175e:	7a 2f       	mov	r23, r26
    1760:	8f 2f       	mov	r24, r31
    1762:	9e 2f       	mov	r25, r30
    1764:	0e 94 6d 37 	call	0x6eda	; 0x6eda <__cmpdi2>
    1768:	49 f0       	breq	.+18     	; 0x177c <__stack+0x67d>
    176a:	40 f0       	brcs	.+16     	; 0x177c <__stack+0x67d>
		 {
			 Mode = DETUMBLING;
    176c:	84 e0       	ldi	r24, 0x04	; 4
    176e:	80 93 26 01 	sts	0x0126, r24
			 flag_D = 0;
    1772:	10 92 e2 01 	sts	0x01E2, r1
    1776:	10 92 e1 01 	sts	0x01E1, r1
    177a:	04 c0       	rjmp	.+8      	; 0x1784 <__stack+0x685>
		 }
		 else
		 {
			 flag_N = 0;
    177c:	10 92 e4 01 	sts	0x01E4, r1
    1780:	10 92 e3 01 	sts	0x01E3, r1
  else if(Mode == NOMINAL)*/
	//change here
   
	
	//Mode_prev = Mode;
    Current_state.gps.gps_power_main = gps_power;
    1784:	80 91 c2 01 	lds	r24, 0x01C2
    1788:	80 93 ed 04 	sts	0x04ED, r24
}
    178c:	e0 96       	adiw	r28, 0x30	; 48
    178e:	0f b6       	in	r0, 0x3f	; 63
    1790:	f8 94       	cli
    1792:	de bf       	out	0x3e, r29	; 62
    1794:	0f be       	out	0x3f, r0	; 63
    1796:	cd bf       	out	0x3d, r28	; 61
    1798:	df 91       	pop	r29
    179a:	cf 91       	pop	r28
    179c:	1f 91       	pop	r17
    179e:	0f 91       	pop	r16
    17a0:	ff 90       	pop	r15
    17a2:	ef 90       	pop	r14
    17a4:	df 90       	pop	r13
    17a6:	cf 90       	pop	r12
    17a8:	bf 90       	pop	r11
    17aa:	af 90       	pop	r10
    17ac:	9f 90       	pop	r9
    17ae:	8f 90       	pop	r8
    17b0:	7f 90       	pop	r7
    17b2:	6f 90       	pop	r6
    17b4:	08 95       	ret

000017b6 <days_in_months>:

uint64_t seconds_since_equinox, seconds_since_pivot;

uint64_t days_in_months(uint8_t month)
{
  switch (month)
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	fc 01       	movw	r30, r24
    17ba:	32 97       	sbiw	r30, 0x02	; 2
    17bc:	eb 30       	cpi	r30, 0x0B	; 11
    17be:	f1 05       	cpc	r31, r1
    17c0:	08 f0       	brcs	.+2      	; 0x17c4 <days_in_months+0xe>
    17c2:	67 c0       	rjmp	.+206    	; 0x1892 <days_in_months+0xdc>
    17c4:	ea 5b       	subi	r30, 0xBA	; 186
    17c6:	ff 4f       	sbci	r31, 0xFF	; 255
    17c8:	0c 94 1e 37 	jmp	0x6e3c	; 0x6e3c <__tablejump2__>
  {
    case 1:
      return 0;
      break;
    case 2:
      return 31;
    17cc:	2f e1       	ldi	r18, 0x1F	; 31
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	40 e0       	ldi	r20, 0x00	; 0
    17d2:	50 e0       	ldi	r21, 0x00	; 0
    17d4:	60 e0       	ldi	r22, 0x00	; 0
    17d6:	70 e0       	ldi	r23, 0x00	; 0
    17d8:	80 e0       	ldi	r24, 0x00	; 0
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	08 95       	ret
      break;
    case 3:
      return 59;
    17de:	2b e3       	ldi	r18, 0x3B	; 59
    17e0:	30 e0       	ldi	r19, 0x00	; 0
    17e2:	40 e0       	ldi	r20, 0x00	; 0
    17e4:	50 e0       	ldi	r21, 0x00	; 0
    17e6:	60 e0       	ldi	r22, 0x00	; 0
    17e8:	70 e0       	ldi	r23, 0x00	; 0
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	08 95       	ret
      break;
    case 4:
      return 90;
    17f0:	2a e5       	ldi	r18, 0x5A	; 90
    17f2:	30 e0       	ldi	r19, 0x00	; 0
    17f4:	40 e0       	ldi	r20, 0x00	; 0
    17f6:	50 e0       	ldi	r21, 0x00	; 0
    17f8:	60 e0       	ldi	r22, 0x00	; 0
    17fa:	70 e0       	ldi	r23, 0x00	; 0
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	08 95       	ret
      break;
    case 5:
      return 120;
    1802:	28 e7       	ldi	r18, 0x78	; 120
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e0       	ldi	r20, 0x00	; 0
    1808:	50 e0       	ldi	r21, 0x00	; 0
    180a:	60 e0       	ldi	r22, 0x00	; 0
    180c:	70 e0       	ldi	r23, 0x00	; 0
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	08 95       	ret
      break;
    case 6:
      return 151;
    1814:	27 e9       	ldi	r18, 0x97	; 151
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e0       	ldi	r20, 0x00	; 0
    181a:	50 e0       	ldi	r21, 0x00	; 0
    181c:	60 e0       	ldi	r22, 0x00	; 0
    181e:	70 e0       	ldi	r23, 0x00	; 0
    1820:	80 e0       	ldi	r24, 0x00	; 0
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	08 95       	ret
      break;
    case 7:
      return 181;
    1826:	25 eb       	ldi	r18, 0xB5	; 181
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	40 e0       	ldi	r20, 0x00	; 0
    182c:	50 e0       	ldi	r21, 0x00	; 0
    182e:	60 e0       	ldi	r22, 0x00	; 0
    1830:	70 e0       	ldi	r23, 0x00	; 0
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	08 95       	ret
      break;
    case 8:
      return 212;
    1838:	24 ed       	ldi	r18, 0xD4	; 212
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	40 e0       	ldi	r20, 0x00	; 0
    183e:	50 e0       	ldi	r21, 0x00	; 0
    1840:	60 e0       	ldi	r22, 0x00	; 0
    1842:	70 e0       	ldi	r23, 0x00	; 0
    1844:	80 e0       	ldi	r24, 0x00	; 0
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	08 95       	ret
      break;
    case 9:
      return 243;
    184a:	23 ef       	ldi	r18, 0xF3	; 243
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	40 e0       	ldi	r20, 0x00	; 0
    1850:	50 e0       	ldi	r21, 0x00	; 0
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	08 95       	ret
      break;
    case 10:
      return 273;
    185c:	21 e1       	ldi	r18, 0x11	; 17
    185e:	31 e0       	ldi	r19, 0x01	; 1
    1860:	40 e0       	ldi	r20, 0x00	; 0
    1862:	50 e0       	ldi	r21, 0x00	; 0
    1864:	60 e0       	ldi	r22, 0x00	; 0
    1866:	70 e0       	ldi	r23, 0x00	; 0
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	08 95       	ret
      break;
    case 11:
      return 304;
    186e:	20 e3       	ldi	r18, 0x30	; 48
    1870:	31 e0       	ldi	r19, 0x01	; 1
    1872:	40 e0       	ldi	r20, 0x00	; 0
    1874:	50 e0       	ldi	r21, 0x00	; 0
    1876:	60 e0       	ldi	r22, 0x00	; 0
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	08 95       	ret
      break;
    case 12:
      return 334;
    1880:	2e e4       	ldi	r18, 0x4E	; 78
    1882:	31 e0       	ldi	r19, 0x01	; 1
    1884:	40 e0       	ldi	r20, 0x00	; 0
    1886:	50 e0       	ldi	r21, 0x00	; 0
    1888:	60 e0       	ldi	r22, 0x00	; 0
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	80 e0       	ldi	r24, 0x00	; 0
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	08 95       	ret
uint64_t days_in_months(uint8_t month)
{
  switch (month)
  {
    case 1:
      return 0;
    1892:	20 e0       	ldi	r18, 0x00	; 0
    1894:	30 e0       	ldi	r19, 0x00	; 0
    1896:	40 e0       	ldi	r20, 0x00	; 0
    1898:	50 e0       	ldi	r21, 0x00	; 0
    189a:	60 e0       	ldi	r22, 0x00	; 0
    189c:	70 e0       	ldi	r23, 0x00	; 0
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    case 12:
      return 334;
      break;
  }
  return 0;
}
    18a2:	08 95       	ret

000018a4 <get_seconds_since_pivot>:
uint64_t get_seconds_since_pivot(uint16_t year, uint8_t month, uint8_t date, uint8_t hours, uint8_t minutes, uint8_t seconds)
{
    18a4:	2f 92       	push	r2
    18a6:	3f 92       	push	r3
    18a8:	4f 92       	push	r4
    18aa:	5f 92       	push	r5
    18ac:	6f 92       	push	r6
    18ae:	7f 92       	push	r7
    18b0:	8f 92       	push	r8
    18b2:	9f 92       	push	r9
    18b4:	af 92       	push	r10
    18b6:	bf 92       	push	r11
    18b8:	cf 92       	push	r12
    18ba:	df 92       	push	r13
    18bc:	ef 92       	push	r14
    18be:	ff 92       	push	r15
    18c0:	0f 93       	push	r16
    18c2:	1f 93       	push	r17
    18c4:	cf 93       	push	r28
    18c6:	df 93       	push	r29
    18c8:	cd b7       	in	r28, 0x3d	; 61
    18ca:	de b7       	in	r29, 0x3e	; 62
    18cc:	65 97       	sbiw	r28, 0x15	; 21
    18ce:	0f b6       	in	r0, 0x3f	; 63
    18d0:	f8 94       	cli
    18d2:	de bf       	out	0x3e, r29	; 62
    18d4:	0f be       	out	0x3f, r0	; 63
    18d6:	cd bf       	out	0x3d, r28	; 61
    18d8:	2c 01       	movw	r4, r24
    18da:	86 2f       	mov	r24, r22
    18dc:	49 87       	std	Y+9, r20	; 0x09
    18de:	62 2e       	mov	r6, r18
    18e0:	a0 2e       	mov	r10, r16
  uint64_t now = 0;
  
  now += ((uint64_t)year - 2015) * 365 * 24 * 60 * 60;
  now += ((uint64_t)date + days_in_months(month) - 1) * 24 * 60 * 60;
    18e2:	69 df       	rcall	.-302    	; 0x17b6 <days_in_months>
    18e4:	2a 87       	std	Y+10, r18	; 0x0a
    18e6:	3b 87       	std	Y+11, r19	; 0x0b
    18e8:	4c 87       	std	Y+12, r20	; 0x0c
    18ea:	5d 87       	std	Y+13, r21	; 0x0d
    18ec:	6e 87       	std	Y+14, r22	; 0x0e
    18ee:	7f 87       	std	Y+15, r23	; 0x0f
    18f0:	88 8b       	std	Y+16, r24	; 0x10
    18f2:	99 8b       	std	Y+17, r25	; 0x11
    18f4:	2e 2d       	mov	r18, r14
    18f6:	30 e0       	ldi	r19, 0x00	; 0
    18f8:	40 e0       	ldi	r20, 0x00	; 0
    18fa:	50 e0       	ldi	r21, 0x00	; 0
    18fc:	60 e0       	ldi	r22, 0x00	; 0
    18fe:	70 e0       	ldi	r23, 0x00	; 0
    1900:	80 e0       	ldi	r24, 0x00	; 0
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	20 58       	subi	r18, 0x80	; 128
    1906:	3c 45       	sbci	r19, 0x5C	; 92
    1908:	44 49       	sbci	r20, 0x94	; 148
    190a:	5b 4c       	sbci	r21, 0xCB	; 203
    190c:	6e 40       	sbci	r22, 0x0E	; 14
    190e:	71 09       	sbc	r23, r1
    1910:	81 09       	sbc	r24, r1
    1912:	91 09       	sbc	r25, r1
    1914:	82 2e       	mov	r8, r18
    1916:	93 2e       	mov	r9, r19
    1918:	34 2e       	mov	r3, r20
    191a:	75 2e       	mov	r7, r21
    191c:	b6 2f       	mov	r27, r22
    191e:	a7 2f       	mov	r26, r23
    1920:	f8 2f       	mov	r31, r24
    1922:	e9 2f       	mov	r30, r25
  now += ((uint64_t)hours) * 60 * 60;
  now += ((uint64_t)minutes) * 60;
    1924:	20 2f       	mov	r18, r16
    1926:	30 e0       	ldi	r19, 0x00	; 0
    1928:	40 e0       	ldi	r20, 0x00	; 0
    192a:	50 e0       	ldi	r21, 0x00	; 0
    192c:	60 e0       	ldi	r22, 0x00	; 0
    192e:	70 e0       	ldi	r23, 0x00	; 0
    1930:	80 e0       	ldi	r24, 0x00	; 0
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	04 e0       	ldi	r16, 0x04	; 4
    1936:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    193a:	b1 2c       	mov	r11, r1
    193c:	c1 2c       	mov	r12, r1
    193e:	d1 2c       	mov	r13, r1
    1940:	e1 2c       	mov	r14, r1
    1942:	f1 2c       	mov	r15, r1
    1944:	00 e0       	ldi	r16, 0x00	; 0
    1946:	10 e0       	ldi	r17, 0x00	; 0
    1948:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    194c:	02 e0       	ldi	r16, 0x02	; 2
    194e:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1952:	a2 2e       	mov	r10, r18
    1954:	b3 2e       	mov	r11, r19
    1956:	c4 2e       	mov	r12, r20
    1958:	d5 2e       	mov	r13, r21
    195a:	e6 2e       	mov	r14, r22
    195c:	f7 2e       	mov	r15, r23
    195e:	08 2f       	mov	r16, r24
    1960:	19 2f       	mov	r17, r25
    1962:	28 2d       	mov	r18, r8
    1964:	39 2d       	mov	r19, r9
    1966:	43 2d       	mov	r20, r3
    1968:	57 2d       	mov	r21, r7
    196a:	6b 2f       	mov	r22, r27
    196c:	7a 2f       	mov	r23, r26
    196e:	8f 2f       	mov	r24, r31
    1970:	9e 2f       	mov	r25, r30
    1972:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    1976:	72 2e       	mov	r7, r18
    1978:	83 2e       	mov	r8, r19
    197a:	94 2e       	mov	r9, r20
    197c:	25 2e       	mov	r2, r21
    197e:	36 2e       	mov	r3, r22
    1980:	b7 2f       	mov	r27, r23
    1982:	a8 2f       	mov	r26, r24
    1984:	f9 2f       	mov	r31, r25
{
  uint64_t now = 0;
  
  now += ((uint64_t)year - 2015) * 365 * 24 * 60 * 60;
  now += ((uint64_t)date + days_in_months(month) - 1) * 24 * 60 * 60;
  now += ((uint64_t)hours) * 60 * 60;
    1986:	26 2d       	mov	r18, r6
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	40 e0       	ldi	r20, 0x00	; 0
    198c:	50 e0       	ldi	r21, 0x00	; 0
    198e:	60 e0       	ldi	r22, 0x00	; 0
    1990:	70 e0       	ldi	r23, 0x00	; 0
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	04 e0       	ldi	r16, 0x04	; 4
    1998:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    199c:	a6 2c       	mov	r10, r6
    199e:	b1 2c       	mov	r11, r1
    19a0:	c1 2c       	mov	r12, r1
    19a2:	d1 2c       	mov	r13, r1
    19a4:	e1 2c       	mov	r14, r1
    19a6:	f1 2c       	mov	r15, r1
    19a8:	00 e0       	ldi	r16, 0x00	; 0
    19aa:	10 e0       	ldi	r17, 0x00	; 0
    19ac:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    19b0:	a2 2e       	mov	r10, r18
    19b2:	b3 2e       	mov	r11, r19
    19b4:	c4 2e       	mov	r12, r20
    19b6:	d5 2e       	mov	r13, r21
    19b8:	e6 2e       	mov	r14, r22
    19ba:	f7 2e       	mov	r15, r23
    19bc:	e8 2f       	mov	r30, r24
    19be:	19 2f       	mov	r17, r25
    19c0:	04 e0       	ldi	r16, 0x04	; 4
    19c2:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    19c6:	0e 2f       	mov	r16, r30
    19c8:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    19cc:	04 e0       	ldi	r16, 0x04	; 4
    19ce:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    19d2:	a2 2e       	mov	r10, r18
    19d4:	b3 2e       	mov	r11, r19
    19d6:	c4 2e       	mov	r12, r20
    19d8:	d5 2e       	mov	r13, r21
    19da:	e6 2e       	mov	r14, r22
    19dc:	f7 2e       	mov	r15, r23
    19de:	08 2f       	mov	r16, r24
    19e0:	19 2f       	mov	r17, r25
    19e2:	27 2d       	mov	r18, r7
    19e4:	38 2d       	mov	r19, r8
    19e6:	49 2d       	mov	r20, r9
    19e8:	52 2d       	mov	r21, r2
    19ea:	63 2d       	mov	r22, r3
    19ec:	7b 2f       	mov	r23, r27
    19ee:	8a 2f       	mov	r24, r26
    19f0:	9f 2f       	mov	r25, r31
    19f2:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    19f6:	22 2e       	mov	r2, r18
    19f8:	33 2e       	mov	r3, r19
    19fa:	4a 8b       	std	Y+18, r20	; 0x12
    19fc:	5b 8b       	std	Y+19, r21	; 0x13
    19fe:	66 2e       	mov	r6, r22
    1a00:	77 2e       	mov	r7, r23
    1a02:	8c 8b       	std	Y+20, r24	; 0x14
    1a04:	9d 8b       	std	Y+21, r25	; 0x15
}
uint64_t get_seconds_since_pivot(uint16_t year, uint8_t month, uint8_t date, uint8_t hours, uint8_t minutes, uint8_t seconds)
{
  uint64_t now = 0;
  
  now += ((uint64_t)year - 2015) * 365 * 24 * 60 * 60;
    1a06:	92 01       	movw	r18, r4
    1a08:	49 82       	std	Y+1, r4	; 0x01
    1a0a:	3a 83       	std	Y+2, r19	; 0x02
    1a0c:	40 e0       	ldi	r20, 0x00	; 0
    1a0e:	50 e0       	ldi	r21, 0x00	; 0
    1a10:	60 e0       	ldi	r22, 0x00	; 0
    1a12:	70 e0       	ldi	r23, 0x00	; 0
    1a14:	80 e0       	ldi	r24, 0x00	; 0
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	03 e0       	ldi	r16, 0x03	; 3
    1a1a:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1a1e:	82 2e       	mov	r8, r18
    1a20:	93 2e       	mov	r9, r19
    1a22:	44 2e       	mov	r4, r20
    1a24:	55 2e       	mov	r5, r21
    1a26:	b6 2f       	mov	r27, r22
    1a28:	a7 2f       	mov	r26, r23
    1a2a:	f8 2f       	mov	r31, r24
    1a2c:	e9 2f       	mov	r30, r25
    1a2e:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1a32:	a2 2e       	mov	r10, r18
    1a34:	b3 2e       	mov	r11, r19
    1a36:	c4 2e       	mov	r12, r20
    1a38:	d5 2e       	mov	r13, r21
    1a3a:	e6 2e       	mov	r14, r22
    1a3c:	f7 2e       	mov	r15, r23
    1a3e:	08 2f       	mov	r16, r24
    1a40:	19 2f       	mov	r17, r25
    1a42:	28 2d       	mov	r18, r8
    1a44:	39 2d       	mov	r19, r9
    1a46:	44 2d       	mov	r20, r4
    1a48:	55 2d       	mov	r21, r5
    1a4a:	6b 2f       	mov	r22, r27
    1a4c:	7a 2f       	mov	r23, r26
    1a4e:	8f 2f       	mov	r24, r31
    1a50:	9e 2f       	mov	r25, r30
    1a52:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    1a56:	a9 80       	ldd	r10, Y+1	; 0x01
    1a58:	ba 80       	ldd	r11, Y+2	; 0x02
    1a5a:	c1 2c       	mov	r12, r1
    1a5c:	d1 2c       	mov	r13, r1
    1a5e:	e1 2c       	mov	r14, r1
    1a60:	f1 2c       	mov	r15, r1
    1a62:	00 e0       	ldi	r16, 0x00	; 0
    1a64:	10 e0       	ldi	r17, 0x00	; 0
    1a66:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    1a6a:	a2 2e       	mov	r10, r18
    1a6c:	b3 2e       	mov	r11, r19
    1a6e:	c4 2e       	mov	r12, r20
    1a70:	d5 2e       	mov	r13, r21
    1a72:	e6 2e       	mov	r14, r22
    1a74:	f7 2e       	mov	r15, r23
    1a76:	e8 2f       	mov	r30, r24
    1a78:	19 2f       	mov	r17, r25
    1a7a:	04 e0       	ldi	r16, 0x04	; 4
    1a7c:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1a80:	0e 2f       	mov	r16, r30
    1a82:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1a86:	a2 2e       	mov	r10, r18
    1a88:	b3 2e       	mov	r11, r19
    1a8a:	c4 2e       	mov	r12, r20
    1a8c:	d5 2e       	mov	r13, r21
    1a8e:	e6 2e       	mov	r14, r22
    1a90:	f7 2e       	mov	r15, r23
    1a92:	e8 2f       	mov	r30, r24
    1a94:	19 2f       	mov	r17, r25
    1a96:	04 e0       	ldi	r16, 0x04	; 4
    1a98:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1a9c:	0e 2f       	mov	r16, r30
    1a9e:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1aa2:	a2 2e       	mov	r10, r18
    1aa4:	b3 2e       	mov	r11, r19
    1aa6:	c4 2e       	mov	r12, r20
    1aa8:	d5 2e       	mov	r13, r21
    1aaa:	e6 2e       	mov	r14, r22
    1aac:	f7 2e       	mov	r15, r23
    1aae:	e8 2f       	mov	r30, r24
    1ab0:	19 2f       	mov	r17, r25
    1ab2:	04 e0       	ldi	r16, 0x04	; 4
    1ab4:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1ab8:	0e 2f       	mov	r16, r30
    1aba:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1abe:	07 e0       	ldi	r16, 0x07	; 7
    1ac0:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1ac4:	a2 2e       	mov	r10, r18
    1ac6:	b3 2e       	mov	r11, r19
    1ac8:	c4 2e       	mov	r12, r20
    1aca:	d5 2e       	mov	r13, r21
    1acc:	e6 2e       	mov	r14, r22
    1ace:	f7 2e       	mov	r15, r23
    1ad0:	08 2f       	mov	r16, r24
    1ad2:	19 2f       	mov	r17, r25
    1ad4:	22 2d       	mov	r18, r2
    1ad6:	33 2d       	mov	r19, r3
    1ad8:	4a 89       	ldd	r20, Y+18	; 0x12
    1ada:	5b 89       	ldd	r21, Y+19	; 0x13
    1adc:	66 2d       	mov	r22, r6
    1ade:	77 2d       	mov	r23, r7
    1ae0:	8c 89       	ldd	r24, Y+20	; 0x14
    1ae2:	9d 89       	ldd	r25, Y+21	; 0x15
    1ae4:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    1ae8:	72 2e       	mov	r7, r18
    1aea:	83 2e       	mov	r8, r19
    1aec:	94 2e       	mov	r9, r20
    1aee:	b5 2f       	mov	r27, r21
    1af0:	66 2e       	mov	r6, r22
    1af2:	57 2e       	mov	r5, r23
    1af4:	f8 2f       	mov	r31, r24
    1af6:	e9 2f       	mov	r30, r25
    1af8:	29 85       	ldd	r18, Y+9	; 0x09
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	40 e0       	ldi	r20, 0x00	; 0
    1afe:	50 e0       	ldi	r21, 0x00	; 0
    1b00:	60 e0       	ldi	r22, 0x00	; 0
    1b02:	70 e0       	ldi	r23, 0x00	; 0
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	af ef       	ldi	r26, 0xFF	; 255
    1b0a:	0e 94 58 37 	call	0x6eb0	; 0x6eb0 <__adddi3_s8>
  now += ((uint64_t)date + days_in_months(month) - 1) * 24 * 60 * 60;
    1b0e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b10:	bb 84       	ldd	r11, Y+11	; 0x0b
    1b12:	cc 84       	ldd	r12, Y+12	; 0x0c
    1b14:	dd 84       	ldd	r13, Y+13	; 0x0d
    1b16:	ee 84       	ldd	r14, Y+14	; 0x0e
    1b18:	ff 84       	ldd	r15, Y+15	; 0x0f
    1b1a:	08 89       	ldd	r16, Y+16	; 0x10
    1b1c:	19 89       	ldd	r17, Y+17	; 0x11
    1b1e:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
    1b22:	a2 2e       	mov	r10, r18
    1b24:	b3 2e       	mov	r11, r19
    1b26:	c4 2e       	mov	r12, r20
    1b28:	d5 2e       	mov	r13, r21
    1b2a:	e6 2e       	mov	r14, r22
    1b2c:	f7 2e       	mov	r15, r23
    1b2e:	a8 2f       	mov	r26, r24
    1b30:	19 2f       	mov	r17, r25
    1b32:	02 e0       	ldi	r16, 0x02	; 2
    1b34:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1b38:	0a 2f       	mov	r16, r26
    1b3a:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1b3e:	a2 2e       	mov	r10, r18
    1b40:	b3 2e       	mov	r11, r19
    1b42:	c4 2e       	mov	r12, r20
    1b44:	d5 2e       	mov	r13, r21
    1b46:	e6 2e       	mov	r14, r22
    1b48:	f7 2e       	mov	r15, r23
    1b4a:	a8 2f       	mov	r26, r24
    1b4c:	19 2f       	mov	r17, r25
    1b4e:	04 e0       	ldi	r16, 0x04	; 4
    1b50:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1b54:	0a 2f       	mov	r16, r26
    1b56:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1b5a:	a2 2e       	mov	r10, r18
    1b5c:	b3 2e       	mov	r11, r19
    1b5e:	c4 2e       	mov	r12, r20
    1b60:	d5 2e       	mov	r13, r21
    1b62:	e6 2e       	mov	r14, r22
    1b64:	f7 2e       	mov	r15, r23
    1b66:	a8 2f       	mov	r26, r24
    1b68:	19 2f       	mov	r17, r25
    1b6a:	04 e0       	ldi	r16, 0x04	; 4
    1b6c:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1b70:	0a 2f       	mov	r16, r26
    1b72:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1b76:	07 e0       	ldi	r16, 0x07	; 7
    1b78:	0e 94 36 37 	call	0x6e6c	; 0x6e6c <__ashldi3>
    1b7c:	a2 2e       	mov	r10, r18
    1b7e:	b3 2e       	mov	r11, r19
    1b80:	c4 2e       	mov	r12, r20
    1b82:	d5 2e       	mov	r13, r21
    1b84:	e6 2e       	mov	r14, r22
    1b86:	f7 2e       	mov	r15, r23
    1b88:	08 2f       	mov	r16, r24
    1b8a:	19 2f       	mov	r17, r25
  now += ((uint64_t)hours) * 60 * 60;
  now += ((uint64_t)minutes) * 60;
  now += (uint64_t)seconds;
    1b8c:	27 2d       	mov	r18, r7
    1b8e:	38 2d       	mov	r19, r8
    1b90:	49 2d       	mov	r20, r9
    1b92:	5b 2f       	mov	r21, r27
    1b94:	66 2d       	mov	r22, r6
    1b96:	75 2d       	mov	r23, r5
    1b98:	8f 2f       	mov	r24, r31
    1b9a:	9e 2f       	mov	r25, r30
    1b9c:	0e 94 4f 37 	call	0x6e9e	; 0x6e9e <__adddi3>
  return now;
}
    1ba0:	65 96       	adiw	r28, 0x15	; 21
    1ba2:	0f b6       	in	r0, 0x3f	; 63
    1ba4:	f8 94       	cli
    1ba6:	de bf       	out	0x3e, r29	; 62
    1ba8:	0f be       	out	0x3f, r0	; 63
    1baa:	cd bf       	out	0x3d, r28	; 61
    1bac:	df 91       	pop	r29
    1bae:	cf 91       	pop	r28
    1bb0:	1f 91       	pop	r17
    1bb2:	0f 91       	pop	r16
    1bb4:	ff 90       	pop	r15
    1bb6:	ef 90       	pop	r14
    1bb8:	df 90       	pop	r13
    1bba:	cf 90       	pop	r12
    1bbc:	bf 90       	pop	r11
    1bbe:	af 90       	pop	r10
    1bc0:	9f 90       	pop	r9
    1bc2:	8f 90       	pop	r8
    1bc4:	7f 90       	pop	r7
    1bc6:	6f 90       	pop	r6
    1bc8:	5f 90       	pop	r5
    1bca:	4f 90       	pop	r4
    1bcc:	3f 90       	pop	r3
    1bce:	2f 90       	pop	r2
    1bd0:	08 95       	ret

00001bd2 <get_seconds_since_equinox>:

void get_seconds_since_equinox(void)
{
    1bd2:	af 92       	push	r10
    1bd4:	bf 92       	push	r11
    1bd6:	cf 92       	push	r12
    1bd8:	df 92       	push	r13
    1bda:	ef 92       	push	r14
    1bdc:	ff 92       	push	r15
    1bde:	0f 93       	push	r16
    1be0:	1f 93       	push	r17
    1be2:	cf 93       	push	r28
    1be4:	df 93       	push	r29
  uint64_t equinox;
  
  struct GPS_reading * gps = (struct GPS_reading *)&(Current_state.gps);

  equinox = get_seconds_since_pivot(2016, 3, 20, 04, 30, 0);
    1be6:	e1 2c       	mov	r14, r1
    1be8:	0e e1       	ldi	r16, 0x1E	; 30
    1bea:	24 e0       	ldi	r18, 0x04	; 4
    1bec:	44 e1       	ldi	r20, 0x14	; 20
    1bee:	63 e0       	ldi	r22, 0x03	; 3
    1bf0:	80 ee       	ldi	r24, 0xE0	; 224
    1bf2:	97 e0       	ldi	r25, 0x07	; 7
    1bf4:	57 de       	rcall	.-850    	; 0x18a4 <get_seconds_since_pivot>
    1bf6:	a2 2e       	mov	r10, r18
    1bf8:	b3 2e       	mov	r11, r19
    1bfa:	c4 2e       	mov	r12, r20
    1bfc:	d5 2e       	mov	r13, r21
    1bfe:	d6 2f       	mov	r29, r22
    1c00:	f7 2e       	mov	r15, r23
    1c02:	c8 2f       	mov	r28, r24
    1c04:	19 2f       	mov	r17, r25
  seconds_since_pivot = get_seconds_since_pivot(gps->year, gps->month, gps->date, gps->hours, gps->minutes, gps->seconds);
    1c06:	ef eb       	ldi	r30, 0xBF	; 191
    1c08:	f4 e0       	ldi	r31, 0x04	; 4
    1c0a:	81 a5       	ldd	r24, Z+41	; 0x29
    1c0c:	92 a5       	ldd	r25, Z+42	; 0x2a
    1c0e:	e6 a0       	ldd	r14, Z+38	; 0x26
    1c10:	05 a1       	ldd	r16, Z+37	; 0x25
    1c12:	24 a1       	ldd	r18, Z+36	; 0x24
    1c14:	47 a1       	ldd	r20, Z+39	; 0x27
    1c16:	60 a5       	ldd	r22, Z+40	; 0x28
    1c18:	45 de       	rcall	.-886    	; 0x18a4 <get_seconds_since_pivot>
    1c1a:	20 93 9c 04 	sts	0x049C, r18
    1c1e:	30 93 9d 04 	sts	0x049D, r19
    1c22:	40 93 9e 04 	sts	0x049E, r20
    1c26:	50 93 9f 04 	sts	0x049F, r21
    1c2a:	60 93 a0 04 	sts	0x04A0, r22
    1c2e:	70 93 a1 04 	sts	0x04A1, r23
    1c32:	80 93 a2 04 	sts	0x04A2, r24
    1c36:	90 93 a3 04 	sts	0x04A3, r25
  
  seconds_since_equinox = seconds_since_pivot - equinox;
    1c3a:	ed 2e       	mov	r14, r29
    1c3c:	0c 2f       	mov	r16, r28
    1c3e:	0e 94 64 37 	call	0x6ec8	; 0x6ec8 <__subdi3>
    1c42:	20 93 a4 04 	sts	0x04A4, r18
    1c46:	30 93 a5 04 	sts	0x04A5, r19
    1c4a:	40 93 a6 04 	sts	0x04A6, r20
    1c4e:	50 93 a7 04 	sts	0x04A7, r21
    1c52:	60 93 a8 04 	sts	0x04A8, r22
    1c56:	70 93 a9 04 	sts	0x04A9, r23
    1c5a:	80 93 aa 04 	sts	0x04AA, r24
    1c5e:	90 93 ab 04 	sts	0x04AB, r25
  {
	  p=(uint8_t)(seconds_since_equinox>>(8*i));
	  transmit_UART0(p);
  }*/
  
}
    1c62:	df 91       	pop	r29
    1c64:	cf 91       	pop	r28
    1c66:	1f 91       	pop	r17
    1c68:	0f 91       	pop	r16
    1c6a:	ff 90       	pop	r15
    1c6c:	ef 90       	pop	r14
    1c6e:	df 90       	pop	r13
    1c70:	cf 90       	pop	r12
    1c72:	bf 90       	pop	r11
    1c74:	af 90       	pop	r10
    1c76:	08 95       	ret

00001c78 <ecef2eci>:

void ecef2eci(vector v_ecef, vector v_eci)
{
    1c78:	4f 92       	push	r4
    1c7a:	5f 92       	push	r5
    1c7c:	6f 92       	push	r6
    1c7e:	7f 92       	push	r7
    1c80:	8f 92       	push	r8
    1c82:	9f 92       	push	r9
    1c84:	af 92       	push	r10
    1c86:	bf 92       	push	r11
    1c88:	cf 92       	push	r12
    1c8a:	df 92       	push	r13
    1c8c:	ef 92       	push	r14
    1c8e:	ff 92       	push	r15
    1c90:	0f 93       	push	r16
    1c92:	1f 93       	push	r17
    1c94:	cf 93       	push	r28
    1c96:	df 93       	push	r29
    1c98:	cd b7       	in	r28, 0x3d	; 61
    1c9a:	de b7       	in	r29, 0x3e	; 62
    1c9c:	a4 97       	sbiw	r28, 0x24	; 36
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	f8 94       	cli
    1ca2:	de bf       	out	0x3e, r29	; 62
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	cd bf       	out	0x3d, r28	; 61
    1ca8:	7c 01       	movw	r14, r24
    1caa:	6b 01       	movw	r12, r22
  double sidereal_time = STPERUT * seconds_since_equinox; // floatch
    1cac:	20 91 a4 04 	lds	r18, 0x04A4
    1cb0:	30 91 a5 04 	lds	r19, 0x04A5
    1cb4:	40 91 a6 04 	lds	r20, 0x04A6
    1cb8:	50 91 a7 04 	lds	r21, 0x04A7
    1cbc:	60 91 a8 04 	lds	r22, 0x04A8
    1cc0:	70 91 a9 04 	lds	r23, 0x04A9
    1cc4:	80 91 aa 04 	lds	r24, 0x04AA
    1cc8:	90 91 ab 04 	lds	r25, 0x04AB
    1ccc:	0e 94 d5 33 	call	0x67aa	; 0x67aa <__floatundisf>
    1cd0:	27 eb       	ldi	r18, 0xB7	; 183
    1cd2:	39 e5       	ldi	r19, 0x59	; 89
    1cd4:	40 e8       	ldi	r20, 0x80	; 128
    1cd6:	5f e3       	ldi	r21, 0x3F	; 63
    1cd8:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  double phi = W_EARTH_ROT * sidereal_time;// floatch
    1cdc:	2e eb       	ldi	r18, 0xBE	; 190
    1cde:	37 ef       	ldi	r19, 0xF7	; 247
    1ce0:	48 e9       	ldi	r20, 0x98	; 152
    1ce2:	58 e3       	ldi	r21, 0x38	; 56
    1ce4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    1ce8:	2b 01       	movw	r4, r22
    1cea:	3c 01       	movw	r6, r24
  
  matrix m_rot = { { cos(phi), sin(phi), 0 },
    1cec:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    1cf0:	4b 01       	movw	r8, r22
    1cf2:	5c 01       	movw	r10, r24
    1cf4:	69 83       	std	Y+1, r22	; 0x01
    1cf6:	7a 83       	std	Y+2, r23	; 0x02
    1cf8:	8b 83       	std	Y+3, r24	; 0x03
    1cfa:	9c 83       	std	Y+4, r25	; 0x04
    1cfc:	c3 01       	movw	r24, r6
    1cfe:	b2 01       	movw	r22, r4
    1d00:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    1d04:	6d 83       	std	Y+5, r22	; 0x05
    1d06:	7e 83       	std	Y+6, r23	; 0x06
    1d08:	8f 83       	std	Y+7, r24	; 0x07
    1d0a:	98 87       	std	Y+8, r25	; 0x08
    1d0c:	19 86       	std	Y+9, r1	; 0x09
    1d0e:	1a 86       	std	Y+10, r1	; 0x0a
    1d10:	1b 86       	std	Y+11, r1	; 0x0b
    1d12:	1c 86       	std	Y+12, r1	; 0x0c
                   { -sin(phi), cos(phi), 0 },
    1d14:	8b 01       	movw	r16, r22
    1d16:	9c 01       	movw	r18, r24
    1d18:	30 58       	subi	r19, 0x80	; 128
void ecef2eci(vector v_ecef, vector v_eci)
{
  double sidereal_time = STPERUT * seconds_since_equinox; // floatch
  double phi = W_EARTH_ROT * sidereal_time;// floatch
  
  matrix m_rot = { { cos(phi), sin(phi), 0 },
    1d1a:	0d 87       	std	Y+13, r16	; 0x0d
    1d1c:	1e 87       	std	Y+14, r17	; 0x0e
    1d1e:	2f 87       	std	Y+15, r18	; 0x0f
    1d20:	38 8b       	std	Y+16, r19	; 0x10
    1d22:	89 8a       	std	Y+17, r8	; 0x11
    1d24:	9a 8a       	std	Y+18, r9	; 0x12
    1d26:	ab 8a       	std	Y+19, r10	; 0x13
    1d28:	bc 8a       	std	Y+20, r11	; 0x14
    1d2a:	1d 8a       	std	Y+21, r1	; 0x15
    1d2c:	1e 8a       	std	Y+22, r1	; 0x16
    1d2e:	1f 8a       	std	Y+23, r1	; 0x17
    1d30:	18 8e       	std	Y+24, r1	; 0x18
    1d32:	19 8e       	std	Y+25, r1	; 0x19
    1d34:	1a 8e       	std	Y+26, r1	; 0x1a
    1d36:	1b 8e       	std	Y+27, r1	; 0x1b
    1d38:	1c 8e       	std	Y+28, r1	; 0x1c
    1d3a:	1d 8e       	std	Y+29, r1	; 0x1d
    1d3c:	1e 8e       	std	Y+30, r1	; 0x1e
    1d3e:	1f 8e       	std	Y+31, r1	; 0x1f
    1d40:	18 a2       	std	Y+32, r1	; 0x20
    1d42:	80 e0       	ldi	r24, 0x00	; 0
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	a0 e8       	ldi	r26, 0x80	; 128
    1d48:	bf e3       	ldi	r27, 0x3F	; 63
    1d4a:	89 a3       	std	Y+33, r24	; 0x21
    1d4c:	9a a3       	std	Y+34, r25	; 0x22
    1d4e:	ab a3       	std	Y+35, r26	; 0x23
    1d50:	bc a3       	std	Y+36, r27	; 0x24
                   { -sin(phi), cos(phi), 0 },
                   { 0, 0, 1 } };
               
  vector_into_matrix(v_ecef, m_rot, v_eci);
    1d52:	a6 01       	movw	r20, r12
    1d54:	be 01       	movw	r22, r28
    1d56:	6f 5f       	subi	r22, 0xFF	; 255
    1d58:	7f 4f       	sbci	r23, 0xFF	; 255
    1d5a:	c7 01       	movw	r24, r14
    1d5c:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <vector_into_matrix>
  p = (uint8_t)(-1 * phi1);
  else
  p = (uint8_t)phi1;
  transmit_UART0(p);
*/
}
    1d60:	a4 96       	adiw	r28, 0x24	; 36
    1d62:	0f b6       	in	r0, 0x3f	; 63
    1d64:	f8 94       	cli
    1d66:	de bf       	out	0x3e, r29	; 62
    1d68:	0f be       	out	0x3f, r0	; 63
    1d6a:	cd bf       	out	0x3d, r28	; 61
    1d6c:	df 91       	pop	r29
    1d6e:	cf 91       	pop	r28
    1d70:	1f 91       	pop	r17
    1d72:	0f 91       	pop	r16
    1d74:	ff 90       	pop	r15
    1d76:	ef 90       	pop	r14
    1d78:	df 90       	pop	r13
    1d7a:	cf 90       	pop	r12
    1d7c:	bf 90       	pop	r11
    1d7e:	af 90       	pop	r10
    1d80:	9f 90       	pop	r9
    1d82:	8f 90       	pop	r8
    1d84:	7f 90       	pop	r7
    1d86:	6f 90       	pop	r6
    1d88:	5f 90       	pop	r5
    1d8a:	4f 90       	pop	r4
    1d8c:	08 95       	ret

00001d8e <eci2ecef>:

void eci2ecef(vector v_eci, vector v_ecef)//interchange arguments-error1
{
    1d8e:	4f 92       	push	r4
    1d90:	5f 92       	push	r5
    1d92:	6f 92       	push	r6
    1d94:	7f 92       	push	r7
    1d96:	af 92       	push	r10
    1d98:	bf 92       	push	r11
    1d9a:	cf 92       	push	r12
    1d9c:	df 92       	push	r13
    1d9e:	ef 92       	push	r14
    1da0:	ff 92       	push	r15
    1da2:	0f 93       	push	r16
    1da4:	1f 93       	push	r17
    1da6:	cf 93       	push	r28
    1da8:	df 93       	push	r29
    1daa:	cd b7       	in	r28, 0x3d	; 61
    1dac:	de b7       	in	r29, 0x3e	; 62
    1dae:	a4 97       	sbiw	r28, 0x24	; 36
    1db0:	0f b6       	in	r0, 0x3f	; 63
    1db2:	f8 94       	cli
    1db4:	de bf       	out	0x3e, r29	; 62
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	cd bf       	out	0x3d, r28	; 61
    1dba:	8c 01       	movw	r16, r24
    1dbc:	5b 01       	movw	r10, r22
  double sidereal_time = STPERUT * seconds_since_equinox; // floatch
    1dbe:	20 91 a4 04 	lds	r18, 0x04A4
    1dc2:	30 91 a5 04 	lds	r19, 0x04A5
    1dc6:	40 91 a6 04 	lds	r20, 0x04A6
    1dca:	50 91 a7 04 	lds	r21, 0x04A7
    1dce:	60 91 a8 04 	lds	r22, 0x04A8
    1dd2:	70 91 a9 04 	lds	r23, 0x04A9
    1dd6:	80 91 aa 04 	lds	r24, 0x04AA
    1dda:	90 91 ab 04 	lds	r25, 0x04AB
    1dde:	0e 94 d5 33 	call	0x67aa	; 0x67aa <__floatundisf>
    1de2:	27 eb       	ldi	r18, 0xB7	; 183
    1de4:	39 e5       	ldi	r19, 0x59	; 89
    1de6:	40 e8       	ldi	r20, 0x80	; 128
    1de8:	5f e3       	ldi	r21, 0x3F	; 63
    1dea:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  double phi = W_EARTH_ROT * sidereal_time;// floatch
    1dee:	2e eb       	ldi	r18, 0xBE	; 190
    1df0:	37 ef       	ldi	r19, 0xF7	; 247
    1df2:	48 e9       	ldi	r20, 0x98	; 152
    1df4:	58 e3       	ldi	r21, 0x38	; 56
    1df6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    1dfa:	2b 01       	movw	r4, r22
    1dfc:	3c 01       	movw	r6, r24
  
  matrix m_rot = { { cos(phi), -sin(phi), 0 },
    1dfe:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    1e02:	6b 01       	movw	r12, r22
    1e04:	7c 01       	movw	r14, r24
    1e06:	69 83       	std	Y+1, r22	; 0x01
    1e08:	7a 83       	std	Y+2, r23	; 0x02
    1e0a:	8b 83       	std	Y+3, r24	; 0x03
    1e0c:	9c 83       	std	Y+4, r25	; 0x04
    1e0e:	c3 01       	movw	r24, r6
    1e10:	b2 01       	movw	r22, r4
    1e12:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    1e16:	2b 01       	movw	r4, r22
    1e18:	3c 01       	movw	r6, r24
    1e1a:	77 fa       	bst	r7, 7
    1e1c:	70 94       	com	r7
    1e1e:	77 f8       	bld	r7, 7
    1e20:	70 94       	com	r7
    1e22:	4d 82       	std	Y+5, r4	; 0x05
    1e24:	5e 82       	std	Y+6, r5	; 0x06
    1e26:	6f 82       	std	Y+7, r6	; 0x07
    1e28:	78 86       	std	Y+8, r7	; 0x08
    1e2a:	19 86       	std	Y+9, r1	; 0x09
    1e2c:	1a 86       	std	Y+10, r1	; 0x0a
    1e2e:	1b 86       	std	Y+11, r1	; 0x0b
    1e30:	1c 86       	std	Y+12, r1	; 0x0c
    1e32:	6d 87       	std	Y+13, r22	; 0x0d
    1e34:	7e 87       	std	Y+14, r23	; 0x0e
    1e36:	8f 87       	std	Y+15, r24	; 0x0f
    1e38:	98 8b       	std	Y+16, r25	; 0x10
    1e3a:	c9 8a       	std	Y+17, r12	; 0x11
    1e3c:	da 8a       	std	Y+18, r13	; 0x12
    1e3e:	eb 8a       	std	Y+19, r14	; 0x13
    1e40:	fc 8a       	std	Y+20, r15	; 0x14
    1e42:	1d 8a       	std	Y+21, r1	; 0x15
    1e44:	1e 8a       	std	Y+22, r1	; 0x16
    1e46:	1f 8a       	std	Y+23, r1	; 0x17
    1e48:	18 8e       	std	Y+24, r1	; 0x18
    1e4a:	19 8e       	std	Y+25, r1	; 0x19
    1e4c:	1a 8e       	std	Y+26, r1	; 0x1a
    1e4e:	1b 8e       	std	Y+27, r1	; 0x1b
    1e50:	1c 8e       	std	Y+28, r1	; 0x1c
    1e52:	1d 8e       	std	Y+29, r1	; 0x1d
    1e54:	1e 8e       	std	Y+30, r1	; 0x1e
    1e56:	1f 8e       	std	Y+31, r1	; 0x1f
    1e58:	18 a2       	std	Y+32, r1	; 0x20
    1e5a:	80 e0       	ldi	r24, 0x00	; 0
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	a0 e8       	ldi	r26, 0x80	; 128
    1e60:	bf e3       	ldi	r27, 0x3F	; 63
    1e62:	89 a3       	std	Y+33, r24	; 0x21
    1e64:	9a a3       	std	Y+34, r25	; 0x22
    1e66:	ab a3       	std	Y+35, r26	; 0x23
    1e68:	bc a3       	std	Y+36, r27	; 0x24
                   { sin(phi), cos(phi), 0 },
                   { 0, 0, 1 } };
               
  vector_into_matrix(v_eci, m_rot, v_ecef);
    1e6a:	a5 01       	movw	r20, r10
    1e6c:	be 01       	movw	r22, r28
    1e6e:	6f 5f       	subi	r22, 0xFF	; 255
    1e70:	7f 4f       	sbci	r23, 0xFF	; 255
    1e72:	c8 01       	movw	r24, r16
    1e74:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <vector_into_matrix>
}
    1e78:	a4 96       	adiw	r28, 0x24	; 36
    1e7a:	0f b6       	in	r0, 0x3f	; 63
    1e7c:	f8 94       	cli
    1e7e:	de bf       	out	0x3e, r29	; 62
    1e80:	0f be       	out	0x3f, r0	; 63
    1e82:	cd bf       	out	0x3d, r28	; 61
    1e84:	df 91       	pop	r29
    1e86:	cf 91       	pop	r28
    1e88:	1f 91       	pop	r17
    1e8a:	0f 91       	pop	r16
    1e8c:	ff 90       	pop	r15
    1e8e:	ef 90       	pop	r14
    1e90:	df 90       	pop	r13
    1e92:	cf 90       	pop	r12
    1e94:	bf 90       	pop	r11
    1e96:	af 90       	pop	r10
    1e98:	7f 90       	pop	r7
    1e9a:	6f 90       	pop	r6
    1e9c:	5f 90       	pop	r5
    1e9e:	4f 90       	pop	r4
    1ea0:	08 95       	ret

00001ea2 <eci2orbit>:


void eci2orbit(vector v_r, vector v_v, vector v_eci, vector v_orbit)
{
    1ea2:	cf 92       	push	r12
    1ea4:	df 92       	push	r13
    1ea6:	ef 92       	push	r14
    1ea8:	ff 92       	push	r15
    1eaa:	0f 93       	push	r16
    1eac:	1f 93       	push	r17
    1eae:	cf 93       	push	r28
    1eb0:	df 93       	push	r29
    1eb2:	cd b7       	in	r28, 0x3d	; 61
    1eb4:	de b7       	in	r29, 0x3e	; 62
    1eb6:	c8 54       	subi	r28, 0x48	; 72
    1eb8:	d1 09       	sbc	r29, r1
    1eba:	0f b6       	in	r0, 0x3f	; 63
    1ebc:	f8 94       	cli
    1ebe:	de bf       	out	0x3e, r29	; 62
    1ec0:	0f be       	out	0x3f, r0	; 63
    1ec2:	cd bf       	out	0x3d, r28	; 61
    1ec4:	8c 01       	movw	r16, r24
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	6a 01       	movw	r12, r20
    1eca:	79 01       	movw	r14, r18
  vector v_o_x, v_o_y, v_o_z;
  uint8_t i;
  
  vector_cross_product(v_v, v_r, v_o_y);
    1ecc:	ae 01       	movw	r20, r28
    1ece:	43 5f       	subi	r20, 0xF3	; 243
    1ed0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed2:	b8 01       	movw	r22, r16
    1ed4:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <vector_cross_product>
  convert_unit_vector(v_o_y);
    1ed8:	ce 01       	movw	r24, r28
    1eda:	0d 96       	adiw	r24, 0x0d	; 13
    1edc:	0e 94 f0 1f 	call	0x3fe0	; 0x3fe0 <convert_unit_vector>
  
  for(i = 0; i < 3; i++)
    v_o_z[i] = -1 * v_r[i];
    1ee0:	f8 01       	movw	r30, r16
    1ee2:	80 81       	ld	r24, Z
    1ee4:	91 81       	ldd	r25, Z+1	; 0x01
    1ee6:	a2 81       	ldd	r26, Z+2	; 0x02
    1ee8:	b3 81       	ldd	r27, Z+3	; 0x03
    1eea:	b0 58       	subi	r27, 0x80	; 128
    1eec:	89 8f       	std	Y+25, r24	; 0x19
    1eee:	9a 8f       	std	Y+26, r25	; 0x1a
    1ef0:	ab 8f       	std	Y+27, r26	; 0x1b
    1ef2:	bc 8f       	std	Y+28, r27	; 0x1c
    1ef4:	84 81       	ldd	r24, Z+4	; 0x04
    1ef6:	95 81       	ldd	r25, Z+5	; 0x05
    1ef8:	a6 81       	ldd	r26, Z+6	; 0x06
    1efa:	b7 81       	ldd	r27, Z+7	; 0x07
    1efc:	b0 58       	subi	r27, 0x80	; 128
    1efe:	8d 8f       	std	Y+29, r24	; 0x1d
    1f00:	9e 8f       	std	Y+30, r25	; 0x1e
    1f02:	af 8f       	std	Y+31, r26	; 0x1f
    1f04:	b8 a3       	std	Y+32, r27	; 0x20
    1f06:	00 85       	ldd	r16, Z+8	; 0x08
    1f08:	11 85       	ldd	r17, Z+9	; 0x09
    1f0a:	22 85       	ldd	r18, Z+10	; 0x0a
    1f0c:	33 85       	ldd	r19, Z+11	; 0x0b
    1f0e:	30 58       	subi	r19, 0x80	; 128
    1f10:	09 a3       	std	Y+33, r16	; 0x21
    1f12:	1a a3       	std	Y+34, r17	; 0x22
    1f14:	2b a3       	std	Y+35, r18	; 0x23
    1f16:	3c a3       	std	Y+36, r19	; 0x24
  convert_unit_vector(v_o_z);
    1f18:	ce 01       	movw	r24, r28
    1f1a:	49 96       	adiw	r24, 0x19	; 25
    1f1c:	0e 94 f0 1f 	call	0x3fe0	; 0x3fe0 <convert_unit_vector>
  
  vector_cross_product(v_o_y, v_o_z, v_o_x);
    1f20:	ae 01       	movw	r20, r28
    1f22:	4f 5f       	subi	r20, 0xFF	; 255
    1f24:	5f 4f       	sbci	r21, 0xFF	; 255
    1f26:	be 01       	movw	r22, r28
    1f28:	67 5e       	subi	r22, 0xE7	; 231
    1f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2c:	ce 01       	movw	r24, r28
    1f2e:	0d 96       	adiw	r24, 0x0d	; 13
    1f30:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <vector_cross_product>
  convert_unit_vector(v_o_x);
    1f34:	ce 01       	movw	r24, r28
    1f36:	01 96       	adiw	r24, 0x01	; 1
    1f38:	0e 94 f0 1f 	call	0x3fe0	; 0x3fe0 <convert_unit_vector>
  
  matrix m_o = { { v_o_x[0], v_o_y[0], v_o_z[0] },
    1f3c:	89 81       	ldd	r24, Y+1	; 0x01
    1f3e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f40:	ab 81       	ldd	r26, Y+3	; 0x03
    1f42:	bc 81       	ldd	r27, Y+4	; 0x04
    1f44:	8d a3       	std	Y+37, r24	; 0x25
    1f46:	9e a3       	std	Y+38, r25	; 0x26
    1f48:	af a3       	std	Y+39, r26	; 0x27
    1f4a:	b8 a7       	std	Y+40, r27	; 0x28
    1f4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f50:	af 85       	ldd	r26, Y+15	; 0x0f
    1f52:	b8 89       	ldd	r27, Y+16	; 0x10
    1f54:	89 a7       	std	Y+41, r24	; 0x29
    1f56:	9a a7       	std	Y+42, r25	; 0x2a
    1f58:	ab a7       	std	Y+43, r26	; 0x2b
    1f5a:	bc a7       	std	Y+44, r27	; 0x2c
    1f5c:	89 8d       	ldd	r24, Y+25	; 0x19
    1f5e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f60:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1f62:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1f64:	8d a7       	std	Y+45, r24	; 0x2d
    1f66:	9e a7       	std	Y+46, r25	; 0x2e
    1f68:	af a7       	std	Y+47, r26	; 0x2f
    1f6a:	b8 ab       	std	Y+48, r27	; 0x30
    1f6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f6e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f70:	af 81       	ldd	r26, Y+7	; 0x07
    1f72:	b8 85       	ldd	r27, Y+8	; 0x08
    1f74:	89 ab       	std	Y+49, r24	; 0x31
    1f76:	9a ab       	std	Y+50, r25	; 0x32
    1f78:	ab ab       	std	Y+51, r26	; 0x33
    1f7a:	bc ab       	std	Y+52, r27	; 0x34
    1f7c:	89 89       	ldd	r24, Y+17	; 0x11
    1f7e:	9a 89       	ldd	r25, Y+18	; 0x12
    1f80:	ab 89       	ldd	r26, Y+19	; 0x13
    1f82:	bc 89       	ldd	r27, Y+20	; 0x14
    1f84:	8d ab       	std	Y+53, r24	; 0x35
    1f86:	9e ab       	std	Y+54, r25	; 0x36
    1f88:	af ab       	std	Y+55, r26	; 0x37
    1f8a:	b8 af       	std	Y+56, r27	; 0x38
    1f8c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f8e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f90:	af 8d       	ldd	r26, Y+31	; 0x1f
    1f92:	b8 a1       	ldd	r27, Y+32	; 0x20
    1f94:	89 af       	std	Y+57, r24	; 0x39
    1f96:	9a af       	std	Y+58, r25	; 0x3a
    1f98:	ab af       	std	Y+59, r26	; 0x3b
    1f9a:	bc af       	std	Y+60, r27	; 0x3c
    1f9c:	89 85       	ldd	r24, Y+9	; 0x09
    1f9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fa0:	ab 85       	ldd	r26, Y+11	; 0x0b
    1fa2:	bc 85       	ldd	r27, Y+12	; 0x0c
    1fa4:	21 96       	adiw	r28, 0x01	; 1
    1fa6:	8c af       	std	Y+60, r24	; 0x3c
    1fa8:	9d af       	std	Y+61, r25	; 0x3d
    1faa:	ae af       	std	Y+62, r26	; 0x3e
    1fac:	bf af       	std	Y+63, r27	; 0x3f
    1fae:	21 97       	sbiw	r28, 0x01	; 1
    1fb0:	8d 89       	ldd	r24, Y+21	; 0x15
    1fb2:	9e 89       	ldd	r25, Y+22	; 0x16
    1fb4:	af 89       	ldd	r26, Y+23	; 0x17
    1fb6:	b8 8d       	ldd	r27, Y+24	; 0x18
    1fb8:	25 96       	adiw	r28, 0x05	; 5
    1fba:	8c af       	std	Y+60, r24	; 0x3c
    1fbc:	9d af       	std	Y+61, r25	; 0x3d
    1fbe:	ae af       	std	Y+62, r26	; 0x3e
    1fc0:	bf af       	std	Y+63, r27	; 0x3f
    1fc2:	25 97       	sbiw	r28, 0x05	; 5
    1fc4:	89 a1       	ldd	r24, Y+33	; 0x21
    1fc6:	9a a1       	ldd	r25, Y+34	; 0x22
    1fc8:	ab a1       	ldd	r26, Y+35	; 0x23
    1fca:	bc a1       	ldd	r27, Y+36	; 0x24
    1fcc:	29 96       	adiw	r28, 0x09	; 9
    1fce:	8c af       	std	Y+60, r24	; 0x3c
    1fd0:	9d af       	std	Y+61, r25	; 0x3d
    1fd2:	ae af       	std	Y+62, r26	; 0x3e
    1fd4:	bf af       	std	Y+63, r27	; 0x3f
    1fd6:	29 97       	sbiw	r28, 0x09	; 9
                 { v_o_x[1], v_o_y[1], v_o_z[1] },
                 { v_o_x[2], v_o_y[2], v_o_z[2] } };
                 
  vector_into_matrix(v_eci, m_o, v_orbit);
    1fd8:	a7 01       	movw	r20, r14
    1fda:	be 01       	movw	r22, r28
    1fdc:	6b 5d       	subi	r22, 0xDB	; 219
    1fde:	7f 4f       	sbci	r23, 0xFF	; 255
    1fe0:	c6 01       	movw	r24, r12
    1fe2:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <vector_into_matrix>
}
    1fe6:	c8 5b       	subi	r28, 0xB8	; 184
    1fe8:	df 4f       	sbci	r29, 0xFF	; 255
    1fea:	0f b6       	in	r0, 0x3f	; 63
    1fec:	f8 94       	cli
    1fee:	de bf       	out	0x3e, r29	; 62
    1ff0:	0f be       	out	0x3f, r0	; 63
    1ff2:	cd bf       	out	0x3d, r28	; 61
    1ff4:	df 91       	pop	r29
    1ff6:	cf 91       	pop	r28
    1ff8:	1f 91       	pop	r17
    1ffa:	0f 91       	pop	r16
    1ffc:	ff 90       	pop	r15
    1ffe:	ef 90       	pop	r14
    2000:	df 90       	pop	r13
    2002:	cf 90       	pop	r12
    2004:	08 95       	ret

00002006 <ecef2lla>:

void ecef2lla(vector v_ecef, vector v_lla)
{
    2006:	2f 92       	push	r2
    2008:	3f 92       	push	r3
    200a:	4f 92       	push	r4
    200c:	5f 92       	push	r5
    200e:	6f 92       	push	r6
    2010:	7f 92       	push	r7
    2012:	8f 92       	push	r8
    2014:	9f 92       	push	r9
    2016:	af 92       	push	r10
    2018:	bf 92       	push	r11
    201a:	cf 92       	push	r12
    201c:	df 92       	push	r13
    201e:	ef 92       	push	r14
    2020:	ff 92       	push	r15
    2022:	0f 93       	push	r16
    2024:	1f 93       	push	r17
    2026:	cf 93       	push	r28
    2028:	df 93       	push	r29
    202a:	cd b7       	in	r28, 0x3d	; 61
    202c:	de b7       	in	r29, 0x3e	; 62
    202e:	2c 97       	sbiw	r28, 0x0c	; 12
    2030:	0f b6       	in	r0, 0x3f	; 63
    2032:	f8 94       	cli
    2034:	de bf       	out	0x3e, r29	; 62
    2036:	0f be       	out	0x3f, r0	; 63
    2038:	cd bf       	out	0x3d, r28	; 61
    203a:	fc 01       	movw	r30, r24
    203c:	1b 01       	movw	r2, r22
  double x = v_ecef[0], y = v_ecef[1], z = v_ecef[2];// floatch
    203e:	80 80       	ld	r8, Z
    2040:	91 80       	ldd	r9, Z+1	; 0x01
    2042:	a2 80       	ldd	r10, Z+2	; 0x02
    2044:	b3 80       	ldd	r11, Z+3	; 0x03
    2046:	c4 80       	ldd	r12, Z+4	; 0x04
    2048:	d5 80       	ldd	r13, Z+5	; 0x05
    204a:	e6 80       	ldd	r14, Z+6	; 0x06
    204c:	f7 80       	ldd	r15, Z+7	; 0x07
    204e:	40 84       	ldd	r4, Z+8	; 0x08
    2050:	51 84       	ldd	r5, Z+9	; 0x09
    2052:	62 84       	ldd	r6, Z+10	; 0x0a
    2054:	73 84       	ldd	r7, Z+11	; 0x0b
  double lambda, phi, h, rho, beta, n, sinphi;// floatch
  uint8_t i;
  
  lambda = atan2(y, x);
    2056:	a5 01       	movw	r20, r10
    2058:	94 01       	movw	r18, r8
    205a:	c7 01       	movw	r24, r14
    205c:	b6 01       	movw	r22, r12
    205e:	0e 94 a5 32 	call	0x654a	; 0x654a <atan2>
    2062:	69 87       	std	Y+9, r22	; 0x09
    2064:	7a 87       	std	Y+10, r23	; 0x0a
    2066:	8b 87       	std	Y+11, r24	; 0x0b
    2068:	9c 87       	std	Y+12, r25	; 0x0c
  rho = sqrt(x * x + y * y);
    206a:	a5 01       	movw	r20, r10
    206c:	94 01       	movw	r18, r8
    206e:	c5 01       	movw	r24, r10
    2070:	b4 01       	movw	r22, r8
    2072:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2076:	69 83       	std	Y+1, r22	; 0x01
    2078:	7a 83       	std	Y+2, r23	; 0x02
    207a:	8b 83       	std	Y+3, r24	; 0x03
    207c:	9c 83       	std	Y+4, r25	; 0x04
    207e:	a5 01       	movw	r20, r10
    2080:	94 01       	movw	r18, r8
    2082:	c5 01       	movw	r24, r10
    2084:	b4 01       	movw	r22, r8
    2086:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    208a:	4b 01       	movw	r8, r22
    208c:	5c 01       	movw	r10, r24
    208e:	a7 01       	movw	r20, r14
    2090:	96 01       	movw	r18, r12
    2092:	c7 01       	movw	r24, r14
    2094:	b6 01       	movw	r22, r12
    2096:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    209a:	9b 01       	movw	r18, r22
    209c:	ac 01       	movw	r20, r24
    209e:	c5 01       	movw	r24, r10
    20a0:	b4 01       	movw	r22, r8
    20a2:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    20a6:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    20aa:	69 83       	std	Y+1, r22	; 0x01
    20ac:	7a 83       	std	Y+2, r23	; 0x02
    20ae:	8b 83       	std	Y+3, r24	; 0x03
    20b0:	9c 83       	std	Y+4, r25	; 0x04
  
  beta = atan2(z, (1 - F) * rho);
    20b2:	25 e4       	ldi	r18, 0x45	; 69
    20b4:	34 e2       	ldi	r19, 0x24	; 36
    20b6:	4f e7       	ldi	r20, 0x7F	; 127
    20b8:	5f e3       	ldi	r21, 0x3F	; 63
    20ba:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    20be:	9b 01       	movw	r18, r22
    20c0:	ac 01       	movw	r20, r24
    20c2:	c3 01       	movw	r24, r6
    20c4:	b2 01       	movw	r22, r4
    20c6:	0e 94 a5 32 	call	0x654a	; 0x654a <atan2>
    20ca:	4b 01       	movw	r8, r22
    20cc:	5c 01       	movw	r10, r24
    20ce:	15 e0       	ldi	r17, 0x05	; 5
  for(i = 0; i < 5; i++)
  {
    phi = atan2(z + B * EP2 * pow(sin(beta), 3), rho - A * E2 * pow(cos(beta), 3));
    20d0:	c5 01       	movw	r24, r10
    20d2:	b4 01       	movw	r22, r8
    20d4:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    20d8:	20 e0       	ldi	r18, 0x00	; 0
    20da:	30 e0       	ldi	r19, 0x00	; 0
    20dc:	40 e4       	ldi	r20, 0x40	; 64
    20de:	50 e4       	ldi	r21, 0x40	; 64
    20e0:	0e 94 80 35 	call	0x6b00	; 0x6b00 <pow>
    20e4:	6b 01       	movw	r12, r22
    20e6:	7c 01       	movw	r14, r24
    20e8:	c5 01       	movw	r24, r10
    20ea:	b4 01       	movw	r22, r8
    20ec:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    20f0:	20 e0       	ldi	r18, 0x00	; 0
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	40 e4       	ldi	r20, 0x40	; 64
    20f6:	50 e4       	ldi	r21, 0x40	; 64
    20f8:	0e 94 80 35 	call	0x6b00	; 0x6b00 <pow>
    20fc:	4b 01       	movw	r8, r22
    20fe:	5c 01       	movw	r10, r24
    2100:	2e ea       	ldi	r18, 0xAE	; 174
    2102:	39 ec       	ldi	r19, 0xC9	; 201
    2104:	46 e2       	ldi	r20, 0x26	; 38
    2106:	57 e4       	ldi	r21, 0x47	; 71
    2108:	c7 01       	movw	r24, r14
    210a:	b6 01       	movw	r22, r12
    210c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2110:	9b 01       	movw	r18, r22
    2112:	ac 01       	movw	r20, r24
    2114:	69 81       	ldd	r22, Y+1	; 0x01
    2116:	7a 81       	ldd	r23, Y+2	; 0x02
    2118:	8b 81       	ldd	r24, Y+3	; 0x03
    211a:	9c 81       	ldd	r25, Y+4	; 0x04
    211c:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2120:	6b 01       	movw	r12, r22
    2122:	7c 01       	movw	r14, r24
    2124:	22 e5       	ldi	r18, 0x52	; 82
    2126:	39 e5       	ldi	r19, 0x59	; 89
    2128:	47 e2       	ldi	r20, 0x27	; 39
    212a:	57 e4       	ldi	r21, 0x47	; 71
    212c:	c5 01       	movw	r24, r10
    212e:	b4 01       	movw	r22, r8
    2130:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2134:	a3 01       	movw	r20, r6
    2136:	92 01       	movw	r18, r4
    2138:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    213c:	a7 01       	movw	r20, r14
    213e:	96 01       	movw	r18, r12
    2140:	0e 94 a5 32 	call	0x654a	; 0x654a <atan2>
    2144:	6b 01       	movw	r12, r22
    2146:	7c 01       	movw	r14, r24
    beta = atan2((1 - F) * sin(phi), cos(phi));
    2148:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    214c:	4b 01       	movw	r8, r22
    214e:	5c 01       	movw	r10, r24
    2150:	c7 01       	movw	r24, r14
    2152:	b6 01       	movw	r22, r12
    2154:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    2158:	25 e4       	ldi	r18, 0x45	; 69
    215a:	34 e2       	ldi	r19, 0x24	; 36
    215c:	4f e7       	ldi	r20, 0x7F	; 127
    215e:	5f e3       	ldi	r21, 0x3F	; 63
    2160:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2164:	a5 01       	movw	r20, r10
    2166:	94 01       	movw	r18, r8
    2168:	0e 94 a5 32 	call	0x654a	; 0x654a <atan2>
    216c:	4b 01       	movw	r8, r22
    216e:	5c 01       	movw	r10, r24
    2170:	11 50       	subi	r17, 0x01	; 1
  
  lambda = atan2(y, x);
  rho = sqrt(x * x + y * y);
  
  beta = atan2(z, (1 - F) * rho);
  for(i = 0; i < 5; i++)
    2172:	09 f0       	breq	.+2      	; 0x2176 <ecef2lla+0x170>
    2174:	ad cf       	rjmp	.-166    	; 0x20d0 <ecef2lla+0xca>
  {
    phi = atan2(z + B * EP2 * pow(sin(beta), 3), rho - A * E2 * pow(cos(beta), 3));
    beta = atan2((1 - F) * sin(phi), cos(phi));
  }
  sinphi = sin(phi);
    2176:	c7 01       	movw	r24, r14
    2178:	b6 01       	movw	r22, r12
    217a:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    217e:	4b 01       	movw	r8, r22
    2180:	5c 01       	movw	r10, r24
  n = A / sqrt(1 - E2 * sinphi *sinphi);
    2182:	2a e8       	ldi	r18, 0x8A	; 138
    2184:	3c e5       	ldi	r19, 0x5C	; 92
    2186:	4b ed       	ldi	r20, 0xDB	; 219
    2188:	5b e3       	ldi	r21, 0x3B	; 59
    218a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    218e:	6d 83       	std	Y+5, r22	; 0x05
    2190:	7e 83       	std	Y+6, r23	; 0x06
    2192:	8f 83       	std	Y+7, r24	; 0x07
    2194:	98 87       	std	Y+8, r25	; 0x08
    2196:	a5 01       	movw	r20, r10
    2198:	94 01       	movw	r18, r8
    219a:	6d 81       	ldd	r22, Y+5	; 0x05
    219c:	7e 81       	ldd	r23, Y+6	; 0x06
    219e:	8f 81       	ldd	r24, Y+7	; 0x07
    21a0:	98 85       	ldd	r25, Y+8	; 0x08
    21a2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    21a6:	9b 01       	movw	r18, r22
    21a8:	ac 01       	movw	r20, r24
    21aa:	60 e0       	ldi	r22, 0x00	; 0
    21ac:	70 e0       	ldi	r23, 0x00	; 0
    21ae:	80 e8       	ldi	r24, 0x80	; 128
    21b0:	9f e3       	ldi	r25, 0x3F	; 63
    21b2:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    21b6:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    21ba:	9b 01       	movw	r18, r22
    21bc:	ac 01       	movw	r20, r24
    21be:	62 e3       	ldi	r22, 0x32	; 50
    21c0:	75 ea       	ldi	r23, 0xA5	; 165
    21c2:	82 ec       	ldi	r24, 0xC2	; 194
    21c4:	9a e4       	ldi	r25, 0x4A	; 74
    21c6:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    21ca:	6d 83       	std	Y+5, r22	; 0x05
    21cc:	7e 83       	std	Y+6, r23	; 0x06
    21ce:	8f 83       	std	Y+7, r24	; 0x07
    21d0:	98 87       	std	Y+8, r25	; 0x08
  h = rho * cos(phi) + (z + E2 * n * sinphi) * sinphi - n;// bus yhi line nhi chmki
    21d2:	c7 01       	movw	r24, r14
    21d4:	b6 01       	movw	r22, r12
    21d6:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
  
  v_lla[0] = phi;
    21da:	f1 01       	movw	r30, r2
    21dc:	c0 82       	st	Z, r12
    21de:	d1 82       	std	Z+1, r13	; 0x01
    21e0:	e2 82       	std	Z+2, r14	; 0x02
    21e2:	f3 82       	std	Z+3, r15	; 0x03
  v_lla[1] = lambda;
    21e4:	29 85       	ldd	r18, Y+9	; 0x09
    21e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    21e8:	4b 85       	ldd	r20, Y+11	; 0x0b
    21ea:	5c 85       	ldd	r21, Y+12	; 0x0c
    21ec:	24 83       	std	Z+4, r18	; 0x04
    21ee:	35 83       	std	Z+5, r19	; 0x05
    21f0:	46 83       	std	Z+6, r20	; 0x06
    21f2:	57 83       	std	Z+7, r21	; 0x07
    phi = atan2(z + B * EP2 * pow(sin(beta), 3), rho - A * E2 * pow(cos(beta), 3));
    beta = atan2((1 - F) * sin(phi), cos(phi));
  }
  sinphi = sin(phi);
  n = A / sqrt(1 - E2 * sinphi *sinphi);
  h = rho * cos(phi) + (z + E2 * n * sinphi) * sinphi - n;// bus yhi line nhi chmki
    21f4:	29 81       	ldd	r18, Y+1	; 0x01
    21f6:	3a 81       	ldd	r19, Y+2	; 0x02
    21f8:	4b 81       	ldd	r20, Y+3	; 0x03
    21fa:	5c 81       	ldd	r21, Y+4	; 0x04
    21fc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2200:	69 83       	std	Y+1, r22	; 0x01
    2202:	7a 83       	std	Y+2, r23	; 0x02
    2204:	8b 83       	std	Y+3, r24	; 0x03
    2206:	9c 83       	std	Y+4, r25	; 0x04
    2208:	2a e8       	ldi	r18, 0x8A	; 138
    220a:	3c e5       	ldi	r19, 0x5C	; 92
    220c:	4b ed       	ldi	r20, 0xDB	; 219
    220e:	5b e3       	ldi	r21, 0x3B	; 59
    2210:	6d 81       	ldd	r22, Y+5	; 0x05
    2212:	7e 81       	ldd	r23, Y+6	; 0x06
    2214:	8f 81       	ldd	r24, Y+7	; 0x07
    2216:	98 85       	ldd	r25, Y+8	; 0x08
    2218:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    221c:	a5 01       	movw	r20, r10
    221e:	94 01       	movw	r18, r8
    2220:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2224:	a3 01       	movw	r20, r6
    2226:	92 01       	movw	r18, r4
    2228:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    222c:	a5 01       	movw	r20, r10
    222e:	94 01       	movw	r18, r8
    2230:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2234:	9b 01       	movw	r18, r22
    2236:	ac 01       	movw	r20, r24
    2238:	69 81       	ldd	r22, Y+1	; 0x01
    223a:	7a 81       	ldd	r23, Y+2	; 0x02
    223c:	8b 81       	ldd	r24, Y+3	; 0x03
    223e:	9c 81       	ldd	r25, Y+4	; 0x04
    2240:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2244:	2d 81       	ldd	r18, Y+5	; 0x05
    2246:	3e 81       	ldd	r19, Y+6	; 0x06
    2248:	4f 81       	ldd	r20, Y+7	; 0x07
    224a:	58 85       	ldd	r21, Y+8	; 0x08
    224c:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
  
  v_lla[0] = phi;
  v_lla[1] = lambda;
  v_lla[2] = h;
    2250:	f1 01       	movw	r30, r2
    2252:	60 87       	std	Z+8, r22	; 0x08
    2254:	71 87       	std	Z+9, r23	; 0x09
    2256:	82 87       	std	Z+10, r24	; 0x0a
    2258:	93 87       	std	Z+11, r25	; 0x0b
 Current_state.gps.lat=(v_lla[0]*180/3.141592)*100;
    225a:	20 e0       	ldi	r18, 0x00	; 0
    225c:	30 e0       	ldi	r19, 0x00	; 0
    225e:	44 e3       	ldi	r20, 0x34	; 52
    2260:	53 e4       	ldi	r21, 0x43	; 67
    2262:	c7 01       	movw	r24, r14
    2264:	b6 01       	movw	r22, r12
    2266:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    226a:	28 ed       	ldi	r18, 0xD8	; 216
    226c:	3f e0       	ldi	r19, 0x0F	; 15
    226e:	49 e4       	ldi	r20, 0x49	; 73
    2270:	50 e4       	ldi	r21, 0x40	; 64
    2272:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	30 e0       	ldi	r19, 0x00	; 0
    227a:	48 ec       	ldi	r20, 0xC8	; 200
    227c:	52 e4       	ldi	r21, 0x42	; 66
    227e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2282:	0e 94 67 33 	call	0x66ce	; 0x66ce <__fixsfsi>
    2286:	0f eb       	ldi	r16, 0xBF	; 191
    2288:	14 e0       	ldi	r17, 0x04	; 4
    228a:	f8 01       	movw	r30, r16
    228c:	60 8f       	std	Z+24, r22	; 0x18
    228e:	71 8f       	std	Z+25, r23	; 0x19
    2290:	82 8f       	std	Z+26, r24	; 0x1a
    2292:	93 8f       	std	Z+27, r25	; 0x1b
 Current_state.gps.lon=(v_lla[1]*180/3.141592)*100;
    2294:	20 e0       	ldi	r18, 0x00	; 0
    2296:	30 e0       	ldi	r19, 0x00	; 0
    2298:	44 e3       	ldi	r20, 0x34	; 52
    229a:	53 e4       	ldi	r21, 0x43	; 67
    229c:	f1 01       	movw	r30, r2
    229e:	64 81       	ldd	r22, Z+4	; 0x04
    22a0:	75 81       	ldd	r23, Z+5	; 0x05
    22a2:	86 81       	ldd	r24, Z+6	; 0x06
    22a4:	97 81       	ldd	r25, Z+7	; 0x07
    22a6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    22aa:	28 ed       	ldi	r18, 0xD8	; 216
    22ac:	3f e0       	ldi	r19, 0x0F	; 15
    22ae:	49 e4       	ldi	r20, 0x49	; 73
    22b0:	50 e4       	ldi	r21, 0x40	; 64
    22b2:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    22b6:	20 e0       	ldi	r18, 0x00	; 0
    22b8:	30 e0       	ldi	r19, 0x00	; 0
    22ba:	48 ec       	ldi	r20, 0xC8	; 200
    22bc:	52 e4       	ldi	r21, 0x42	; 66
    22be:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    22c2:	0e 94 67 33 	call	0x66ce	; 0x66ce <__fixsfsi>
    22c6:	f8 01       	movw	r30, r16
    22c8:	64 8f       	std	Z+28, r22	; 0x1c
    22ca:	75 8f       	std	Z+29, r23	; 0x1d
    22cc:	86 8f       	std	Z+30, r24	; 0x1e
    22ce:	97 8f       	std	Z+31, r25	; 0x1f
  Current_state.gps.alt=v_lla[2];  
    22d0:	f1 01       	movw	r30, r2
    22d2:	60 85       	ldd	r22, Z+8	; 0x08
    22d4:	71 85       	ldd	r23, Z+9	; 0x09
    22d6:	82 85       	ldd	r24, Z+10	; 0x0a
    22d8:	93 85       	ldd	r25, Z+11	; 0x0b
    22da:	0e 94 67 33 	call	0x66ce	; 0x66ce <__fixsfsi>
    22de:	f8 01       	movw	r30, r16
    22e0:	60 a3       	std	Z+32, r22	; 0x20
    22e2:	71 a3       	std	Z+33, r23	; 0x21
    22e4:	82 a3       	std	Z+34, r24	; 0x22
    22e6:	93 a3       	std	Z+35, r25	; 0x23
	   //sen = ((int8_t)((lambda))/2);
	   transmit_UART0(sen);
	   transmit_UART0(sen1);
   }
   */
}
    22e8:	2c 96       	adiw	r28, 0x0c	; 12
    22ea:	0f b6       	in	r0, 0x3f	; 63
    22ec:	f8 94       	cli
    22ee:	de bf       	out	0x3e, r29	; 62
    22f0:	0f be       	out	0x3f, r0	; 63
    22f2:	cd bf       	out	0x3d, r28	; 61
    22f4:	df 91       	pop	r29
    22f6:	cf 91       	pop	r28
    22f8:	1f 91       	pop	r17
    22fa:	0f 91       	pop	r16
    22fc:	ff 90       	pop	r15
    22fe:	ef 90       	pop	r14
    2300:	df 90       	pop	r13
    2302:	cf 90       	pop	r12
    2304:	bf 90       	pop	r11
    2306:	af 90       	pop	r10
    2308:	9f 90       	pop	r9
    230a:	8f 90       	pop	r8
    230c:	7f 90       	pop	r7
    230e:	6f 90       	pop	r6
    2310:	5f 90       	pop	r5
    2312:	4f 90       	pop	r4
    2314:	3f 90       	pop	r3
    2316:	2f 90       	pop	r2
    2318:	08 95       	ret

0000231a <ned2ecef>:

void ned2ecef(vector v_ned, vector v_lla, vector v_ecef)
{
    231a:	2f 92       	push	r2
    231c:	3f 92       	push	r3
    231e:	4f 92       	push	r4
    2320:	5f 92       	push	r5
    2322:	6f 92       	push	r6
    2324:	7f 92       	push	r7
    2326:	8f 92       	push	r8
    2328:	9f 92       	push	r9
    232a:	af 92       	push	r10
    232c:	bf 92       	push	r11
    232e:	cf 92       	push	r12
    2330:	df 92       	push	r13
    2332:	ef 92       	push	r14
    2334:	ff 92       	push	r15
    2336:	0f 93       	push	r16
    2338:	1f 93       	push	r17
    233a:	cf 93       	push	r28
    233c:	df 93       	push	r29
    233e:	cd b7       	in	r28, 0x3d	; 61
    2340:	de b7       	in	r29, 0x3e	; 62
    2342:	ac 97       	sbiw	r28, 0x2c	; 44
    2344:	0f b6       	in	r0, 0x3f	; 63
    2346:	f8 94       	cli
    2348:	de bf       	out	0x3e, r29	; 62
    234a:	0f be       	out	0x3f, r0	; 63
    234c:	cd bf       	out	0x3d, r28	; 61
    234e:	1c 01       	movw	r2, r24
    2350:	7b 01       	movw	r14, r22
    2352:	8a 01       	movw	r16, r20
  double clat = cos(v_lla[0]), clon = cos(v_lla[1]);// floatch
    2354:	db 01       	movw	r26, r22
    2356:	4d 90       	ld	r4, X+
    2358:	5d 90       	ld	r5, X+
    235a:	6d 90       	ld	r6, X+
    235c:	7c 90       	ld	r7, X
    235e:	c3 01       	movw	r24, r6
    2360:	b2 01       	movw	r22, r4
    2362:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    2366:	4b 01       	movw	r8, r22
    2368:	5c 01       	movw	r10, r24
    236a:	f7 01       	movw	r30, r14
    236c:	c4 80       	ldd	r12, Z+4	; 0x04
    236e:	d5 80       	ldd	r13, Z+5	; 0x05
    2370:	e6 80       	ldd	r14, Z+6	; 0x06
    2372:	f7 80       	ldd	r15, Z+7	; 0x07
    2374:	c7 01       	movw	r24, r14
    2376:	b6 01       	movw	r22, r12
    2378:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    237c:	6d a3       	std	Y+37, r22	; 0x25
    237e:	7e a3       	std	Y+38, r23	; 0x26
    2380:	8f a3       	std	Y+39, r24	; 0x27
    2382:	98 a7       	std	Y+40, r25	; 0x28
  double slat = sin(v_lla[0]), slon = sin(v_lla[1]);// floatch
    2384:	c3 01       	movw	r24, r6
    2386:	b2 01       	movw	r22, r4
    2388:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    238c:	2b 01       	movw	r4, r22
    238e:	3c 01       	movw	r6, r24
    2390:	c7 01       	movw	r24, r14
    2392:	b6 01       	movw	r22, r12
    2394:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    2398:	6b 01       	movw	r12, r22
    239a:	7c 01       	movw	r14, r24
  vector v_north, v_east, v_down;
  
  v_north[0] = -1 * slat * clon;
    239c:	77 fa       	bst	r7, 7
    239e:	70 94       	com	r7
    23a0:	77 f8       	bld	r7, 7
    23a2:	70 94       	com	r7
  
  v_east[0] = -1 * slon;
  v_east[1] = clon;
  v_east[2] = 0;
  
  v_down[0] = -1 * clat * clon;
    23a4:	d5 01       	movw	r26, r10
    23a6:	c4 01       	movw	r24, r8
    23a8:	b0 58       	subi	r27, 0x80	; 128
    23aa:	89 a7       	std	Y+41, r24	; 0x29
    23ac:	9a a7       	std	Y+42, r25	; 0x2a
    23ae:	ab a7       	std	Y+43, r26	; 0x2b
    23b0:	bc a7       	std	Y+44, r27	; 0x2c
{
  double clat = cos(v_lla[0]), clon = cos(v_lla[1]);// floatch
  double slat = sin(v_lla[0]), slon = sin(v_lla[1]);// floatch
  vector v_north, v_east, v_down;
  
  v_north[0] = -1 * slat * clon;
    23b2:	2d a1       	ldd	r18, Y+37	; 0x25
    23b4:	3e a1       	ldd	r19, Y+38	; 0x26
    23b6:	4f a1       	ldd	r20, Y+39	; 0x27
    23b8:	58 a5       	ldd	r21, Y+40	; 0x28
    23ba:	c3 01       	movw	r24, r6
    23bc:	b2 01       	movw	r22, r4
    23be:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  
  v_down[0] = -1 * clat * clon;
  v_down[1] = -1 * clat * slon;
  v_down[2] = -1 * slat;
  
  matrix m_ecef = { { v_north[0], v_north[1], v_north[2] },
    23c2:	69 83       	std	Y+1, r22	; 0x01
    23c4:	7a 83       	std	Y+2, r23	; 0x02
    23c6:	8b 83       	std	Y+3, r24	; 0x03
    23c8:	9c 83       	std	Y+4, r25	; 0x04
  double clat = cos(v_lla[0]), clon = cos(v_lla[1]);// floatch
  double slat = sin(v_lla[0]), slon = sin(v_lla[1]);// floatch
  vector v_north, v_east, v_down;
  
  v_north[0] = -1 * slat * clon;
  v_north[1] = -1 * slat * slon;
    23ca:	a3 01       	movw	r20, r6
    23cc:	92 01       	movw	r18, r4
    23ce:	c7 01       	movw	r24, r14
    23d0:	b6 01       	movw	r22, r12
    23d2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  
  v_down[0] = -1 * clat * clon;
  v_down[1] = -1 * clat * slon;
  v_down[2] = -1 * slat;
  
  matrix m_ecef = { { v_north[0], v_north[1], v_north[2] },
    23d6:	6d 83       	std	Y+5, r22	; 0x05
    23d8:	7e 83       	std	Y+6, r23	; 0x06
    23da:	8f 83       	std	Y+7, r24	; 0x07
    23dc:	98 87       	std	Y+8, r25	; 0x08
    23de:	89 86       	std	Y+9, r8	; 0x09
    23e0:	9a 86       	std	Y+10, r9	; 0x0a
    23e2:	ab 86       	std	Y+11, r10	; 0x0b
    23e4:	bc 86       	std	Y+12, r11	; 0x0c
  
  v_north[0] = -1 * slat * clon;
  v_north[1] = -1 * slat * slon;
  v_north[2] = clat;
  
  v_east[0] = -1 * slon;
    23e6:	d7 01       	movw	r26, r14
    23e8:	c6 01       	movw	r24, r12
    23ea:	b0 58       	subi	r27, 0x80	; 128
  
  v_down[0] = -1 * clat * clon;
  v_down[1] = -1 * clat * slon;
  v_down[2] = -1 * slat;
  
  matrix m_ecef = { { v_north[0], v_north[1], v_north[2] },
    23ec:	8d 87       	std	Y+13, r24	; 0x0d
    23ee:	9e 87       	std	Y+14, r25	; 0x0e
    23f0:	af 87       	std	Y+15, r26	; 0x0f
    23f2:	b8 8b       	std	Y+16, r27	; 0x10
    23f4:	8d a1       	ldd	r24, Y+37	; 0x25
    23f6:	9e a1       	ldd	r25, Y+38	; 0x26
    23f8:	af a1       	ldd	r26, Y+39	; 0x27
    23fa:	b8 a5       	ldd	r27, Y+40	; 0x28
    23fc:	89 8b       	std	Y+17, r24	; 0x11
    23fe:	9a 8b       	std	Y+18, r25	; 0x12
    2400:	ab 8b       	std	Y+19, r26	; 0x13
    2402:	bc 8b       	std	Y+20, r27	; 0x14
    2404:	1d 8a       	std	Y+21, r1	; 0x15
    2406:	1e 8a       	std	Y+22, r1	; 0x16
    2408:	1f 8a       	std	Y+23, r1	; 0x17
    240a:	18 8e       	std	Y+24, r1	; 0x18
  
  v_east[0] = -1 * slon;
  v_east[1] = clon;
  v_east[2] = 0;
  
  v_down[0] = -1 * clat * clon;
    240c:	9c 01       	movw	r18, r24
    240e:	ad 01       	movw	r20, r26
    2410:	69 a5       	ldd	r22, Y+41	; 0x29
    2412:	7a a5       	ldd	r23, Y+42	; 0x2a
    2414:	8b a5       	ldd	r24, Y+43	; 0x2b
    2416:	9c a5       	ldd	r25, Y+44	; 0x2c
    2418:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  v_down[1] = -1 * clat * slon;
  v_down[2] = -1 * slat;
  
  matrix m_ecef = { { v_north[0], v_north[1], v_north[2] },
    241c:	69 8f       	std	Y+25, r22	; 0x19
    241e:	7a 8f       	std	Y+26, r23	; 0x1a
    2420:	8b 8f       	std	Y+27, r24	; 0x1b
    2422:	9c 8f       	std	Y+28, r25	; 0x1c
  v_east[0] = -1 * slon;
  v_east[1] = clon;
  v_east[2] = 0;
  
  v_down[0] = -1 * clat * clon;
  v_down[1] = -1 * clat * slon;
    2424:	29 a5       	ldd	r18, Y+41	; 0x29
    2426:	3a a5       	ldd	r19, Y+42	; 0x2a
    2428:	4b a5       	ldd	r20, Y+43	; 0x2b
    242a:	5c a5       	ldd	r21, Y+44	; 0x2c
    242c:	c7 01       	movw	r24, r14
    242e:	b6 01       	movw	r22, r12
    2430:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
  v_down[2] = -1 * slat;
  
  matrix m_ecef = { { v_north[0], v_north[1], v_north[2] },
    2434:	6d 8f       	std	Y+29, r22	; 0x1d
    2436:	7e 8f       	std	Y+30, r23	; 0x1e
    2438:	8f 8f       	std	Y+31, r24	; 0x1f
    243a:	98 a3       	std	Y+32, r25	; 0x20
    243c:	49 a2       	std	Y+33, r4	; 0x21
    243e:	5a a2       	std	Y+34, r5	; 0x22
    2440:	6b a2       	std	Y+35, r6	; 0x23
    2442:	7c a2       	std	Y+36, r7	; 0x24
                    { v_east[0], v_east[1], v_east[2] },
                    { v_down[0], v_down[1], v_down[2] } };
  
  vector_into_matrix(v_ned, m_ecef, v_ecef);
    2444:	a8 01       	movw	r20, r16
    2446:	be 01       	movw	r22, r28
    2448:	6f 5f       	subi	r22, 0xFF	; 255
    244a:	7f 4f       	sbci	r23, 0xFF	; 255
    244c:	c1 01       	movw	r24, r2
    244e:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <vector_into_matrix>
}
    2452:	ac 96       	adiw	r28, 0x2c	; 44
    2454:	0f b6       	in	r0, 0x3f	; 63
    2456:	f8 94       	cli
    2458:	de bf       	out	0x3e, r29	; 62
    245a:	0f be       	out	0x3f, r0	; 63
    245c:	cd bf       	out	0x3d, r28	; 61
    245e:	df 91       	pop	r29
    2460:	cf 91       	pop	r28
    2462:	1f 91       	pop	r17
    2464:	0f 91       	pop	r16
    2466:	ff 90       	pop	r15
    2468:	ef 90       	pop	r14
    246a:	df 90       	pop	r13
    246c:	cf 90       	pop	r12
    246e:	bf 90       	pop	r11
    2470:	af 90       	pop	r10
    2472:	9f 90       	pop	r9
    2474:	8f 90       	pop	r8
    2476:	7f 90       	pop	r7
    2478:	6f 90       	pop	r6
    247a:	5f 90       	pop	r5
    247c:	4f 90       	pop	r4
    247e:	3f 90       	pop	r3
    2480:	2f 90       	pop	r2
    2482:	08 95       	ret

00002484 <__vector_18>:
    2484:	1f 92       	push	r1
    2486:	0f 92       	push	r0
    2488:	0f b6       	in	r0, 0x3f	; 63
    248a:	0f 92       	push	r0
    248c:	11 24       	eor	r1, r1
    248e:	0b b6       	in	r0, 0x3b	; 59
    2490:	0f 92       	push	r0
    2492:	2f 93       	push	r18
    2494:	8f 93       	push	r24
    2496:	9f 93       	push	r25
    2498:	af 93       	push	r26
    249a:	bf 93       	push	r27
    249c:	ef 93       	push	r30
    249e:	ff 93       	push	r31
    24a0:	9b b3       	in	r25, 0x1b	; 27
    24a2:	80 ef       	ldi	r24, 0xF0	; 240
    24a4:	89 27       	eor	r24, r25
    24a6:	8b bb       	out	0x1b, r24	; 27
    24a8:	8c b1       	in	r24, 0x0c	; 12
    24aa:	80 93 0c 02 	sts	0x020C, r24
    24ae:	80 91 0d 02 	lds	r24, 0x020D
    24b2:	90 91 0e 02 	lds	r25, 0x020E
    24b6:	a0 91 0f 02 	lds	r26, 0x020F
    24ba:	b0 91 10 02 	lds	r27, 0x0210
    24be:	ba 2f       	mov	r27, r26
    24c0:	a9 2f       	mov	r26, r25
    24c2:	98 2f       	mov	r25, r24
    24c4:	88 27       	eor	r24, r24
    24c6:	80 93 0d 02 	sts	0x020D, r24
    24ca:	90 93 0e 02 	sts	0x020E, r25
    24ce:	a0 93 0f 02 	sts	0x020F, r26
    24d2:	b0 93 10 02 	sts	0x0210, r27
    24d6:	80 91 0d 02 	lds	r24, 0x020D
    24da:	90 91 0e 02 	lds	r25, 0x020E
    24de:	a0 91 0f 02 	lds	r26, 0x020F
    24e2:	b0 91 10 02 	lds	r27, 0x0210
    24e6:	88 27       	eor	r24, r24
    24e8:	80 93 0d 02 	sts	0x020D, r24
    24ec:	90 93 0e 02 	sts	0x020E, r25
    24f0:	a0 93 0f 02 	sts	0x020F, r26
    24f4:	b0 93 10 02 	sts	0x0210, r27
    24f8:	20 91 0c 02 	lds	r18, 0x020C
    24fc:	80 91 0d 02 	lds	r24, 0x020D
    2500:	90 91 0e 02 	lds	r25, 0x020E
    2504:	a0 91 0f 02 	lds	r26, 0x020F
    2508:	b0 91 10 02 	lds	r27, 0x0210
    250c:	82 2b       	or	r24, r18
    250e:	80 93 0d 02 	sts	0x020D, r24
    2512:	90 93 0e 02 	sts	0x020E, r25
    2516:	a0 93 0f 02 	sts	0x020F, r26
    251a:	b0 93 10 02 	sts	0x0210, r27
    251e:	80 91 11 01 	lds	r24, 0x0111
    2522:	8c 30       	cpi	r24, 0x0C	; 12
    2524:	08 f0       	brcs	.+2      	; 0x2528 <__vector_18+0xa4>
    2526:	86 c0       	rjmp	.+268    	; 0x2634 <__vector_18+0x1b0>
    2528:	80 91 11 01 	lds	r24, 0x0111
    252c:	84 30       	cpi	r24, 0x04	; 4
    252e:	28 f5       	brcc	.+74     	; 0x257a <__vector_18+0xf6>
    2530:	ef eb       	ldi	r30, 0xBF	; 191
    2532:	f4 e0       	ldi	r31, 0x04	; 4
    2534:	80 81       	ld	r24, Z
    2536:	91 81       	ldd	r25, Z+1	; 0x01
    2538:	a2 81       	ldd	r26, Z+2	; 0x02
    253a:	b3 81       	ldd	r27, Z+3	; 0x03
    253c:	89 2f       	mov	r24, r25
    253e:	9a 2f       	mov	r25, r26
    2540:	ab 2f       	mov	r26, r27
    2542:	bb 27       	eor	r27, r27
    2544:	a7 fd       	sbrc	r26, 7
    2546:	ba 95       	dec	r27
    2548:	80 83       	st	Z, r24
    254a:	91 83       	std	Z+1, r25	; 0x01
    254c:	a2 83       	std	Z+2, r26	; 0x02
    254e:	b3 83       	std	Z+3, r27	; 0x03
    2550:	80 81       	ld	r24, Z
    2552:	91 81       	ldd	r25, Z+1	; 0x01
    2554:	a2 81       	ldd	r26, Z+2	; 0x02
    2556:	b3 81       	ldd	r27, Z+3	; 0x03
    2558:	bb 27       	eor	r27, r27
    255a:	80 83       	st	Z, r24
    255c:	91 83       	std	Z+1, r25	; 0x01
    255e:	a2 83       	std	Z+2, r26	; 0x02
    2560:	b3 83       	std	Z+3, r27	; 0x03
    2562:	20 91 0c 02 	lds	r18, 0x020C
    2566:	80 81       	ld	r24, Z
    2568:	91 81       	ldd	r25, Z+1	; 0x01
    256a:	a2 81       	ldd	r26, Z+2	; 0x02
    256c:	b3 81       	ldd	r27, Z+3	; 0x03
    256e:	b2 2b       	or	r27, r18
    2570:	80 83       	st	Z, r24
    2572:	91 83       	std	Z+1, r25	; 0x01
    2574:	a2 83       	std	Z+2, r26	; 0x02
    2576:	b3 83       	std	Z+3, r27	; 0x03
    2578:	51 c0       	rjmp	.+162    	; 0x261c <__vector_18+0x198>
    257a:	80 91 11 01 	lds	r24, 0x0111
    257e:	88 30       	cpi	r24, 0x08	; 8
    2580:	28 f5       	brcc	.+74     	; 0x25cc <__vector_18+0x148>
    2582:	ef eb       	ldi	r30, 0xBF	; 191
    2584:	f4 e0       	ldi	r31, 0x04	; 4
    2586:	84 81       	ldd	r24, Z+4	; 0x04
    2588:	95 81       	ldd	r25, Z+5	; 0x05
    258a:	a6 81       	ldd	r26, Z+6	; 0x06
    258c:	b7 81       	ldd	r27, Z+7	; 0x07
    258e:	89 2f       	mov	r24, r25
    2590:	9a 2f       	mov	r25, r26
    2592:	ab 2f       	mov	r26, r27
    2594:	bb 27       	eor	r27, r27
    2596:	a7 fd       	sbrc	r26, 7
    2598:	ba 95       	dec	r27
    259a:	84 83       	std	Z+4, r24	; 0x04
    259c:	95 83       	std	Z+5, r25	; 0x05
    259e:	a6 83       	std	Z+6, r26	; 0x06
    25a0:	b7 83       	std	Z+7, r27	; 0x07
    25a2:	84 81       	ldd	r24, Z+4	; 0x04
    25a4:	95 81       	ldd	r25, Z+5	; 0x05
    25a6:	a6 81       	ldd	r26, Z+6	; 0x06
    25a8:	b7 81       	ldd	r27, Z+7	; 0x07
    25aa:	bb 27       	eor	r27, r27
    25ac:	84 83       	std	Z+4, r24	; 0x04
    25ae:	95 83       	std	Z+5, r25	; 0x05
    25b0:	a6 83       	std	Z+6, r26	; 0x06
    25b2:	b7 83       	std	Z+7, r27	; 0x07
    25b4:	20 91 0c 02 	lds	r18, 0x020C
    25b8:	84 81       	ldd	r24, Z+4	; 0x04
    25ba:	95 81       	ldd	r25, Z+5	; 0x05
    25bc:	a6 81       	ldd	r26, Z+6	; 0x06
    25be:	b7 81       	ldd	r27, Z+7	; 0x07
    25c0:	b2 2b       	or	r27, r18
    25c2:	84 83       	std	Z+4, r24	; 0x04
    25c4:	95 83       	std	Z+5, r25	; 0x05
    25c6:	a6 83       	std	Z+6, r26	; 0x06
    25c8:	b7 83       	std	Z+7, r27	; 0x07
    25ca:	28 c0       	rjmp	.+80     	; 0x261c <__vector_18+0x198>
    25cc:	80 91 11 01 	lds	r24, 0x0111
    25d0:	8c 30       	cpi	r24, 0x0C	; 12
    25d2:	20 f5       	brcc	.+72     	; 0x261c <__vector_18+0x198>
    25d4:	ef eb       	ldi	r30, 0xBF	; 191
    25d6:	f4 e0       	ldi	r31, 0x04	; 4
    25d8:	80 85       	ldd	r24, Z+8	; 0x08
    25da:	91 85       	ldd	r25, Z+9	; 0x09
    25dc:	a2 85       	ldd	r26, Z+10	; 0x0a
    25de:	b3 85       	ldd	r27, Z+11	; 0x0b
    25e0:	89 2f       	mov	r24, r25
    25e2:	9a 2f       	mov	r25, r26
    25e4:	ab 2f       	mov	r26, r27
    25e6:	bb 27       	eor	r27, r27
    25e8:	a7 fd       	sbrc	r26, 7
    25ea:	ba 95       	dec	r27
    25ec:	80 87       	std	Z+8, r24	; 0x08
    25ee:	91 87       	std	Z+9, r25	; 0x09
    25f0:	a2 87       	std	Z+10, r26	; 0x0a
    25f2:	b3 87       	std	Z+11, r27	; 0x0b
    25f4:	80 85       	ldd	r24, Z+8	; 0x08
    25f6:	91 85       	ldd	r25, Z+9	; 0x09
    25f8:	a2 85       	ldd	r26, Z+10	; 0x0a
    25fa:	b3 85       	ldd	r27, Z+11	; 0x0b
    25fc:	bb 27       	eor	r27, r27
    25fe:	80 87       	std	Z+8, r24	; 0x08
    2600:	91 87       	std	Z+9, r25	; 0x09
    2602:	a2 87       	std	Z+10, r26	; 0x0a
    2604:	b3 87       	std	Z+11, r27	; 0x0b
    2606:	20 91 0c 02 	lds	r18, 0x020C
    260a:	80 85       	ldd	r24, Z+8	; 0x08
    260c:	91 85       	ldd	r25, Z+9	; 0x09
    260e:	a2 85       	ldd	r26, Z+10	; 0x0a
    2610:	b3 85       	ldd	r27, Z+11	; 0x0b
    2612:	b2 2b       	or	r27, r18
    2614:	80 87       	std	Z+8, r24	; 0x08
    2616:	91 87       	std	Z+9, r25	; 0x09
    2618:	a2 87       	std	Z+10, r26	; 0x0a
    261a:	b3 87       	std	Z+11, r27	; 0x0b
    261c:	80 91 11 01 	lds	r24, 0x0111
    2620:	8f 5f       	subi	r24, 0xFF	; 255
    2622:	80 93 11 01 	sts	0x0111, r24
    2626:	80 91 11 01 	lds	r24, 0x0111
    262a:	8c 30       	cpi	r24, 0x0C	; 12
    262c:	19 f4       	brne	.+6      	; 0x2634 <__vector_18+0x1b0>
    262e:	8f ef       	ldi	r24, 0xFF	; 255
    2630:	80 93 11 01 	sts	0x0111, r24
    2634:	80 91 10 01 	lds	r24, 0x0110
    2638:	8c 30       	cpi	r24, 0x0C	; 12
    263a:	08 f0       	brcs	.+2      	; 0x263e <__vector_18+0x1ba>
    263c:	86 c0       	rjmp	.+268    	; 0x274a <__vector_18+0x2c6>
    263e:	80 91 10 01 	lds	r24, 0x0110
    2642:	84 30       	cpi	r24, 0x04	; 4
    2644:	28 f5       	brcc	.+74     	; 0x2690 <__vector_18+0x20c>
    2646:	ef eb       	ldi	r30, 0xBF	; 191
    2648:	f4 e0       	ldi	r31, 0x04	; 4
    264a:	84 85       	ldd	r24, Z+12	; 0x0c
    264c:	95 85       	ldd	r25, Z+13	; 0x0d
    264e:	a6 85       	ldd	r26, Z+14	; 0x0e
    2650:	b7 85       	ldd	r27, Z+15	; 0x0f
    2652:	89 2f       	mov	r24, r25
    2654:	9a 2f       	mov	r25, r26
    2656:	ab 2f       	mov	r26, r27
    2658:	bb 27       	eor	r27, r27
    265a:	a7 fd       	sbrc	r26, 7
    265c:	ba 95       	dec	r27
    265e:	84 87       	std	Z+12, r24	; 0x0c
    2660:	95 87       	std	Z+13, r25	; 0x0d
    2662:	a6 87       	std	Z+14, r26	; 0x0e
    2664:	b7 87       	std	Z+15, r27	; 0x0f
    2666:	84 85       	ldd	r24, Z+12	; 0x0c
    2668:	95 85       	ldd	r25, Z+13	; 0x0d
    266a:	a6 85       	ldd	r26, Z+14	; 0x0e
    266c:	b7 85       	ldd	r27, Z+15	; 0x0f
    266e:	bb 27       	eor	r27, r27
    2670:	84 87       	std	Z+12, r24	; 0x0c
    2672:	95 87       	std	Z+13, r25	; 0x0d
    2674:	a6 87       	std	Z+14, r26	; 0x0e
    2676:	b7 87       	std	Z+15, r27	; 0x0f
    2678:	20 91 0c 02 	lds	r18, 0x020C
    267c:	84 85       	ldd	r24, Z+12	; 0x0c
    267e:	95 85       	ldd	r25, Z+13	; 0x0d
    2680:	a6 85       	ldd	r26, Z+14	; 0x0e
    2682:	b7 85       	ldd	r27, Z+15	; 0x0f
    2684:	b2 2b       	or	r27, r18
    2686:	84 87       	std	Z+12, r24	; 0x0c
    2688:	95 87       	std	Z+13, r25	; 0x0d
    268a:	a6 87       	std	Z+14, r26	; 0x0e
    268c:	b7 87       	std	Z+15, r27	; 0x0f
    268e:	51 c0       	rjmp	.+162    	; 0x2732 <__vector_18+0x2ae>
    2690:	80 91 10 01 	lds	r24, 0x0110
    2694:	88 30       	cpi	r24, 0x08	; 8
    2696:	28 f5       	brcc	.+74     	; 0x26e2 <__vector_18+0x25e>
    2698:	ef eb       	ldi	r30, 0xBF	; 191
    269a:	f4 e0       	ldi	r31, 0x04	; 4
    269c:	80 89       	ldd	r24, Z+16	; 0x10
    269e:	91 89       	ldd	r25, Z+17	; 0x11
    26a0:	a2 89       	ldd	r26, Z+18	; 0x12
    26a2:	b3 89       	ldd	r27, Z+19	; 0x13
    26a4:	89 2f       	mov	r24, r25
    26a6:	9a 2f       	mov	r25, r26
    26a8:	ab 2f       	mov	r26, r27
    26aa:	bb 27       	eor	r27, r27
    26ac:	a7 fd       	sbrc	r26, 7
    26ae:	ba 95       	dec	r27
    26b0:	80 8b       	std	Z+16, r24	; 0x10
    26b2:	91 8b       	std	Z+17, r25	; 0x11
    26b4:	a2 8b       	std	Z+18, r26	; 0x12
    26b6:	b3 8b       	std	Z+19, r27	; 0x13
    26b8:	80 89       	ldd	r24, Z+16	; 0x10
    26ba:	91 89       	ldd	r25, Z+17	; 0x11
    26bc:	a2 89       	ldd	r26, Z+18	; 0x12
    26be:	b3 89       	ldd	r27, Z+19	; 0x13
    26c0:	bb 27       	eor	r27, r27
    26c2:	80 8b       	std	Z+16, r24	; 0x10
    26c4:	91 8b       	std	Z+17, r25	; 0x11
    26c6:	a2 8b       	std	Z+18, r26	; 0x12
    26c8:	b3 8b       	std	Z+19, r27	; 0x13
    26ca:	20 91 0c 02 	lds	r18, 0x020C
    26ce:	80 89       	ldd	r24, Z+16	; 0x10
    26d0:	91 89       	ldd	r25, Z+17	; 0x11
    26d2:	a2 89       	ldd	r26, Z+18	; 0x12
    26d4:	b3 89       	ldd	r27, Z+19	; 0x13
    26d6:	b2 2b       	or	r27, r18
    26d8:	80 8b       	std	Z+16, r24	; 0x10
    26da:	91 8b       	std	Z+17, r25	; 0x11
    26dc:	a2 8b       	std	Z+18, r26	; 0x12
    26de:	b3 8b       	std	Z+19, r27	; 0x13
    26e0:	28 c0       	rjmp	.+80     	; 0x2732 <__vector_18+0x2ae>
    26e2:	80 91 10 01 	lds	r24, 0x0110
    26e6:	8c 30       	cpi	r24, 0x0C	; 12
    26e8:	20 f5       	brcc	.+72     	; 0x2732 <__vector_18+0x2ae>
    26ea:	ef eb       	ldi	r30, 0xBF	; 191
    26ec:	f4 e0       	ldi	r31, 0x04	; 4
    26ee:	84 89       	ldd	r24, Z+20	; 0x14
    26f0:	95 89       	ldd	r25, Z+21	; 0x15
    26f2:	a6 89       	ldd	r26, Z+22	; 0x16
    26f4:	b7 89       	ldd	r27, Z+23	; 0x17
    26f6:	89 2f       	mov	r24, r25
    26f8:	9a 2f       	mov	r25, r26
    26fa:	ab 2f       	mov	r26, r27
    26fc:	bb 27       	eor	r27, r27
    26fe:	a7 fd       	sbrc	r26, 7
    2700:	ba 95       	dec	r27
    2702:	84 8b       	std	Z+20, r24	; 0x14
    2704:	95 8b       	std	Z+21, r25	; 0x15
    2706:	a6 8b       	std	Z+22, r26	; 0x16
    2708:	b7 8b       	std	Z+23, r27	; 0x17
    270a:	84 89       	ldd	r24, Z+20	; 0x14
    270c:	95 89       	ldd	r25, Z+21	; 0x15
    270e:	a6 89       	ldd	r26, Z+22	; 0x16
    2710:	b7 89       	ldd	r27, Z+23	; 0x17
    2712:	bb 27       	eor	r27, r27
    2714:	84 8b       	std	Z+20, r24	; 0x14
    2716:	95 8b       	std	Z+21, r25	; 0x15
    2718:	a6 8b       	std	Z+22, r26	; 0x16
    271a:	b7 8b       	std	Z+23, r27	; 0x17
    271c:	20 91 0c 02 	lds	r18, 0x020C
    2720:	84 89       	ldd	r24, Z+20	; 0x14
    2722:	95 89       	ldd	r25, Z+21	; 0x15
    2724:	a6 89       	ldd	r26, Z+22	; 0x16
    2726:	b7 89       	ldd	r27, Z+23	; 0x17
    2728:	b2 2b       	or	r27, r18
    272a:	84 8b       	std	Z+20, r24	; 0x14
    272c:	95 8b       	std	Z+21, r25	; 0x15
    272e:	a6 8b       	std	Z+22, r26	; 0x16
    2730:	b7 8b       	std	Z+23, r27	; 0x17
    2732:	80 91 10 01 	lds	r24, 0x0110
    2736:	8f 5f       	subi	r24, 0xFF	; 255
    2738:	80 93 10 01 	sts	0x0110, r24
    273c:	80 91 10 01 	lds	r24, 0x0110
    2740:	8c 30       	cpi	r24, 0x0C	; 12
    2742:	19 f4       	brne	.+6      	; 0x274a <__vector_18+0x2c6>
    2744:	8f ef       	ldi	r24, 0xFF	; 255
    2746:	80 93 10 01 	sts	0x0110, r24
    274a:	80 91 0f 01 	lds	r24, 0x010F
    274e:	84 30       	cpi	r24, 0x04	; 4
    2750:	20 f5       	brcc	.+72     	; 0x279a <__vector_18+0x316>
    2752:	80 91 0f 01 	lds	r24, 0x010F
    2756:	82 30       	cpi	r24, 0x02	; 2
    2758:	a0 f0       	brcs	.+40     	; 0x2782 <__vector_18+0x2fe>
    275a:	ef eb       	ldi	r30, 0xBF	; 191
    275c:	f4 e0       	ldi	r31, 0x04	; 4
    275e:	83 a5       	ldd	r24, Z+43	; 0x2b
    2760:	94 a5       	ldd	r25, Z+44	; 0x2c
    2762:	89 2f       	mov	r24, r25
    2764:	99 27       	eor	r25, r25
    2766:	94 a7       	std	Z+44, r25	; 0x2c
    2768:	83 a7       	std	Z+43, r24	; 0x2b
    276a:	83 a5       	ldd	r24, Z+43	; 0x2b
    276c:	94 a5       	ldd	r25, Z+44	; 0x2c
    276e:	99 27       	eor	r25, r25
    2770:	94 a7       	std	Z+44, r25	; 0x2c
    2772:	83 a7       	std	Z+43, r24	; 0x2b
    2774:	20 91 0c 02 	lds	r18, 0x020C
    2778:	83 a5       	ldd	r24, Z+43	; 0x2b
    277a:	94 a5       	ldd	r25, Z+44	; 0x2c
    277c:	92 2b       	or	r25, r18
    277e:	94 a7       	std	Z+44, r25	; 0x2c
    2780:	83 a7       	std	Z+43, r24	; 0x2b
    2782:	80 91 0f 01 	lds	r24, 0x010F
    2786:	8f 5f       	subi	r24, 0xFF	; 255
    2788:	80 93 0f 01 	sts	0x010F, r24
    278c:	80 91 0f 01 	lds	r24, 0x010F
    2790:	84 30       	cpi	r24, 0x04	; 4
    2792:	19 f4       	brne	.+6      	; 0x279a <__vector_18+0x316>
    2794:	8f ef       	ldi	r24, 0xFF	; 255
    2796:	80 93 0f 01 	sts	0x010F, r24
    279a:	80 91 0e 01 	lds	r24, 0x010E
    279e:	80 31       	cpi	r24, 0x10	; 16
    27a0:	08 f0       	brcs	.+2      	; 0x27a4 <__vector_18+0x320>
    27a2:	8b c0       	rjmp	.+278    	; 0x28ba <__vector_18+0x436>
    27a4:	80 91 0e 01 	lds	r24, 0x010E
    27a8:	84 30       	cpi	r24, 0x04	; 4
    27aa:	08 f4       	brcc	.+2      	; 0x27ae <__vector_18+0x32a>
    27ac:	7a c0       	rjmp	.+244    	; 0x28a2 <__vector_18+0x41e>
    27ae:	80 91 0e 01 	lds	r24, 0x010E
    27b2:	88 30       	cpi	r24, 0x08	; 8
    27b4:	28 f5       	brcc	.+74     	; 0x2800 <__vector_18+0x37c>
    27b6:	ef eb       	ldi	r30, 0xBF	; 191
    27b8:	f4 e0       	ldi	r31, 0x04	; 4
    27ba:	80 8d       	ldd	r24, Z+24	; 0x18
    27bc:	91 8d       	ldd	r25, Z+25	; 0x19
    27be:	a2 8d       	ldd	r26, Z+26	; 0x1a
    27c0:	b3 8d       	ldd	r27, Z+27	; 0x1b
    27c2:	89 2f       	mov	r24, r25
    27c4:	9a 2f       	mov	r25, r26
    27c6:	ab 2f       	mov	r26, r27
    27c8:	bb 27       	eor	r27, r27
    27ca:	a7 fd       	sbrc	r26, 7
    27cc:	ba 95       	dec	r27
    27ce:	80 8f       	std	Z+24, r24	; 0x18
    27d0:	91 8f       	std	Z+25, r25	; 0x19
    27d2:	a2 8f       	std	Z+26, r26	; 0x1a
    27d4:	b3 8f       	std	Z+27, r27	; 0x1b
    27d6:	80 8d       	ldd	r24, Z+24	; 0x18
    27d8:	91 8d       	ldd	r25, Z+25	; 0x19
    27da:	a2 8d       	ldd	r26, Z+26	; 0x1a
    27dc:	b3 8d       	ldd	r27, Z+27	; 0x1b
    27de:	bb 27       	eor	r27, r27
    27e0:	80 8f       	std	Z+24, r24	; 0x18
    27e2:	91 8f       	std	Z+25, r25	; 0x19
    27e4:	a2 8f       	std	Z+26, r26	; 0x1a
    27e6:	b3 8f       	std	Z+27, r27	; 0x1b
    27e8:	20 91 0c 02 	lds	r18, 0x020C
    27ec:	80 8d       	ldd	r24, Z+24	; 0x18
    27ee:	91 8d       	ldd	r25, Z+25	; 0x19
    27f0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    27f2:	b3 8d       	ldd	r27, Z+27	; 0x1b
    27f4:	b2 2b       	or	r27, r18
    27f6:	80 8f       	std	Z+24, r24	; 0x18
    27f8:	91 8f       	std	Z+25, r25	; 0x19
    27fa:	a2 8f       	std	Z+26, r26	; 0x1a
    27fc:	b3 8f       	std	Z+27, r27	; 0x1b
    27fe:	51 c0       	rjmp	.+162    	; 0x28a2 <__vector_18+0x41e>
    2800:	80 91 0e 01 	lds	r24, 0x010E
    2804:	8c 30       	cpi	r24, 0x0C	; 12
    2806:	28 f5       	brcc	.+74     	; 0x2852 <__vector_18+0x3ce>
    2808:	ef eb       	ldi	r30, 0xBF	; 191
    280a:	f4 e0       	ldi	r31, 0x04	; 4
    280c:	84 8d       	ldd	r24, Z+28	; 0x1c
    280e:	95 8d       	ldd	r25, Z+29	; 0x1d
    2810:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2812:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2814:	89 2f       	mov	r24, r25
    2816:	9a 2f       	mov	r25, r26
    2818:	ab 2f       	mov	r26, r27
    281a:	bb 27       	eor	r27, r27
    281c:	a7 fd       	sbrc	r26, 7
    281e:	ba 95       	dec	r27
    2820:	84 8f       	std	Z+28, r24	; 0x1c
    2822:	95 8f       	std	Z+29, r25	; 0x1d
    2824:	a6 8f       	std	Z+30, r26	; 0x1e
    2826:	b7 8f       	std	Z+31, r27	; 0x1f
    2828:	84 8d       	ldd	r24, Z+28	; 0x1c
    282a:	95 8d       	ldd	r25, Z+29	; 0x1d
    282c:	a6 8d       	ldd	r26, Z+30	; 0x1e
    282e:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2830:	bb 27       	eor	r27, r27
    2832:	84 8f       	std	Z+28, r24	; 0x1c
    2834:	95 8f       	std	Z+29, r25	; 0x1d
    2836:	a6 8f       	std	Z+30, r26	; 0x1e
    2838:	b7 8f       	std	Z+31, r27	; 0x1f
    283a:	20 91 0c 02 	lds	r18, 0x020C
    283e:	84 8d       	ldd	r24, Z+28	; 0x1c
    2840:	95 8d       	ldd	r25, Z+29	; 0x1d
    2842:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2844:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2846:	b2 2b       	or	r27, r18
    2848:	84 8f       	std	Z+28, r24	; 0x1c
    284a:	95 8f       	std	Z+29, r25	; 0x1d
    284c:	a6 8f       	std	Z+30, r26	; 0x1e
    284e:	b7 8f       	std	Z+31, r27	; 0x1f
    2850:	28 c0       	rjmp	.+80     	; 0x28a2 <__vector_18+0x41e>
    2852:	80 91 0e 01 	lds	r24, 0x010E
    2856:	80 31       	cpi	r24, 0x10	; 16
    2858:	20 f5       	brcc	.+72     	; 0x28a2 <__vector_18+0x41e>
    285a:	ef eb       	ldi	r30, 0xBF	; 191
    285c:	f4 e0       	ldi	r31, 0x04	; 4
    285e:	80 a1       	ldd	r24, Z+32	; 0x20
    2860:	91 a1       	ldd	r25, Z+33	; 0x21
    2862:	a2 a1       	ldd	r26, Z+34	; 0x22
    2864:	b3 a1       	ldd	r27, Z+35	; 0x23
    2866:	89 2f       	mov	r24, r25
    2868:	9a 2f       	mov	r25, r26
    286a:	ab 2f       	mov	r26, r27
    286c:	bb 27       	eor	r27, r27
    286e:	a7 fd       	sbrc	r26, 7
    2870:	ba 95       	dec	r27
    2872:	80 a3       	std	Z+32, r24	; 0x20
    2874:	91 a3       	std	Z+33, r25	; 0x21
    2876:	a2 a3       	std	Z+34, r26	; 0x22
    2878:	b3 a3       	std	Z+35, r27	; 0x23
    287a:	80 a1       	ldd	r24, Z+32	; 0x20
    287c:	91 a1       	ldd	r25, Z+33	; 0x21
    287e:	a2 a1       	ldd	r26, Z+34	; 0x22
    2880:	b3 a1       	ldd	r27, Z+35	; 0x23
    2882:	bb 27       	eor	r27, r27
    2884:	80 a3       	std	Z+32, r24	; 0x20
    2886:	91 a3       	std	Z+33, r25	; 0x21
    2888:	a2 a3       	std	Z+34, r26	; 0x22
    288a:	b3 a3       	std	Z+35, r27	; 0x23
    288c:	20 91 0c 02 	lds	r18, 0x020C
    2890:	80 a1       	ldd	r24, Z+32	; 0x20
    2892:	91 a1       	ldd	r25, Z+33	; 0x21
    2894:	a2 a1       	ldd	r26, Z+34	; 0x22
    2896:	b3 a1       	ldd	r27, Z+35	; 0x23
    2898:	b2 2b       	or	r27, r18
    289a:	80 a3       	std	Z+32, r24	; 0x20
    289c:	91 a3       	std	Z+33, r25	; 0x21
    289e:	a2 a3       	std	Z+34, r26	; 0x22
    28a0:	b3 a3       	std	Z+35, r27	; 0x23
    28a2:	80 91 0e 01 	lds	r24, 0x010E
    28a6:	8f 5f       	subi	r24, 0xFF	; 255
    28a8:	80 93 0e 01 	sts	0x010E, r24
    28ac:	80 91 0e 01 	lds	r24, 0x010E
    28b0:	80 31       	cpi	r24, 0x10	; 16
    28b2:	19 f4       	brne	.+6      	; 0x28ba <__vector_18+0x436>
    28b4:	8f ef       	ldi	r24, 0xFF	; 255
    28b6:	80 93 0e 01 	sts	0x010E, r24
    28ba:	80 91 0d 01 	lds	r24, 0x010D
    28be:	87 30       	cpi	r24, 0x07	; 7
    28c0:	08 f0       	brcs	.+2      	; 0x28c4 <__vector_18+0x440>
    28c2:	54 c0       	rjmp	.+168    	; 0x296c <__vector_18+0x4e8>
    28c4:	80 91 0d 01 	lds	r24, 0x010D
    28c8:	81 11       	cpse	r24, r1
    28ca:	05 c0       	rjmp	.+10     	; 0x28d6 <__vector_18+0x452>
    28cc:	80 91 0c 02 	lds	r24, 0x020C
    28d0:	80 93 e3 04 	sts	0x04E3, r24
    28d4:	3c c0       	rjmp	.+120    	; 0x294e <__vector_18+0x4ca>
    28d6:	80 91 0d 01 	lds	r24, 0x010D
    28da:	81 30       	cpi	r24, 0x01	; 1
    28dc:	29 f4       	brne	.+10     	; 0x28e8 <__vector_18+0x464>
    28de:	80 91 0c 02 	lds	r24, 0x020C
    28e2:	80 93 e4 04 	sts	0x04E4, r24
    28e6:	33 c0       	rjmp	.+102    	; 0x294e <__vector_18+0x4ca>
    28e8:	80 91 0d 01 	lds	r24, 0x010D
    28ec:	82 30       	cpi	r24, 0x02	; 2
    28ee:	29 f4       	brne	.+10     	; 0x28fa <__vector_18+0x476>
    28f0:	80 91 0c 02 	lds	r24, 0x020C
    28f4:	80 93 e5 04 	sts	0x04E5, r24
    28f8:	2a c0       	rjmp	.+84     	; 0x294e <__vector_18+0x4ca>
    28fa:	80 91 0d 01 	lds	r24, 0x010D
    28fe:	83 30       	cpi	r24, 0x03	; 3
    2900:	29 f4       	brne	.+10     	; 0x290c <__vector_18+0x488>
    2902:	80 91 0c 02 	lds	r24, 0x020C
    2906:	80 93 e6 04 	sts	0x04E6, r24
    290a:	21 c0       	rjmp	.+66     	; 0x294e <__vector_18+0x4ca>
    290c:	80 91 0d 01 	lds	r24, 0x010D
    2910:	84 30       	cpi	r24, 0x04	; 4
    2912:	29 f4       	brne	.+10     	; 0x291e <__vector_18+0x49a>
    2914:	80 91 0c 02 	lds	r24, 0x020C
    2918:	80 93 e7 04 	sts	0x04E7, r24
    291c:	18 c0       	rjmp	.+48     	; 0x294e <__vector_18+0x4ca>
    291e:	80 91 0d 01 	lds	r24, 0x010D
    2922:	85 30       	cpi	r24, 0x05	; 5
    2924:	a0 f0       	brcs	.+40     	; 0x294e <__vector_18+0x4ca>
    2926:	ef eb       	ldi	r30, 0xBF	; 191
    2928:	f4 e0       	ldi	r31, 0x04	; 4
    292a:	81 a5       	ldd	r24, Z+41	; 0x29
    292c:	92 a5       	ldd	r25, Z+42	; 0x2a
    292e:	89 2f       	mov	r24, r25
    2930:	99 27       	eor	r25, r25
    2932:	92 a7       	std	Z+42, r25	; 0x2a
    2934:	81 a7       	std	Z+41, r24	; 0x29
    2936:	81 a5       	ldd	r24, Z+41	; 0x29
    2938:	92 a5       	ldd	r25, Z+42	; 0x2a
    293a:	99 27       	eor	r25, r25
    293c:	92 a7       	std	Z+42, r25	; 0x2a
    293e:	81 a7       	std	Z+41, r24	; 0x29
    2940:	20 91 0c 02 	lds	r18, 0x020C
    2944:	81 a5       	ldd	r24, Z+41	; 0x29
    2946:	92 a5       	ldd	r25, Z+42	; 0x2a
    2948:	92 2b       	or	r25, r18
    294a:	92 a7       	std	Z+42, r25	; 0x2a
    294c:	81 a7       	std	Z+41, r24	; 0x29
    294e:	80 91 0d 01 	lds	r24, 0x010D
    2952:	8f 5f       	subi	r24, 0xFF	; 255
    2954:	80 93 0d 01 	sts	0x010D, r24
    2958:	80 91 0d 01 	lds	r24, 0x010D
    295c:	87 30       	cpi	r24, 0x07	; 7
    295e:	31 f4       	brne	.+12     	; 0x296c <__vector_18+0x4e8>
    2960:	8f ef       	ldi	r24, 0xFF	; 255
    2962:	80 93 0d 01 	sts	0x010D, r24
    2966:	81 e0       	ldi	r24, 0x01	; 1
    2968:	80 93 0b 02 	sts	0x020B, r24
    296c:	80 91 0d 02 	lds	r24, 0x020D
    2970:	90 91 0e 02 	lds	r25, 0x020E
    2974:	a0 91 0f 02 	lds	r26, 0x020F
    2978:	b0 91 10 02 	lds	r27, 0x0210
    297c:	8c 3a       	cpi	r24, 0xAC	; 172
    297e:	94 40       	sbci	r25, 0x04	; 4
    2980:	af 43       	sbci	r26, 0x3F	; 63
    2982:	bf 43       	sbci	r27, 0x3F	; 63
    2984:	29 f4       	brne	.+10     	; 0x2990 <__vector_18+0x50c>
    2986:	10 92 0b 02 	sts	0x020B, r1
    298a:	10 92 11 01 	sts	0x0111, r1
    298e:	3f c0       	rjmp	.+126    	; 0x2a0e <__vector_18+0x58a>
    2990:	80 91 0d 02 	lds	r24, 0x020D
    2994:	90 91 0e 02 	lds	r25, 0x020E
    2998:	a0 91 0f 02 	lds	r26, 0x020F
    299c:	b0 91 10 02 	lds	r27, 0x0210
    29a0:	8c 3a       	cpi	r24, 0xAC	; 172
    29a2:	95 40       	sbci	r25, 0x05	; 5
    29a4:	af 43       	sbci	r26, 0x3F	; 63
    29a6:	bf 43       	sbci	r27, 0x3F	; 63
    29a8:	19 f4       	brne	.+6      	; 0x29b0 <__vector_18+0x52c>
    29aa:	10 92 10 01 	sts	0x0110, r1
    29ae:	2f c0       	rjmp	.+94     	; 0x2a0e <__vector_18+0x58a>
    29b0:	80 91 0d 02 	lds	r24, 0x020D
    29b4:	90 91 0e 02 	lds	r25, 0x020E
    29b8:	a0 91 0f 02 	lds	r26, 0x020F
    29bc:	b0 91 10 02 	lds	r27, 0x0210
    29c0:	8c 3a       	cpi	r24, 0xAC	; 172
    29c2:	9b 40       	sbci	r25, 0x0B	; 11
    29c4:	af 43       	sbci	r26, 0x3F	; 63
    29c6:	bf 43       	sbci	r27, 0x3F	; 63
    29c8:	19 f4       	brne	.+6      	; 0x29d0 <__vector_18+0x54c>
    29ca:	10 92 0f 01 	sts	0x010F, r1
    29ce:	1f c0       	rjmp	.+62     	; 0x2a0e <__vector_18+0x58a>
    29d0:	80 91 0d 02 	lds	r24, 0x020D
    29d4:	90 91 0e 02 	lds	r25, 0x020E
    29d8:	a0 91 0f 02 	lds	r26, 0x020F
    29dc:	b0 91 10 02 	lds	r27, 0x0210
    29e0:	8c 3a       	cpi	r24, 0xAC	; 172
    29e2:	9e 40       	sbci	r25, 0x0E	; 14
    29e4:	af 43       	sbci	r26, 0x3F	; 63
    29e6:	bf 43       	sbci	r27, 0x3F	; 63
    29e8:	19 f4       	brne	.+6      	; 0x29f0 <__vector_18+0x56c>
    29ea:	10 92 0e 01 	sts	0x010E, r1
    29ee:	0f c0       	rjmp	.+30     	; 0x2a0e <__vector_18+0x58a>
    29f0:	80 91 0d 02 	lds	r24, 0x020D
    29f4:	90 91 0e 02 	lds	r25, 0x020E
    29f8:	a0 91 0f 02 	lds	r26, 0x020F
    29fc:	b0 91 10 02 	lds	r27, 0x0210
    2a00:	8c 3a       	cpi	r24, 0xAC	; 172
    2a02:	9f 40       	sbci	r25, 0x0F	; 15
    2a04:	af 43       	sbci	r26, 0x3F	; 63
    2a06:	bf 43       	sbci	r27, 0x3F	; 63
    2a08:	11 f4       	brne	.+4      	; 0x2a0e <__vector_18+0x58a>
    2a0a:	10 92 0d 01 	sts	0x010D, r1
    2a0e:	80 91 ea 04 	lds	r24, 0x04EA
    2a12:	90 91 eb 04 	lds	r25, 0x04EB
    2a16:	88 3e       	cpi	r24, 0xE8	; 232
    2a18:	93 40       	sbci	r25, 0x03	; 3
    2a1a:	f0 f4       	brcc	.+60     	; 0x2a58 <__vector_18+0x5d4>
    2a1c:	80 91 0b 02 	lds	r24, 0x020B
    2a20:	88 23       	and	r24, r24
    2a22:	d1 f0       	breq	.+52     	; 0x2a58 <__vector_18+0x5d4>
    2a24:	80 91 ea 04 	lds	r24, 0x04EA
    2a28:	90 91 eb 04 	lds	r25, 0x04EB
    2a2c:	89 2b       	or	r24, r25
    2a2e:	a1 f0       	breq	.+40     	; 0x2a58 <__vector_18+0x5d4>
    2a30:	81 e0       	ldi	r24, 0x01	; 1
    2a32:	80 93 27 01 	sts	0x0127, r24
    2a36:	57 98       	cbi	0x0a, 7	; 10
    2a38:	8f ef       	ldi	r24, 0xFF	; 255
    2a3a:	9f ef       	ldi	r25, 0xFF	; 255
    2a3c:	90 93 eb 04 	sts	0x04EB, r25
    2a40:	80 93 ea 04 	sts	0x04EA, r24
    2a44:	10 92 0b 02 	sts	0x020B, r1
    2a48:	10 92 0d 02 	sts	0x020D, r1
    2a4c:	10 92 0e 02 	sts	0x020E, r1
    2a50:	10 92 0f 02 	sts	0x020F, r1
    2a54:	10 92 10 02 	sts	0x0210, r1
    2a58:	ff 91       	pop	r31
    2a5a:	ef 91       	pop	r30
    2a5c:	bf 91       	pop	r27
    2a5e:	af 91       	pop	r26
    2a60:	9f 91       	pop	r25
    2a62:	8f 91       	pop	r24
    2a64:	2f 91       	pop	r18
    2a66:	0f 90       	pop	r0
    2a68:	0b be       	out	0x3b, r0	; 59
    2a6a:	0f 90       	pop	r0
    2a6c:	0f be       	out	0x3f, r0	; 63
    2a6e:	0f 90       	pop	r0
    2a70:	1f 90       	pop	r1
    2a72:	18 95       	reti

00002a74 <igrf>:
    2a74:	2f 92       	push	r2
    2a76:	3f 92       	push	r3
    2a78:	4f 92       	push	r4
    2a7a:	5f 92       	push	r5
    2a7c:	6f 92       	push	r6
    2a7e:	7f 92       	push	r7
    2a80:	8f 92       	push	r8
    2a82:	9f 92       	push	r9
    2a84:	af 92       	push	r10
    2a86:	bf 92       	push	r11
    2a88:	cf 92       	push	r12
    2a8a:	df 92       	push	r13
    2a8c:	ef 92       	push	r14
    2a8e:	ff 92       	push	r15
    2a90:	0f 93       	push	r16
    2a92:	1f 93       	push	r17
    2a94:	cf 93       	push	r28
    2a96:	df 93       	push	r29
    2a98:	cd b7       	in	r28, 0x3d	; 61
    2a9a:	de b7       	in	r29, 0x3e	; 62
    2a9c:	c8 54       	subi	r28, 0x48	; 72
    2a9e:	d1 09       	sbc	r29, r1
    2aa0:	0f b6       	in	r0, 0x3f	; 63
    2aa2:	f8 94       	cli
    2aa4:	de bf       	out	0x3e, r29	; 62
    2aa6:	0f be       	out	0x3f, r0	; 63
    2aa8:	cd bf       	out	0x3d, r28	; 61
    2aaa:	fc 01       	movw	r30, r24
    2aac:	2a 01       	movw	r4, r20
    2aae:	3b 01       	movw	r6, r22
    2ab0:	32 2e       	mov	r3, r18
    2ab2:	29 96       	adiw	r28, 0x09	; 9
    2ab4:	1f af       	std	Y+63, r17	; 0x3f
    2ab6:	0e af       	std	Y+62, r16	; 0x3e
    2ab8:	29 97       	sbiw	r28, 0x09	; 9
    2aba:	80 80       	ld	r8, Z
    2abc:	91 80       	ldd	r9, Z+1	; 0x01
    2abe:	a2 80       	ldd	r10, Z+2	; 0x02
    2ac0:	b3 80       	ldd	r11, Z+3	; 0x03
    2ac2:	c4 80       	ldd	r12, Z+4	; 0x04
    2ac4:	d5 80       	ldd	r13, Z+5	; 0x05
    2ac6:	e6 80       	ldd	r14, Z+6	; 0x06
    2ac8:	f7 80       	ldd	r15, Z+7	; 0x07
    2aca:	20 e0       	ldi	r18, 0x00	; 0
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	4a e7       	ldi	r20, 0x7A	; 122
    2ad0:	54 e4       	ldi	r21, 0x44	; 68
    2ad2:	60 85       	ldd	r22, Z+8	; 0x08
    2ad4:	71 85       	ldd	r23, Z+9	; 0x09
    2ad6:	82 85       	ldd	r24, Z+10	; 0x0a
    2ad8:	93 85       	ldd	r25, Z+11	; 0x0b
    2ada:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2ade:	6d 83       	std	Y+5, r22	; 0x05
    2ae0:	7e 83       	std	Y+6, r23	; 0x06
    2ae2:	8f 83       	std	Y+7, r24	; 0x07
    2ae4:	98 87       	std	Y+8, r25	; 0x08
    2ae6:	c5 01       	movw	r24, r10
    2ae8:	b4 01       	movw	r22, r8
    2aea:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    2aee:	69 83       	std	Y+1, r22	; 0x01
    2af0:	7a 83       	std	Y+2, r23	; 0x02
    2af2:	8b 83       	std	Y+3, r24	; 0x03
    2af4:	9c 83       	std	Y+4, r25	; 0x04
    2af6:	c5 01       	movw	r24, r10
    2af8:	b4 01       	movw	r22, r8
    2afa:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    2afe:	69 87       	std	Y+9, r22	; 0x09
    2b00:	7a 87       	std	Y+10, r23	; 0x0a
    2b02:	8b 87       	std	Y+11, r24	; 0x0b
    2b04:	9c 87       	std	Y+12, r25	; 0x0c
    2b06:	20 e0       	ldi	r18, 0x00	; 0
    2b08:	30 ee       	ldi	r19, 0xE0	; 224
    2b0a:	4b ef       	ldi	r20, 0xFB	; 251
    2b0c:	54 e4       	ldi	r21, 0x44	; 68
    2b0e:	c3 01       	movw	r24, r6
    2b10:	b2 01       	movw	r22, r4
    2b12:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2b16:	6e a7       	std	Y+46, r22	; 0x2e
    2b18:	7f a7       	std	Y+47, r23	; 0x2f
    2b1a:	88 ab       	std	Y+48, r24	; 0x30
    2b1c:	99 ab       	std	Y+49, r25	; 0x31
    2b1e:	c7 01       	movw	r24, r14
    2b20:	b6 01       	movw	r22, r12
    2b22:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    2b26:	60 93 51 02 	sts	0x0251, r22
    2b2a:	70 93 52 02 	sts	0x0252, r23
    2b2e:	80 93 53 02 	sts	0x0253, r24
    2b32:	90 93 54 02 	sts	0x0254, r25
    2b36:	c7 01       	movw	r24, r14
    2b38:	b6 01       	movw	r22, r12
    2b3a:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    2b3e:	60 93 15 02 	sts	0x0215, r22
    2b42:	70 93 16 02 	sts	0x0216, r23
    2b46:	80 93 17 02 	sts	0x0217, r24
    2b4a:	90 93 18 02 	sts	0x0218, r25
    2b4e:	2e e2       	ldi	r18, 0x2E	; 46
    2b50:	3f e2       	ldi	r19, 0x2F	; 47
    2b52:	4b e1       	ldi	r20, 0x1B	; 27
    2b54:	5c e4       	ldi	r21, 0x4C	; 76
    2b56:	69 85       	ldd	r22, Y+9	; 0x09
    2b58:	7a 85       	ldd	r23, Y+10	; 0x0a
    2b5a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b5c:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b5e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2b62:	29 85       	ldd	r18, Y+9	; 0x09
    2b64:	3a 85       	ldd	r19, Y+10	; 0x0a
    2b66:	4b 85       	ldd	r20, Y+11	; 0x0b
    2b68:	5c 85       	ldd	r21, Y+12	; 0x0c
    2b6a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2b6e:	4b 01       	movw	r8, r22
    2b70:	5c 01       	movw	r10, r24
    2b72:	2b e3       	ldi	r18, 0x3B	; 59
    2b74:	35 e2       	ldi	r19, 0x25	; 37
    2b76:	4a e1       	ldi	r20, 0x1A	; 26
    2b78:	5c e4       	ldi	r21, 0x4C	; 76
    2b7a:	69 81       	ldd	r22, Y+1	; 0x01
    2b7c:	7a 81       	ldd	r23, Y+2	; 0x02
    2b7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b80:	9c 81       	ldd	r25, Y+4	; 0x04
    2b82:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2b86:	29 81       	ldd	r18, Y+1	; 0x01
    2b88:	3a 81       	ldd	r19, Y+2	; 0x02
    2b8a:	4b 81       	ldd	r20, Y+3	; 0x03
    2b8c:	5c 81       	ldd	r21, Y+4	; 0x04
    2b8e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2b92:	69 8b       	std	Y+17, r22	; 0x11
    2b94:	7a 8b       	std	Y+18, r23	; 0x12
    2b96:	8b 8b       	std	Y+19, r24	; 0x13
    2b98:	9c 8b       	std	Y+20, r25	; 0x14
    2b9a:	9b 01       	movw	r18, r22
    2b9c:	ac 01       	movw	r20, r24
    2b9e:	c5 01       	movw	r24, r10
    2ba0:	b4 01       	movw	r22, r8
    2ba2:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2ba6:	6d 8b       	std	Y+21, r22	; 0x15
    2ba8:	7e 8b       	std	Y+22, r23	; 0x16
    2baa:	8f 8b       	std	Y+23, r24	; 0x17
    2bac:	98 8f       	std	Y+24, r25	; 0x18
    2bae:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    2bb2:	2b 01       	movw	r4, r22
    2bb4:	3c 01       	movw	r6, r24
    2bb6:	9b 01       	movw	r18, r22
    2bb8:	ac 01       	movw	r20, r24
    2bba:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2bbe:	6b 01       	movw	r12, r22
    2bc0:	7c 01       	movw	r14, r24
    2bc2:	2d 81       	ldd	r18, Y+5	; 0x05
    2bc4:	3e 81       	ldd	r19, Y+6	; 0x06
    2bc6:	4f 81       	ldd	r20, Y+7	; 0x07
    2bc8:	58 85       	ldd	r21, Y+8	; 0x08
    2bca:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2bce:	2d 81       	ldd	r18, Y+5	; 0x05
    2bd0:	3e 81       	ldd	r19, Y+6	; 0x06
    2bd2:	4f 81       	ldd	r20, Y+7	; 0x07
    2bd4:	58 85       	ldd	r21, Y+8	; 0x08
    2bd6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2bda:	69 8f       	std	Y+25, r22	; 0x19
    2bdc:	7a 8f       	std	Y+26, r23	; 0x1a
    2bde:	8b 8f       	std	Y+27, r24	; 0x1b
    2be0:	9c 8f       	std	Y+28, r25	; 0x1c
    2be2:	2e e2       	ldi	r18, 0x2E	; 46
    2be4:	3f e2       	ldi	r19, 0x2F	; 47
    2be6:	4b e1       	ldi	r20, 0x1B	; 27
    2be8:	5c e4       	ldi	r21, 0x4C	; 76
    2bea:	c5 01       	movw	r24, r10
    2bec:	b4 01       	movw	r22, r8
    2bee:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2bf2:	69 a3       	std	Y+33, r22	; 0x21
    2bf4:	7a a3       	std	Y+34, r23	; 0x22
    2bf6:	8b a3       	std	Y+35, r24	; 0x23
    2bf8:	9c a3       	std	Y+36, r25	; 0x24
    2bfa:	2d 81       	ldd	r18, Y+5	; 0x05
    2bfc:	3e 81       	ldd	r19, Y+6	; 0x06
    2bfe:	4f 81       	ldd	r20, Y+7	; 0x07
    2c00:	58 85       	ldd	r21, Y+8	; 0x08
    2c02:	c7 01       	movw	r24, r14
    2c04:	b6 01       	movw	r22, r12
    2c06:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2c0a:	2d 81       	ldd	r18, Y+5	; 0x05
    2c0c:	3e 81       	ldd	r19, Y+6	; 0x06
    2c0e:	4f 81       	ldd	r20, Y+7	; 0x07
    2c10:	58 85       	ldd	r21, Y+8	; 0x08
    2c12:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2c16:	6b 01       	movw	r12, r22
    2c18:	7c 01       	movw	r14, r24
    2c1a:	2e e2       	ldi	r18, 0x2E	; 46
    2c1c:	3f e2       	ldi	r19, 0x2F	; 47
    2c1e:	4b e1       	ldi	r20, 0x1B	; 27
    2c20:	5c e4       	ldi	r21, 0x4C	; 76
    2c22:	c5 01       	movw	r24, r10
    2c24:	b4 01       	movw	r22, r8
    2c26:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2c2a:	4b 01       	movw	r8, r22
    2c2c:	5c 01       	movw	r10, r24
    2c2e:	2b e3       	ldi	r18, 0x3B	; 59
    2c30:	35 e2       	ldi	r19, 0x25	; 37
    2c32:	4a e1       	ldi	r20, 0x1A	; 26
    2c34:	5c e4       	ldi	r21, 0x4C	; 76
    2c36:	69 89       	ldd	r22, Y+17	; 0x11
    2c38:	7a 89       	ldd	r23, Y+18	; 0x12
    2c3a:	8b 89       	ldd	r24, Y+19	; 0x13
    2c3c:	9c 89       	ldd	r25, Y+20	; 0x14
    2c3e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2c42:	9b 01       	movw	r18, r22
    2c44:	ac 01       	movw	r20, r24
    2c46:	c5 01       	movw	r24, r10
    2c48:	b4 01       	movw	r22, r8
    2c4a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2c4e:	2d 89       	ldd	r18, Y+21	; 0x15
    2c50:	3e 89       	ldd	r19, Y+22	; 0x16
    2c52:	4f 89       	ldd	r20, Y+23	; 0x17
    2c54:	58 8d       	ldd	r21, Y+24	; 0x18
    2c56:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2c5a:	9b 01       	movw	r18, r22
    2c5c:	ac 01       	movw	r20, r24
    2c5e:	c7 01       	movw	r24, r14
    2c60:	b6 01       	movw	r22, r12
    2c62:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2c66:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    2c6a:	4b 01       	movw	r8, r22
    2c6c:	5c 01       	movw	r10, r24
    2c6e:	a3 01       	movw	r20, r6
    2c70:	92 01       	movw	r18, r4
    2c72:	6d 81       	ldd	r22, Y+5	; 0x05
    2c74:	7e 81       	ldd	r23, Y+6	; 0x06
    2c76:	8f 81       	ldd	r24, Y+7	; 0x07
    2c78:	98 85       	ldd	r25, Y+8	; 0x08
    2c7a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2c7e:	a5 01       	movw	r20, r10
    2c80:	94 01       	movw	r18, r8
    2c82:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2c86:	23 96       	adiw	r28, 0x03	; 3
    2c88:	6c af       	std	Y+60, r22	; 0x3c
    2c8a:	7d af       	std	Y+61, r23	; 0x3d
    2c8c:	8e af       	std	Y+62, r24	; 0x3e
    2c8e:	9f af       	std	Y+63, r25	; 0x3f
    2c90:	23 97       	sbiw	r28, 0x03	; 3
    2c92:	20 e8       	ldi	r18, 0x80	; 128
    2c94:	39 ef       	ldi	r19, 0xF9	; 249
    2c96:	44 e8       	ldi	r20, 0x84	; 132
    2c98:	58 e4       	ldi	r21, 0x48	; 72
    2c9a:	69 81       	ldd	r22, Y+1	; 0x01
    2c9c:	7a 81       	ldd	r23, Y+2	; 0x02
    2c9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2ca0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ca2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2ca6:	29 85       	ldd	r18, Y+9	; 0x09
    2ca8:	3a 85       	ldd	r19, Y+10	; 0x0a
    2caa:	4b 85       	ldd	r20, Y+11	; 0x0b
    2cac:	5c 85       	ldd	r21, Y+12	; 0x0c
    2cae:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2cb2:	6b 01       	movw	r12, r22
    2cb4:	7c 01       	movw	r14, r24
    2cb6:	a5 01       	movw	r20, r10
    2cb8:	94 01       	movw	r18, r8
    2cba:	c3 01       	movw	r24, r6
    2cbc:	b2 01       	movw	r22, r4
    2cbe:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2cc2:	9b 01       	movw	r18, r22
    2cc4:	ac 01       	movw	r20, r24
    2cc6:	c7 01       	movw	r24, r14
    2cc8:	b6 01       	movw	r22, r12
    2cca:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2cce:	27 96       	adiw	r28, 0x07	; 7
    2cd0:	6c af       	std	Y+60, r22	; 0x3c
    2cd2:	7d af       	std	Y+61, r23	; 0x3d
    2cd4:	8e af       	std	Y+62, r24	; 0x3e
    2cd6:	9f af       	std	Y+63, r25	; 0x3f
    2cd8:	27 97       	sbiw	r28, 0x07	; 7
    2cda:	23 96       	adiw	r28, 0x03	; 3
    2cdc:	2c ad       	ldd	r18, Y+60	; 0x3c
    2cde:	3d ad       	ldd	r19, Y+61	; 0x3d
    2ce0:	4e ad       	ldd	r20, Y+62	; 0x3e
    2ce2:	5f ad       	ldd	r21, Y+63	; 0x3f
    2ce4:	23 97       	sbiw	r28, 0x03	; 3
    2ce6:	69 81       	ldd	r22, Y+1	; 0x01
    2ce8:	7a 81       	ldd	r23, Y+2	; 0x02
    2cea:	8b 81       	ldd	r24, Y+3	; 0x03
    2cec:	9c 81       	ldd	r25, Y+4	; 0x04
    2cee:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2cf2:	6b 01       	movw	r12, r22
    2cf4:	7c 01       	movw	r14, r24
    2cf6:	27 96       	adiw	r28, 0x07	; 7
    2cf8:	2c ad       	ldd	r18, Y+60	; 0x3c
    2cfa:	3d ad       	ldd	r19, Y+61	; 0x3d
    2cfc:	4e ad       	ldd	r20, Y+62	; 0x3e
    2cfe:	5f ad       	ldd	r21, Y+63	; 0x3f
    2d00:	27 97       	sbiw	r28, 0x07	; 7
    2d02:	69 85       	ldd	r22, Y+9	; 0x09
    2d04:	7a 85       	ldd	r23, Y+10	; 0x0a
    2d06:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d08:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d0a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2d0e:	9b 01       	movw	r18, r22
    2d10:	ac 01       	movw	r20, r24
    2d12:	c7 01       	movw	r24, r14
    2d14:	b6 01       	movw	r22, r12
    2d16:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2d1a:	69 8f       	std	Y+25, r22	; 0x19
    2d1c:	7a 8f       	std	Y+26, r23	; 0x1a
    2d1e:	8b 8f       	std	Y+27, r24	; 0x1b
    2d20:	9c 8f       	std	Y+28, r25	; 0x1c
    2d22:	23 96       	adiw	r28, 0x03	; 3
    2d24:	2c ad       	ldd	r18, Y+60	; 0x3c
    2d26:	3d ad       	ldd	r19, Y+61	; 0x3d
    2d28:	4e ad       	ldd	r20, Y+62	; 0x3e
    2d2a:	5f ad       	ldd	r21, Y+63	; 0x3f
    2d2c:	23 97       	sbiw	r28, 0x03	; 3
    2d2e:	69 85       	ldd	r22, Y+9	; 0x09
    2d30:	7a 85       	ldd	r23, Y+10	; 0x0a
    2d32:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d34:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d36:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2d3a:	6b 01       	movw	r12, r22
    2d3c:	7c 01       	movw	r14, r24
    2d3e:	27 96       	adiw	r28, 0x07	; 7
    2d40:	2c ad       	ldd	r18, Y+60	; 0x3c
    2d42:	3d ad       	ldd	r19, Y+61	; 0x3d
    2d44:	4e ad       	ldd	r20, Y+62	; 0x3e
    2d46:	5f ad       	ldd	r21, Y+63	; 0x3f
    2d48:	27 97       	sbiw	r28, 0x07	; 7
    2d4a:	69 81       	ldd	r22, Y+1	; 0x01
    2d4c:	7a 81       	ldd	r23, Y+2	; 0x02
    2d4e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d50:	9c 81       	ldd	r25, Y+4	; 0x04
    2d52:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2d56:	9b 01       	movw	r18, r22
    2d58:	ac 01       	movw	r20, r24
    2d5a:	c7 01       	movw	r24, r14
    2d5c:	b6 01       	movw	r22, r12
    2d5e:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2d62:	6d 8b       	std	Y+21, r22	; 0x15
    2d64:	7e 8b       	std	Y+22, r23	; 0x16
    2d66:	8f 8b       	std	Y+23, r24	; 0x17
    2d68:	98 8f       	std	Y+24, r25	; 0x18
    2d6a:	01 e5       	ldi	r16, 0x51	; 81
    2d6c:	13 e0       	ldi	r17, 0x03	; 3
    2d6e:	29 8d       	ldd	r18, Y+25	; 0x19
    2d70:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2d72:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2d74:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2d76:	ca 01       	movw	r24, r20
    2d78:	b9 01       	movw	r22, r18
    2d7a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2d7e:	d8 01       	movw	r26, r16
    2d80:	14 96       	adiw	r26, 0x04	; 4
    2d82:	6d 93       	st	X+, r22
    2d84:	7d 93       	st	X+, r23
    2d86:	8d 93       	st	X+, r24
    2d88:	9c 93       	st	X, r25
    2d8a:	17 97       	sbiw	r26, 0x07	; 7
    2d8c:	2d 89       	ldd	r18, Y+21	; 0x15
    2d8e:	3e 89       	ldd	r19, Y+22	; 0x16
    2d90:	4f 89       	ldd	r20, Y+23	; 0x17
    2d92:	58 8d       	ldd	r21, Y+24	; 0x18
    2d94:	ca 01       	movw	r24, r20
    2d96:	b9 01       	movw	r22, r18
    2d98:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2d9c:	f8 01       	movw	r30, r16
    2d9e:	60 87       	std	Z+8, r22	; 0x08
    2da0:	71 87       	std	Z+9, r23	; 0x09
    2da2:	82 87       	std	Z+10, r24	; 0x0a
    2da4:	93 87       	std	Z+11, r25	; 0x0b
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	30 e0       	ldi	r19, 0x00	; 0
    2daa:	40 e9       	ldi	r20, 0x90	; 144
    2dac:	50 e4       	ldi	r21, 0x40	; 64
    2dae:	69 8d       	ldd	r22, Y+25	; 0x19
    2db0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2db2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2db4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2db6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2dba:	29 8d       	ldd	r18, Y+25	; 0x19
    2dbc:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2dbe:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2dc0:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2dc2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2dc6:	20 e0       	ldi	r18, 0x00	; 0
    2dc8:	30 e0       	ldi	r19, 0x00	; 0
    2dca:	40 ec       	ldi	r20, 0xC0	; 192
    2dcc:	5f e3       	ldi	r21, 0x3F	; 63
    2dce:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2dd2:	d8 01       	movw	r26, r16
    2dd4:	1c 96       	adiw	r26, 0x0c	; 12
    2dd6:	6d 93       	st	X+, r22
    2dd8:	7d 93       	st	X+, r23
    2dda:	8d 93       	st	X+, r24
    2ddc:	9c 93       	st	X, r25
    2dde:	1f 97       	sbiw	r26, 0x0f	; 15
    2de0:	21 ee       	ldi	r18, 0xE1	; 225
    2de2:	36 e4       	ldi	r19, 0x46	; 70
    2de4:	46 ea       	ldi	r20, 0xA6	; 166
    2de6:	50 e4       	ldi	r21, 0x40	; 64
    2de8:	6d 89       	ldd	r22, Y+21	; 0x15
    2dea:	7e 89       	ldd	r23, Y+22	; 0x16
    2dec:	8f 89       	ldd	r24, Y+23	; 0x17
    2dee:	98 8d       	ldd	r25, Y+24	; 0x18
    2df0:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2df4:	29 8d       	ldd	r18, Y+25	; 0x19
    2df6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2df8:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2dfa:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2dfc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e00:	f8 01       	movw	r30, r16
    2e02:	60 8b       	std	Z+16, r22	; 0x10
    2e04:	71 8b       	std	Z+17, r23	; 0x11
    2e06:	82 8b       	std	Z+18, r24	; 0x12
    2e08:	93 8b       	std	Z+19, r25	; 0x13
    2e0a:	09 e8       	ldi	r16, 0x89	; 137
    2e0c:	12 e0       	ldi	r17, 0x02	; 2
    2e0e:	8d 89       	ldd	r24, Y+21	; 0x15
    2e10:	9e 89       	ldd	r25, Y+22	; 0x16
    2e12:	af 89       	ldd	r26, Y+23	; 0x17
    2e14:	b8 8d       	ldd	r27, Y+24	; 0x18
    2e16:	b0 58       	subi	r27, 0x80	; 128
    2e18:	f8 01       	movw	r30, r16
    2e1a:	84 83       	std	Z+4, r24	; 0x04
    2e1c:	95 83       	std	Z+5, r25	; 0x05
    2e1e:	a6 83       	std	Z+6, r26	; 0x06
    2e20:	b7 83       	std	Z+7, r27	; 0x07
    2e22:	89 8d       	ldd	r24, Y+25	; 0x19
    2e24:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2e26:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2e28:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2e2a:	80 87       	std	Z+8, r24	; 0x08
    2e2c:	91 87       	std	Z+9, r25	; 0x09
    2e2e:	a2 87       	std	Z+10, r26	; 0x0a
    2e30:	b3 87       	std	Z+11, r27	; 0x0b
    2e32:	20 e0       	ldi	r18, 0x00	; 0
    2e34:	30 e0       	ldi	r19, 0x00	; 0
    2e36:	40 e4       	ldi	r20, 0x40	; 64
    2e38:	50 ec       	ldi	r21, 0xC0	; 192
    2e3a:	6d 89       	ldd	r22, Y+21	; 0x15
    2e3c:	7e 89       	ldd	r23, Y+22	; 0x16
    2e3e:	8f 89       	ldd	r24, Y+23	; 0x17
    2e40:	98 8d       	ldd	r25, Y+24	; 0x18
    2e42:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e46:	29 8d       	ldd	r18, Y+25	; 0x19
    2e48:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2e4a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2e4c:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2e4e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e52:	d8 01       	movw	r26, r16
    2e54:	1c 96       	adiw	r26, 0x0c	; 12
    2e56:	6d 93       	st	X+, r22
    2e58:	7d 93       	st	X+, r23
    2e5a:	8d 93       	st	X+, r24
    2e5c:	9c 93       	st	X, r25
    2e5e:	1f 97       	sbiw	r26, 0x0f	; 15
    2e60:	29 8d       	ldd	r18, Y+25	; 0x19
    2e62:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2e64:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2e66:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2e68:	ca 01       	movw	r24, r20
    2e6a:	b9 01       	movw	r22, r18
    2e6c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e70:	6b 01       	movw	r12, r22
    2e72:	7c 01       	movw	r14, r24
    2e74:	2d 89       	ldd	r18, Y+21	; 0x15
    2e76:	3e 89       	ldd	r19, Y+22	; 0x16
    2e78:	4f 89       	ldd	r20, Y+23	; 0x17
    2e7a:	58 8d       	ldd	r21, Y+24	; 0x18
    2e7c:	ca 01       	movw	r24, r20
    2e7e:	b9 01       	movw	r22, r18
    2e80:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e84:	9b 01       	movw	r18, r22
    2e86:	ac 01       	movw	r20, r24
    2e88:	c7 01       	movw	r24, r14
    2e8a:	b6 01       	movw	r22, r12
    2e8c:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2e90:	27 ed       	ldi	r18, 0xD7	; 215
    2e92:	33 eb       	ldi	r19, 0xB3	; 179
    2e94:	4d ed       	ldi	r20, 0xDD	; 221
    2e96:	5f e3       	ldi	r21, 0x3F	; 63
    2e98:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2e9c:	f8 01       	movw	r30, r16
    2e9e:	60 8b       	std	Z+16, r22	; 0x10
    2ea0:	71 8b       	std	Z+17, r23	; 0x11
    2ea2:	82 8b       	std	Z+18, r24	; 0x12
    2ea4:	93 8b       	std	Z+19, r25	; 0x13
    2ea6:	a5 01       	movw	r20, r10
    2ea8:	94 01       	movw	r18, r8
    2eaa:	6a e9       	ldi	r22, 0x9A	; 154
    2eac:	79 e1       	ldi	r23, 0x19	; 25
    2eae:	87 ec       	ldi	r24, 0xC7	; 199
    2eb0:	95 e4       	ldi	r25, 0x45	; 69
    2eb2:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2eb6:	6b af       	std	Y+59, r22	; 0x3b
    2eb8:	7c af       	std	Y+60, r23	; 0x3c
    2eba:	8d af       	std	Y+61, r24	; 0x3d
    2ebc:	9e af       	std	Y+62, r25	; 0x3e
    2ebe:	23 2d       	mov	r18, r3
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	a9 01       	movw	r20, r18
    2ec4:	4d 5f       	subi	r20, 0xFD	; 253
    2ec6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ec8:	24 9f       	mul	r18, r20
    2eca:	c0 01       	movw	r24, r0
    2ecc:	25 9f       	mul	r18, r21
    2ece:	90 0d       	add	r25, r0
    2ed0:	34 9f       	mul	r19, r20
    2ed2:	90 0d       	add	r25, r0
    2ed4:	11 24       	eor	r1, r1
    2ed6:	99 23       	and	r25, r25
    2ed8:	0c f4       	brge	.+2      	; 0x2edc <igrf+0x468>
    2eda:	01 96       	adiw	r24, 0x01	; 1
    2edc:	95 95       	asr	r25
    2ede:	87 95       	ror	r24
    2ee0:	8e ab       	std	Y+54, r24	; 0x36
    2ee2:	88 23       	and	r24, r24
    2ee4:	09 f4       	brne	.+2      	; 0x2ee8 <igrf+0x474>
    2ee6:	f6 c3       	rjmp	.+2028   	; 0x36d4 <igrf+0xc60>
    2ee8:	41 2c       	mov	r4, r1
    2eea:	21 2c       	mov	r2, r1
    2eec:	33 24       	eor	r3, r3
    2eee:	33 94       	inc	r3
    2ef0:	f1 e0       	ldi	r31, 0x01	; 1
    2ef2:	f9 8b       	std	Y+17, r31	; 0x11
    2ef4:	19 a6       	std	Y+41, r1	; 0x29
    2ef6:	1a a6       	std	Y+42, r1	; 0x2a
    2ef8:	1b a6       	std	Y+43, r1	; 0x2b
    2efa:	1c a6       	std	Y+44, r1	; 0x2c
    2efc:	1d a2       	std	Y+37, r1	; 0x25
    2efe:	1e a2       	std	Y+38, r1	; 0x26
    2f00:	1f a2       	std	Y+39, r1	; 0x27
    2f02:	18 a6       	std	Y+40, r1	; 0x28
    2f04:	1f aa       	std	Y+55, r1	; 0x37
    2f06:	18 ae       	std	Y+56, r1	; 0x38
    2f08:	19 ae       	std	Y+57, r1	; 0x39
    2f0a:	1a ae       	std	Y+58, r1	; 0x3a
    2f0c:	19 a2       	std	Y+33, r1	; 0x21
    2f0e:	1a a2       	std	Y+34, r1	; 0x22
    2f10:	1b a2       	std	Y+35, r1	; 0x23
    2f12:	1c a2       	std	Y+36, r1	; 0x24
    2f14:	29 86       	std	Y+9, r2	; 0x09
    2f16:	4d a6       	std	Y+45, r4	; 0x2d
    2f18:	23 2c       	mov	r2, r3
    2f1a:	29 85       	ldd	r18, Y+9	; 0x09
    2f1c:	22 15       	cp	r18, r2
    2f1e:	d8 f4       	brcc	.+54     	; 0x2f56 <igrf+0x4e2>
    2f20:	2f 5f       	subi	r18, 0xFF	; 255
    2f22:	29 87       	std	Y+9, r18	; 0x09
    2f24:	62 2f       	mov	r22, r18
    2f26:	70 e0       	ldi	r23, 0x00	; 0
    2f28:	6e 5f       	subi	r22, 0xFE	; 254
    2f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2c:	07 2e       	mov	r0, r23
    2f2e:	00 0c       	add	r0, r0
    2f30:	88 0b       	sbc	r24, r24
    2f32:	99 0b       	sbc	r25, r25
    2f34:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    2f38:	9b 01       	movw	r18, r22
    2f3a:	ac 01       	movw	r20, r24
    2f3c:	6b ad       	ldd	r22, Y+59	; 0x3b
    2f3e:	7c ad       	ldd	r23, Y+60	; 0x3c
    2f40:	8d ad       	ldd	r24, Y+61	; 0x3d
    2f42:	9e ad       	ldd	r25, Y+62	; 0x3e
    2f44:	0e 94 80 35 	call	0x6b00	; 0x6b00 <pow>
    2f48:	69 a7       	std	Y+41, r22	; 0x29
    2f4a:	7a a7       	std	Y+42, r23	; 0x2a
    2f4c:	8b a7       	std	Y+43, r24	; 0x2b
    2f4e:	9c a7       	std	Y+44, r25	; 0x2c
    2f50:	39 85       	ldd	r19, Y+9	; 0x09
    2f52:	3d a7       	std	Y+45, r19	; 0x2d
    2f54:	21 2c       	mov	r2, r1
    2f56:	44 e0       	ldi	r20, 0x04	; 4
    2f58:	43 15       	cp	r20, r3
    2f5a:	08 f0       	brcs	.+2      	; 0x2f5e <igrf+0x4ea>
    2f5c:	1c c2       	rjmp	.+1080   	; 0x3396 <igrf+0x922>
    2f5e:	89 85       	ldd	r24, Y+9	; 0x09
    2f60:	28 12       	cpse	r2, r24
    2f62:	01 c1       	rjmp	.+514    	; 0x3166 <igrf+0x6f2>
    2f64:	42 2c       	mov	r4, r2
    2f66:	51 2c       	mov	r5, r1
    2f68:	b2 01       	movw	r22, r4
    2f6a:	05 2c       	mov	r0, r5
    2f6c:	00 0c       	add	r0, r0
    2f6e:	88 0b       	sbc	r24, r24
    2f70:	99 0b       	sbc	r25, r25
    2f72:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    2f76:	6b 01       	movw	r12, r22
    2f78:	7c 01       	movw	r14, r24
    2f7a:	9b 01       	movw	r18, r22
    2f7c:	ac 01       	movw	r20, r24
    2f7e:	60 e0       	ldi	r22, 0x00	; 0
    2f80:	70 e0       	ldi	r23, 0x00	; 0
    2f82:	80 e0       	ldi	r24, 0x00	; 0
    2f84:	9f e3       	ldi	r25, 0x3F	; 63
    2f86:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2f8a:	4b 01       	movw	r8, r22
    2f8c:	5c 01       	movw	r10, r24
    2f8e:	a5 01       	movw	r20, r10
    2f90:	94 01       	movw	r18, r8
    2f92:	60 e0       	ldi	r22, 0x00	; 0
    2f94:	70 e0       	ldi	r23, 0x00	; 0
    2f96:	80 e8       	ldi	r24, 0x80	; 128
    2f98:	9f e3       	ldi	r25, 0x3F	; 63
    2f9a:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    2f9e:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    2fa2:	69 83       	std	Y+1, r22	; 0x01
    2fa4:	7a 83       	std	Y+2, r23	; 0x02
    2fa6:	8b 83       	std	Y+3, r24	; 0x03
    2fa8:	9c 83       	std	Y+4, r25	; 0x04
    2faa:	63 2c       	mov	r6, r3
    2fac:	71 2c       	mov	r7, r1
    2fae:	43 01       	movw	r8, r6
    2fb0:	84 18       	sub	r8, r4
    2fb2:	95 08       	sbc	r9, r5
    2fb4:	91 e0       	ldi	r25, 0x01	; 1
    2fb6:	89 1a       	sub	r8, r25
    2fb8:	91 08       	sbc	r9, r1
    2fba:	66 0c       	add	r6, r6
    2fbc:	77 1c       	adc	r7, r7
    2fbe:	66 0c       	add	r6, r6
    2fc0:	77 1c       	adc	r7, r7
    2fc2:	d3 01       	movw	r26, r6
    2fc4:	af 5a       	subi	r26, 0xAF	; 175
    2fc6:	bc 4f       	sbci	r27, 0xFC	; 252
    2fc8:	5d 01       	movw	r10, r26
    2fca:	a7 01       	movw	r20, r14
    2fcc:	96 01       	movw	r18, r12
    2fce:	60 e0       	ldi	r22, 0x00	; 0
    2fd0:	70 e0       	ldi	r23, 0x00	; 0
    2fd2:	80 e8       	ldi	r24, 0x80	; 128
    2fd4:	9f e3       	ldi	r25, 0x3F	; 63
    2fd6:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    2fda:	20 e0       	ldi	r18, 0x00	; 0
    2fdc:	30 e0       	ldi	r19, 0x00	; 0
    2fde:	40 e8       	ldi	r20, 0x80	; 128
    2fe0:	5f e3       	ldi	r21, 0x3F	; 63
    2fe2:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    2fe6:	29 81       	ldd	r18, Y+1	; 0x01
    2fe8:	3a 81       	ldd	r19, Y+2	; 0x02
    2fea:	4b 81       	ldd	r20, Y+3	; 0x03
    2fec:	5c 81       	ldd	r21, Y+4	; 0x04
    2fee:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2ff2:	2d 89       	ldd	r18, Y+21	; 0x15
    2ff4:	3e 89       	ldd	r19, Y+22	; 0x16
    2ff6:	4f 89       	ldd	r20, Y+23	; 0x17
    2ff8:	58 8d       	ldd	r21, Y+24	; 0x18
    2ffa:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    2ffe:	88 0c       	add	r8, r8
    3000:	99 1c       	adc	r9, r9
    3002:	88 0c       	add	r8, r8
    3004:	99 1c       	adc	r9, r9
    3006:	84 01       	movw	r16, r8
    3008:	0f 5a       	subi	r16, 0xAF	; 175
    300a:	1c 4f       	sbci	r17, 0xFC	; 252
    300c:	f8 01       	movw	r30, r16
    300e:	20 81       	ld	r18, Z
    3010:	31 81       	ldd	r19, Z+1	; 0x01
    3012:	42 81       	ldd	r20, Z+2	; 0x02
    3014:	53 81       	ldd	r21, Z+3	; 0x03
    3016:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    301a:	d5 01       	movw	r26, r10
    301c:	6d 93       	st	X+, r22
    301e:	7d 93       	st	X+, r23
    3020:	8d 93       	st	X+, r24
    3022:	9c 93       	st	X, r25
    3024:	13 97       	sbiw	r26, 0x03	; 3
    3026:	f3 01       	movw	r30, r6
    3028:	e7 57       	subi	r30, 0x77	; 119
    302a:	fd 4f       	sbci	r31, 0xFD	; 253
    302c:	5f 01       	movw	r10, r30
    302e:	f4 01       	movw	r30, r8
    3030:	e7 57       	subi	r30, 0x77	; 119
    3032:	fd 4f       	sbci	r31, 0xFD	; 253
    3034:	20 81       	ld	r18, Z
    3036:	31 81       	ldd	r19, Z+1	; 0x01
    3038:	42 81       	ldd	r20, Z+2	; 0x02
    303a:	53 81       	ldd	r21, Z+3	; 0x03
    303c:	6d 89       	ldd	r22, Y+21	; 0x15
    303e:	7e 89       	ldd	r23, Y+22	; 0x16
    3040:	8f 89       	ldd	r24, Y+23	; 0x17
    3042:	98 8d       	ldd	r25, Y+24	; 0x18
    3044:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3048:	3b 01       	movw	r6, r22
    304a:	4c 01       	movw	r8, r24
    304c:	d8 01       	movw	r26, r16
    304e:	2d 91       	ld	r18, X+
    3050:	3d 91       	ld	r19, X+
    3052:	4d 91       	ld	r20, X+
    3054:	5c 91       	ld	r21, X
    3056:	69 8d       	ldd	r22, Y+25	; 0x19
    3058:	7a 8d       	ldd	r23, Y+26	; 0x1a
    305a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    305c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    305e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3062:	a7 01       	movw	r20, r14
    3064:	96 01       	movw	r18, r12
    3066:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    306a:	9b 01       	movw	r18, r22
    306c:	ac 01       	movw	r20, r24
    306e:	c4 01       	movw	r24, r8
    3070:	b3 01       	movw	r22, r6
    3072:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3076:	29 81       	ldd	r18, Y+1	; 0x01
    3078:	3a 81       	ldd	r19, Y+2	; 0x02
    307a:	4b 81       	ldd	r20, Y+3	; 0x03
    307c:	5c 81       	ldd	r21, Y+4	; 0x04
    307e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3082:	f5 01       	movw	r30, r10
    3084:	60 83       	st	Z, r22
    3086:	71 83       	std	Z+1, r23	; 0x01
    3088:	82 83       	std	Z+2, r24	; 0x02
    308a:	93 83       	std	Z+3, r25	; 0x03
    308c:	82 01       	movw	r16, r4
    308e:	01 50       	subi	r16, 0x01	; 1
    3090:	11 09       	sbc	r17, r1
    3092:	c0 90 51 02 	lds	r12, 0x0251
    3096:	d0 90 52 02 	lds	r13, 0x0252
    309a:	e0 90 53 02 	lds	r14, 0x0253
    309e:	f0 90 54 02 	lds	r15, 0x0254
    30a2:	00 0f       	add	r16, r16
    30a4:	11 1f       	adc	r17, r17
    30a6:	00 0f       	add	r16, r16
    30a8:	11 1f       	adc	r17, r17
    30aa:	f8 01       	movw	r30, r16
    30ac:	e3 5b       	subi	r30, 0xB3	; 179
    30ae:	fd 4f       	sbci	r31, 0xFD	; 253
    30b0:	80 80       	ld	r8, Z
    30b2:	91 80       	ldd	r9, Z+1	; 0x01
    30b4:	a2 80       	ldd	r10, Z+2	; 0x02
    30b6:	b3 80       	ldd	r11, Z+3	; 0x03
    30b8:	44 0c       	add	r4, r4
    30ba:	55 1c       	adc	r5, r5
    30bc:	44 0c       	add	r4, r4
    30be:	55 1c       	adc	r5, r5
    30c0:	92 01       	movw	r18, r4
    30c2:	2f 5e       	subi	r18, 0xEF	; 239
    30c4:	3d 4f       	sbci	r19, 0xFD	; 253
    30c6:	39 01       	movw	r6, r18
    30c8:	0f 5e       	subi	r16, 0xEF	; 239
    30ca:	1d 4f       	sbci	r17, 0xFD	; 253
    30cc:	d8 01       	movw	r26, r16
    30ce:	2d 91       	ld	r18, X+
    30d0:	3d 91       	ld	r19, X+
    30d2:	4d 91       	ld	r20, X+
    30d4:	5c 91       	ld	r21, X
    30d6:	c7 01       	movw	r24, r14
    30d8:	b6 01       	movw	r22, r12
    30da:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    30de:	69 83       	std	Y+1, r22	; 0x01
    30e0:	7a 83       	std	Y+2, r23	; 0x02
    30e2:	8b 83       	std	Y+3, r24	; 0x03
    30e4:	9c 83       	std	Y+4, r25	; 0x04
    30e6:	20 91 15 02 	lds	r18, 0x0215
    30ea:	30 91 16 02 	lds	r19, 0x0216
    30ee:	40 91 17 02 	lds	r20, 0x0217
    30f2:	50 91 18 02 	lds	r21, 0x0218
    30f6:	c5 01       	movw	r24, r10
    30f8:	b4 01       	movw	r22, r8
    30fa:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    30fe:	9b 01       	movw	r18, r22
    3100:	ac 01       	movw	r20, r24
    3102:	69 81       	ldd	r22, Y+1	; 0x01
    3104:	7a 81       	ldd	r23, Y+2	; 0x02
    3106:	8b 81       	ldd	r24, Y+3	; 0x03
    3108:	9c 81       	ldd	r25, Y+4	; 0x04
    310a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    310e:	f3 01       	movw	r30, r6
    3110:	60 83       	st	Z, r22
    3112:	71 83       	std	Z+1, r23	; 0x01
    3114:	82 83       	std	Z+2, r24	; 0x02
    3116:	93 83       	std	Z+3, r25	; 0x03
    3118:	92 01       	movw	r18, r4
    311a:	23 5b       	subi	r18, 0xB3	; 179
    311c:	3d 4f       	sbci	r19, 0xFD	; 253
    311e:	29 01       	movw	r4, r18
    3120:	a5 01       	movw	r20, r10
    3122:	94 01       	movw	r18, r8
    3124:	c7 01       	movw	r24, r14
    3126:	b6 01       	movw	r22, r12
    3128:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    312c:	6b 01       	movw	r12, r22
    312e:	7c 01       	movw	r14, r24
    3130:	20 91 15 02 	lds	r18, 0x0215
    3134:	30 91 16 02 	lds	r19, 0x0216
    3138:	40 91 17 02 	lds	r20, 0x0217
    313c:	50 91 18 02 	lds	r21, 0x0218
    3140:	d8 01       	movw	r26, r16
    3142:	6d 91       	ld	r22, X+
    3144:	7d 91       	ld	r23, X+
    3146:	8d 91       	ld	r24, X+
    3148:	9c 91       	ld	r25, X
    314a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    314e:	9b 01       	movw	r18, r22
    3150:	ac 01       	movw	r20, r24
    3152:	c7 01       	movw	r24, r14
    3154:	b6 01       	movw	r22, r12
    3156:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    315a:	f2 01       	movw	r30, r4
    315c:	60 83       	st	Z, r22
    315e:	71 83       	std	Z+1, r23	; 0x01
    3160:	82 83       	std	Z+2, r24	; 0x02
    3162:	93 83       	std	Z+3, r25	; 0x03
    3164:	18 c1       	rjmp	.+560    	; 0x3396 <igrf+0x922>
    3166:	fd a5       	ldd	r31, Y+45	; 0x2d
    3168:	0f 2f       	mov	r16, r31
    316a:	10 e0       	ldi	r17, 0x00	; 0
    316c:	22 9c       	mul	r2, r2
    316e:	60 01       	movw	r12, r0
    3170:	11 24       	eor	r1, r1
    3172:	00 9f       	mul	r16, r16
    3174:	40 01       	movw	r8, r0
    3176:	01 9f       	mul	r16, r17
    3178:	90 0c       	add	r9, r0
    317a:	90 0c       	add	r9, r0
    317c:	11 24       	eor	r1, r1
    317e:	8c 18       	sub	r8, r12
    3180:	9d 08       	sbc	r9, r13
    3182:	09 2c       	mov	r0, r9
    3184:	00 0c       	add	r0, r0
    3186:	aa 08       	sbc	r10, r10
    3188:	bb 08       	sbc	r11, r11
    318a:	c5 01       	movw	r24, r10
    318c:	b4 01       	movw	r22, r8
    318e:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    3192:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    3196:	4b 01       	movw	r8, r22
    3198:	5c 01       	movw	r10, r24
    319a:	b8 01       	movw	r22, r16
    319c:	11 0f       	add	r17, r17
    319e:	88 0b       	sbc	r24, r24
    31a0:	99 0b       	sbc	r25, r25
    31a2:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    31a6:	69 83       	std	Y+1, r22	; 0x01
    31a8:	7a 83       	std	Y+2, r23	; 0x02
    31aa:	8b 83       	std	Y+3, r24	; 0x03
    31ac:	9c 83       	std	Y+4, r25	; 0x04
    31ae:	20 e0       	ldi	r18, 0x00	; 0
    31b0:	30 e0       	ldi	r19, 0x00	; 0
    31b2:	40 e8       	ldi	r20, 0x80	; 128
    31b4:	5f e3       	ldi	r21, 0x3F	; 63
    31b6:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    31ba:	6d 83       	std	Y+5, r22	; 0x05
    31bc:	7e 83       	std	Y+6, r23	; 0x06
    31be:	8f 83       	std	Y+7, r24	; 0x07
    31c0:	98 87       	std	Y+8, r25	; 0x08
    31c2:	9b 01       	movw	r18, r22
    31c4:	ac 01       	movw	r20, r24
    31c6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    31ca:	2b 01       	movw	r4, r22
    31cc:	3c 01       	movw	r6, r24
    31ce:	0d 2c       	mov	r0, r13
    31d0:	00 0c       	add	r0, r0
    31d2:	ee 08       	sbc	r14, r14
    31d4:	ff 08       	sbc	r15, r15
    31d6:	c7 01       	movw	r24, r14
    31d8:	b6 01       	movw	r22, r12
    31da:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    31de:	9b 01       	movw	r18, r22
    31e0:	ac 01       	movw	r20, r24
    31e2:	c3 01       	movw	r24, r6
    31e4:	b2 01       	movw	r22, r4
    31e6:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    31ea:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    31ee:	a5 01       	movw	r20, r10
    31f0:	94 01       	movw	r18, r8
    31f2:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    31f6:	6b 01       	movw	r12, r22
    31f8:	7c 01       	movw	r14, r24
    31fa:	29 81       	ldd	r18, Y+1	; 0x01
    31fc:	3a 81       	ldd	r19, Y+2	; 0x02
    31fe:	4b 81       	ldd	r20, Y+3	; 0x03
    3200:	5c 81       	ldd	r21, Y+4	; 0x04
    3202:	ca 01       	movw	r24, r20
    3204:	b9 01       	movw	r22, r18
    3206:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    320a:	20 e0       	ldi	r18, 0x00	; 0
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	40 e8       	ldi	r20, 0x80	; 128
    3210:	5f e3       	ldi	r21, 0x3F	; 63
    3212:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3216:	a5 01       	movw	r20, r10
    3218:	94 01       	movw	r18, r8
    321a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    321e:	6d 87       	std	Y+13, r22	; 0x0d
    3220:	7e 87       	std	Y+14, r23	; 0x0e
    3222:	8f 87       	std	Y+15, r24	; 0x0f
    3224:	98 8b       	std	Y+16, r25	; 0x10
    3226:	83 2d       	mov	r24, r3
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	49 85       	ldd	r20, Y+9	; 0x09
    322c:	24 2f       	mov	r18, r20
    322e:	30 e0       	ldi	r19, 0x00	; 0
    3230:	4c 01       	movw	r8, r24
    3232:	82 1a       	sub	r8, r18
    3234:	93 0a       	sbc	r9, r19
    3236:	84 01       	movw	r16, r8
    3238:	02 1b       	sub	r16, r18
    323a:	13 0b       	sbc	r17, r19
    323c:	0f 5f       	subi	r16, 0xFF	; 255
    323e:	1f 4f       	sbci	r17, 0xFF	; 255
    3240:	3c 01       	movw	r6, r24
    3242:	66 0c       	add	r6, r6
    3244:	77 1c       	adc	r7, r7
    3246:	66 0c       	add	r6, r6
    3248:	77 1c       	adc	r7, r7
    324a:	c3 01       	movw	r24, r6
    324c:	8f 5a       	subi	r24, 0xAF	; 175
    324e:	9c 4f       	sbci	r25, 0xFC	; 252
    3250:	5c 01       	movw	r10, r24
    3252:	20 e0       	ldi	r18, 0x00	; 0
    3254:	30 e0       	ldi	r19, 0x00	; 0
    3256:	40 e8       	ldi	r20, 0x80	; 128
    3258:	5f e3       	ldi	r21, 0x3F	; 63
    325a:	69 81       	ldd	r22, Y+1	; 0x01
    325c:	7a 81       	ldd	r23, Y+2	; 0x02
    325e:	8b 81       	ldd	r24, Y+3	; 0x03
    3260:	9c 81       	ldd	r25, Y+4	; 0x04
    3262:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3266:	6d 8f       	std	Y+29, r22	; 0x1d
    3268:	7e 8f       	std	Y+30, r23	; 0x1e
    326a:	8f 8f       	std	Y+31, r24	; 0x1f
    326c:	98 a3       	std	Y+32, r25	; 0x20
    326e:	29 8d       	ldd	r18, Y+25	; 0x19
    3270:	3a 8d       	ldd	r19, Y+26	; 0x1a
    3272:	4b 8d       	ldd	r20, Y+27	; 0x1b
    3274:	5c 8d       	ldd	r21, Y+28	; 0x1c
    3276:	6d 85       	ldd	r22, Y+13	; 0x0d
    3278:	7e 85       	ldd	r23, Y+14	; 0x0e
    327a:	8f 85       	ldd	r24, Y+15	; 0x0f
    327c:	98 89       	ldd	r25, Y+16	; 0x10
    327e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3282:	88 0c       	add	r8, r8
    3284:	99 1c       	adc	r9, r9
    3286:	88 0c       	add	r8, r8
    3288:	99 1c       	adc	r9, r9
    328a:	d4 01       	movw	r26, r8
    328c:	af 5a       	subi	r26, 0xAF	; 175
    328e:	bc 4f       	sbci	r27, 0xFC	; 252
    3290:	2d 01       	movw	r4, r26
    3292:	2d 91       	ld	r18, X+
    3294:	3d 91       	ld	r19, X+
    3296:	4d 91       	ld	r20, X+
    3298:	5c 91       	ld	r21, X
    329a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    329e:	29 81       	ldd	r18, Y+1	; 0x01
    32a0:	3a 81       	ldd	r19, Y+2	; 0x02
    32a2:	4b 81       	ldd	r20, Y+3	; 0x03
    32a4:	5c 81       	ldd	r21, Y+4	; 0x04
    32a6:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    32aa:	6a ab       	std	Y+50, r22	; 0x32
    32ac:	7b ab       	std	Y+51, r23	; 0x33
    32ae:	8c ab       	std	Y+52, r24	; 0x34
    32b0:	9d ab       	std	Y+53, r25	; 0x35
    32b2:	00 0f       	add	r16, r16
    32b4:	11 1f       	adc	r17, r17
    32b6:	00 0f       	add	r16, r16
    32b8:	11 1f       	adc	r17, r17
    32ba:	f8 01       	movw	r30, r16
    32bc:	ef 5a       	subi	r30, 0xAF	; 175
    32be:	fc 4f       	sbci	r31, 0xFC	; 252
    32c0:	20 81       	ld	r18, Z
    32c2:	31 81       	ldd	r19, Z+1	; 0x01
    32c4:	42 81       	ldd	r20, Z+2	; 0x02
    32c6:	53 81       	ldd	r21, Z+3	; 0x03
    32c8:	c7 01       	movw	r24, r14
    32ca:	b6 01       	movw	r22, r12
    32cc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    32d0:	2d 81       	ldd	r18, Y+5	; 0x05
    32d2:	3e 81       	ldd	r19, Y+6	; 0x06
    32d4:	4f 81       	ldd	r20, Y+7	; 0x07
    32d6:	58 85       	ldd	r21, Y+8	; 0x08
    32d8:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    32dc:	9b 01       	movw	r18, r22
    32de:	ac 01       	movw	r20, r24
    32e0:	6a a9       	ldd	r22, Y+50	; 0x32
    32e2:	7b a9       	ldd	r23, Y+51	; 0x33
    32e4:	8c a9       	ldd	r24, Y+52	; 0x34
    32e6:	9d a9       	ldd	r25, Y+53	; 0x35
    32e8:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    32ec:	9b 01       	movw	r18, r22
    32ee:	ac 01       	movw	r20, r24
    32f0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    32f2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    32f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    32f6:	98 a1       	ldd	r25, Y+32	; 0x20
    32f8:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    32fc:	f5 01       	movw	r30, r10
    32fe:	60 83       	st	Z, r22
    3300:	71 83       	std	Z+1, r23	; 0x01
    3302:	82 83       	std	Z+2, r24	; 0x02
    3304:	93 83       	std	Z+3, r25	; 0x03
    3306:	93 01       	movw	r18, r6
    3308:	27 57       	subi	r18, 0x77	; 119
    330a:	3d 4f       	sbci	r19, 0xFD	; 253
    330c:	39 01       	movw	r6, r18
    330e:	f4 01       	movw	r30, r8
    3310:	e7 57       	subi	r30, 0x77	; 119
    3312:	fd 4f       	sbci	r31, 0xFD	; 253
    3314:	20 81       	ld	r18, Z
    3316:	31 81       	ldd	r19, Z+1	; 0x01
    3318:	42 81       	ldd	r20, Z+2	; 0x02
    331a:	53 81       	ldd	r21, Z+3	; 0x03
    331c:	69 8d       	ldd	r22, Y+25	; 0x19
    331e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3320:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3322:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3324:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3328:	4b 01       	movw	r8, r22
    332a:	5c 01       	movw	r10, r24
    332c:	d2 01       	movw	r26, r4
    332e:	2d 91       	ld	r18, X+
    3330:	3d 91       	ld	r19, X+
    3332:	4d 91       	ld	r20, X+
    3334:	5c 91       	ld	r21, X
    3336:	6d 89       	ldd	r22, Y+21	; 0x15
    3338:	7e 89       	ldd	r23, Y+22	; 0x16
    333a:	8f 89       	ldd	r24, Y+23	; 0x17
    333c:	98 8d       	ldd	r25, Y+24	; 0x18
    333e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3342:	29 81       	ldd	r18, Y+1	; 0x01
    3344:	3a 81       	ldd	r19, Y+2	; 0x02
    3346:	4b 81       	ldd	r20, Y+3	; 0x03
    3348:	5c 81       	ldd	r21, Y+4	; 0x04
    334a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    334e:	9b 01       	movw	r18, r22
    3350:	ac 01       	movw	r20, r24
    3352:	c5 01       	movw	r24, r10
    3354:	b4 01       	movw	r22, r8
    3356:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    335a:	2d 85       	ldd	r18, Y+13	; 0x0d
    335c:	3e 85       	ldd	r19, Y+14	; 0x0e
    335e:	4f 85       	ldd	r20, Y+15	; 0x0f
    3360:	58 89       	ldd	r21, Y+16	; 0x10
    3362:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3366:	4b 01       	movw	r8, r22
    3368:	5c 01       	movw	r10, r24
    336a:	f8 01       	movw	r30, r16
    336c:	e7 57       	subi	r30, 0x77	; 119
    336e:	fd 4f       	sbci	r31, 0xFD	; 253
    3370:	20 81       	ld	r18, Z
    3372:	31 81       	ldd	r19, Z+1	; 0x01
    3374:	42 81       	ldd	r20, Z+2	; 0x02
    3376:	53 81       	ldd	r21, Z+3	; 0x03
    3378:	c7 01       	movw	r24, r14
    337a:	b6 01       	movw	r22, r12
    337c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3380:	9b 01       	movw	r18, r22
    3382:	ac 01       	movw	r20, r24
    3384:	c5 01       	movw	r24, r10
    3386:	b4 01       	movw	r22, r8
    3388:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    338c:	f3 01       	movw	r30, r6
    338e:	60 83       	st	Z, r22
    3390:	71 83       	std	Z+1, r23	; 0x01
    3392:	82 83       	std	Z+2, r24	; 0x02
    3394:	93 83       	std	Z+3, r25	; 0x03
    3396:	f9 89       	ldd	r31, Y+17	; 0x11
    3398:	0f 2f       	mov	r16, r31
    339a:	10 e0       	ldi	r17, 0x00	; 0
    339c:	c8 01       	movw	r24, r16
    339e:	88 0f       	add	r24, r24
    33a0:	99 1f       	adc	r25, r25
    33a2:	88 0f       	add	r24, r24
    33a4:	99 1f       	adc	r25, r25
    33a6:	fc 01       	movw	r30, r24
    33a8:	e4 54       	subi	r30, 0x44	; 68
    33aa:	fb 4f       	sbci	r31, 0xFB	; 251
    33ac:	c5 90       	lpm	r12, Z+
    33ae:	d5 90       	lpm	r13, Z+
    33b0:	e5 90       	lpm	r14, Z+
    33b2:	f4 90       	lpm	r15, Z
    33b4:	fc 01       	movw	r30, r24
    33b6:	e4 55       	subi	r30, 0x54	; 84
    33b8:	fe 4f       	sbci	r31, 0xFE	; 254
    33ba:	25 91       	lpm	r18, Z+
    33bc:	35 91       	lpm	r19, Z+
    33be:	45 91       	lpm	r20, Z+
    33c0:	54 91       	lpm	r21, Z
    33c2:	6e a5       	ldd	r22, Y+46	; 0x2e
    33c4:	7f a5       	ldd	r23, Y+47	; 0x2f
    33c6:	88 a9       	ldd	r24, Y+48	; 0x30
    33c8:	99 a9       	ldd	r25, Y+49	; 0x31
    33ca:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    33ce:	9b 01       	movw	r18, r22
    33d0:	ac 01       	movw	r20, r24
    33d2:	c7 01       	movw	r24, r14
    33d4:	b6 01       	movw	r22, r12
    33d6:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    33da:	29 a5       	ldd	r18, Y+41	; 0x29
    33dc:	3a a5       	ldd	r19, Y+42	; 0x2a
    33de:	4b a5       	ldd	r20, Y+43	; 0x2b
    33e0:	5c a5       	ldd	r21, Y+44	; 0x2c
    33e2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    33e6:	69 83       	std	Y+1, r22	; 0x01
    33e8:	7a 83       	std	Y+2, r23	; 0x02
    33ea:	8b 83       	std	Y+3, r24	; 0x03
    33ec:	9c 83       	std	Y+4, r25	; 0x04
    33ee:	21 10       	cpse	r2, r1
    33f0:	38 c0       	rjmp	.+112    	; 0x3462 <igrf+0x9ee>
    33f2:	03 2d       	mov	r16, r3
    33f4:	10 e0       	ldi	r17, 0x00	; 0
    33f6:	00 0f       	add	r16, r16
    33f8:	11 1f       	adc	r17, r17
    33fa:	00 0f       	add	r16, r16
    33fc:	11 1f       	adc	r17, r17
    33fe:	f8 01       	movw	r30, r16
    3400:	e7 57       	subi	r30, 0x77	; 119
    3402:	fd 4f       	sbci	r31, 0xFD	; 253
    3404:	20 81       	ld	r18, Z
    3406:	31 81       	ldd	r19, Z+1	; 0x01
    3408:	42 81       	ldd	r20, Z+2	; 0x02
    340a:	53 81       	ldd	r21, Z+3	; 0x03
    340c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3410:	9b 01       	movw	r18, r22
    3412:	ac 01       	movw	r20, r24
    3414:	69 a1       	ldd	r22, Y+33	; 0x21
    3416:	7a a1       	ldd	r23, Y+34	; 0x22
    3418:	8b a1       	ldd	r24, Y+35	; 0x23
    341a:	9c a1       	ldd	r25, Y+36	; 0x24
    341c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3420:	69 a3       	std	Y+33, r22	; 0x21
    3422:	7a a3       	std	Y+34, r23	; 0x22
    3424:	8b a3       	std	Y+35, r24	; 0x23
    3426:	9c a3       	std	Y+36, r25	; 0x24
    3428:	f8 01       	movw	r30, r16
    342a:	ef 5a       	subi	r30, 0xAF	; 175
    342c:	fc 4f       	sbci	r31, 0xFC	; 252
    342e:	20 81       	ld	r18, Z
    3430:	31 81       	ldd	r19, Z+1	; 0x01
    3432:	42 81       	ldd	r20, Z+2	; 0x02
    3434:	53 81       	ldd	r21, Z+3	; 0x03
    3436:	69 81       	ldd	r22, Y+1	; 0x01
    3438:	7a 81       	ldd	r23, Y+2	; 0x02
    343a:	8b 81       	ldd	r24, Y+3	; 0x03
    343c:	9c 81       	ldd	r25, Y+4	; 0x04
    343e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3442:	9b 01       	movw	r18, r22
    3444:	ac 01       	movw	r20, r24
    3446:	6d a1       	ldd	r22, Y+37	; 0x25
    3448:	7e a1       	ldd	r23, Y+38	; 0x26
    344a:	8f a1       	ldd	r24, Y+39	; 0x27
    344c:	98 a5       	ldd	r25, Y+40	; 0x28
    344e:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3452:	6d a3       	std	Y+37, r22	; 0x25
    3454:	7e a3       	std	Y+38, r23	; 0x26
    3456:	8f a3       	std	Y+39, r24	; 0x27
    3458:	98 a7       	std	Y+40, r25	; 0x28
    345a:	29 89       	ldd	r18, Y+17	; 0x11
    345c:	2f 5f       	subi	r18, 0xFF	; 255
    345e:	29 8b       	std	Y+17, r18	; 0x11
    3460:	32 c1       	rjmp	.+612    	; 0x36c6 <igrf+0xc52>
    3462:	c8 01       	movw	r24, r16
    3464:	01 96       	adiw	r24, 0x01	; 1
    3466:	88 0f       	add	r24, r24
    3468:	99 1f       	adc	r25, r25
    346a:	88 0f       	add	r24, r24
    346c:	99 1f       	adc	r25, r25
    346e:	fc 01       	movw	r30, r24
    3470:	e4 54       	subi	r30, 0x44	; 68
    3472:	fb 4f       	sbci	r31, 0xFB	; 251
    3474:	85 90       	lpm	r8, Z+
    3476:	95 90       	lpm	r9, Z+
    3478:	a5 90       	lpm	r10, Z+
    347a:	b4 90       	lpm	r11, Z
    347c:	84 55       	subi	r24, 0x54	; 84
    347e:	9e 4f       	sbci	r25, 0xFE	; 254
    3480:	fc 01       	movw	r30, r24
    3482:	25 91       	lpm	r18, Z+
    3484:	35 91       	lpm	r19, Z+
    3486:	45 91       	lpm	r20, Z+
    3488:	54 91       	lpm	r21, Z
    348a:	6e a5       	ldd	r22, Y+46	; 0x2e
    348c:	7f a5       	ldd	r23, Y+47	; 0x2f
    348e:	88 a9       	ldd	r24, Y+48	; 0x30
    3490:	99 a9       	ldd	r25, Y+49	; 0x31
    3492:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3496:	9b 01       	movw	r18, r22
    3498:	ac 01       	movw	r20, r24
    349a:	c5 01       	movw	r24, r10
    349c:	b4 01       	movw	r22, r8
    349e:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    34a2:	29 a5       	ldd	r18, Y+41	; 0x29
    34a4:	3a a5       	ldd	r19, Y+42	; 0x2a
    34a6:	4b a5       	ldd	r20, Y+43	; 0x2b
    34a8:	5c a5       	ldd	r21, Y+44	; 0x2c
    34aa:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    34ae:	6d 87       	std	Y+13, r22	; 0x0d
    34b0:	7e 87       	std	Y+14, r23	; 0x0e
    34b2:	8f 87       	std	Y+15, r24	; 0x0f
    34b4:	98 8b       	std	Y+16, r25	; 0x10
    34b6:	02 2d       	mov	r16, r2
    34b8:	10 e0       	ldi	r17, 0x00	; 0
    34ba:	c8 01       	movw	r24, r16
    34bc:	88 0f       	add	r24, r24
    34be:	99 1f       	adc	r25, r25
    34c0:	88 0f       	add	r24, r24
    34c2:	99 1f       	adc	r25, r25
    34c4:	fc 01       	movw	r30, r24
    34c6:	e3 5b       	subi	r30, 0xB3	; 179
    34c8:	fd 4f       	sbci	r31, 0xFD	; 253
    34ca:	c0 80       	ld	r12, Z
    34cc:	d1 80       	ldd	r13, Z+1	; 0x01
    34ce:	e2 80       	ldd	r14, Z+2	; 0x02
    34d0:	f3 80       	ldd	r15, Z+3	; 0x03
    34d2:	fc 01       	movw	r30, r24
    34d4:	ef 5e       	subi	r30, 0xEF	; 239
    34d6:	fd 4f       	sbci	r31, 0xFD	; 253
    34d8:	40 80       	ld	r4, Z
    34da:	51 80       	ldd	r5, Z+1	; 0x01
    34dc:	62 80       	ldd	r6, Z+2	; 0x02
    34de:	73 80       	ldd	r7, Z+3	; 0x03
    34e0:	29 81       	ldd	r18, Y+1	; 0x01
    34e2:	3a 81       	ldd	r19, Y+2	; 0x02
    34e4:	4b 81       	ldd	r20, Y+3	; 0x03
    34e6:	5c 81       	ldd	r21, Y+4	; 0x04
    34e8:	c7 01       	movw	r24, r14
    34ea:	b6 01       	movw	r22, r12
    34ec:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    34f0:	4b 01       	movw	r8, r22
    34f2:	5c 01       	movw	r10, r24
    34f4:	2d 85       	ldd	r18, Y+13	; 0x0d
    34f6:	3e 85       	ldd	r19, Y+14	; 0x0e
    34f8:	4f 85       	ldd	r20, Y+15	; 0x0f
    34fa:	58 89       	ldd	r21, Y+16	; 0x10
    34fc:	c3 01       	movw	r24, r6
    34fe:	b2 01       	movw	r22, r4
    3500:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3504:	9b 01       	movw	r18, r22
    3506:	ac 01       	movw	r20, r24
    3508:	c5 01       	movw	r24, r10
    350a:	b4 01       	movw	r22, r8
    350c:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3510:	6d 83       	std	Y+5, r22	; 0x05
    3512:	7e 83       	std	Y+6, r23	; 0x06
    3514:	8f 83       	std	Y+7, r24	; 0x07
    3516:	98 87       	std	Y+8, r25	; 0x08
    3518:	a3 2c       	mov	r10, r3
    351a:	b1 2c       	mov	r11, r1
    351c:	aa 0c       	add	r10, r10
    351e:	bb 1c       	adc	r11, r11
    3520:	aa 0c       	add	r10, r10
    3522:	bb 1c       	adc	r11, r11
    3524:	95 01       	movw	r18, r10
    3526:	27 57       	subi	r18, 0x77	; 119
    3528:	3d 4f       	sbci	r19, 0xFD	; 253
    352a:	d9 01       	movw	r26, r18
    352c:	8d 91       	ld	r24, X+
    352e:	9d 91       	ld	r25, X+
    3530:	0d 90       	ld	r0, X+
    3532:	bc 91       	ld	r27, X
    3534:	a0 2d       	mov	r26, r0
    3536:	8d 8f       	std	Y+29, r24	; 0x1d
    3538:	9e 8f       	std	Y+30, r25	; 0x1e
    353a:	af 8f       	std	Y+31, r26	; 0x1f
    353c:	b8 a3       	std	Y+32, r27	; 0x20
    353e:	2d 81       	ldd	r18, Y+5	; 0x05
    3540:	3e 81       	ldd	r19, Y+6	; 0x06
    3542:	4f 81       	ldd	r20, Y+7	; 0x07
    3544:	58 85       	ldd	r21, Y+8	; 0x08
    3546:	bc 01       	movw	r22, r24
    3548:	cd 01       	movw	r24, r26
    354a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    354e:	9b 01       	movw	r18, r22
    3550:	ac 01       	movw	r20, r24
    3552:	69 a1       	ldd	r22, Y+33	; 0x21
    3554:	7a a1       	ldd	r23, Y+34	; 0x22
    3556:	8b a1       	ldd	r24, Y+35	; 0x23
    3558:	9c a1       	ldd	r25, Y+36	; 0x24
    355a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    355e:	69 a3       	std	Y+33, r22	; 0x21
    3560:	7a a3       	std	Y+34, r23	; 0x22
    3562:	8b a3       	std	Y+35, r24	; 0x23
    3564:	9c a3       	std	Y+36, r25	; 0x24
    3566:	f5 01       	movw	r30, r10
    3568:	ef 5a       	subi	r30, 0xAF	; 175
    356a:	fc 4f       	sbci	r31, 0xFC	; 252
    356c:	80 80       	ld	r8, Z
    356e:	91 80       	ldd	r9, Z+1	; 0x01
    3570:	a2 80       	ldd	r10, Z+2	; 0x02
    3572:	b3 80       	ldd	r11, Z+3	; 0x03
    3574:	2d 81       	ldd	r18, Y+5	; 0x05
    3576:	3e 81       	ldd	r19, Y+6	; 0x06
    3578:	4f 81       	ldd	r20, Y+7	; 0x07
    357a:	58 85       	ldd	r21, Y+8	; 0x08
    357c:	c5 01       	movw	r24, r10
    357e:	b4 01       	movw	r22, r8
    3580:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3584:	9b 01       	movw	r18, r22
    3586:	ac 01       	movw	r20, r24
    3588:	6d a1       	ldd	r22, Y+37	; 0x25
    358a:	7e a1       	ldd	r23, Y+38	; 0x26
    358c:	8f a1       	ldd	r24, Y+39	; 0x27
    358e:	98 a5       	ldd	r25, Y+40	; 0x28
    3590:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3594:	6d a3       	std	Y+37, r22	; 0x25
    3596:	7e a3       	std	Y+38, r23	; 0x26
    3598:	8f a3       	std	Y+39, r24	; 0x27
    359a:	98 a7       	std	Y+40, r25	; 0x28
    359c:	20 e0       	ldi	r18, 0x00	; 0
    359e:	30 e0       	ldi	r19, 0x00	; 0
    35a0:	a9 01       	movw	r20, r18
    35a2:	6d 89       	ldd	r22, Y+21	; 0x15
    35a4:	7e 89       	ldd	r23, Y+22	; 0x16
    35a6:	8f 89       	ldd	r24, Y+23	; 0x17
    35a8:	98 8d       	ldd	r25, Y+24	; 0x18
    35aa:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    35ae:	18 16       	cp	r1, r24
    35b0:	0c f0       	brlt	.+2      	; 0x35b4 <igrf+0xb40>
    35b2:	54 c0       	rjmp	.+168    	; 0x365c <igrf+0xbe8>
    35b4:	a3 01       	movw	r20, r6
    35b6:	92 01       	movw	r18, r4
    35b8:	69 81       	ldd	r22, Y+1	; 0x01
    35ba:	7a 81       	ldd	r23, Y+2	; 0x02
    35bc:	8b 81       	ldd	r24, Y+3	; 0x03
    35be:	9c 81       	ldd	r25, Y+4	; 0x04
    35c0:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    35c4:	2b 01       	movw	r4, r22
    35c6:	3c 01       	movw	r6, r24
    35c8:	a7 01       	movw	r20, r14
    35ca:	96 01       	movw	r18, r12
    35cc:	6d 85       	ldd	r22, Y+13	; 0x0d
    35ce:	7e 85       	ldd	r23, Y+14	; 0x0e
    35d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    35d2:	98 89       	ldd	r25, Y+16	; 0x10
    35d4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    35d8:	9b 01       	movw	r18, r22
    35da:	ac 01       	movw	r20, r24
    35dc:	c3 01       	movw	r24, r6
    35de:	b2 01       	movw	r22, r4
    35e0:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    35e4:	6b 01       	movw	r12, r22
    35e6:	7c 01       	movw	r14, r24
    35e8:	b8 01       	movw	r22, r16
    35ea:	11 0f       	add	r17, r17
    35ec:	88 0b       	sbc	r24, r24
    35ee:	99 0b       	sbc	r25, r25
    35f0:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    35f4:	9b 01       	movw	r18, r22
    35f6:	ac 01       	movw	r20, r24
    35f8:	c7 01       	movw	r24, r14
    35fa:	b6 01       	movw	r22, r12
    35fc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3600:	9b 01       	movw	r18, r22
    3602:	ac 01       	movw	r20, r24
    3604:	c5 01       	movw	r24, r10
    3606:	b4 01       	movw	r22, r8
    3608:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    360c:	6b 01       	movw	r12, r22
    360e:	7c 01       	movw	r14, r24
    3610:	bd a5       	ldd	r27, Y+45	; 0x2d
    3612:	6b 2f       	mov	r22, r27
    3614:	70 e0       	ldi	r23, 0x00	; 0
    3616:	80 e0       	ldi	r24, 0x00	; 0
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    361e:	20 e0       	ldi	r18, 0x00	; 0
    3620:	30 e0       	ldi	r19, 0x00	; 0
    3622:	40 e8       	ldi	r20, 0x80	; 128
    3624:	5f e3       	ldi	r21, 0x3F	; 63
    3626:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    362a:	2d 89       	ldd	r18, Y+21	; 0x15
    362c:	3e 89       	ldd	r19, Y+22	; 0x16
    362e:	4f 89       	ldd	r20, Y+23	; 0x17
    3630:	58 8d       	ldd	r21, Y+24	; 0x18
    3632:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3636:	9b 01       	movw	r18, r22
    3638:	ac 01       	movw	r20, r24
    363a:	c7 01       	movw	r24, r14
    363c:	b6 01       	movw	r22, r12
    363e:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    3642:	9b 01       	movw	r18, r22
    3644:	ac 01       	movw	r20, r24
    3646:	6f a9       	ldd	r22, Y+55	; 0x37
    3648:	78 ad       	ldd	r23, Y+56	; 0x38
    364a:	89 ad       	ldd	r24, Y+57	; 0x39
    364c:	9a ad       	ldd	r25, Y+58	; 0x3a
    364e:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3652:	6f ab       	std	Y+55, r22	; 0x37
    3654:	78 af       	std	Y+56, r23	; 0x38
    3656:	89 af       	std	Y+57, r24	; 0x39
    3658:	9a af       	std	Y+58, r25	; 0x3a
    365a:	32 c0       	rjmp	.+100    	; 0x36c0 <igrf+0xc4c>
    365c:	a3 01       	movw	r20, r6
    365e:	92 01       	movw	r18, r4
    3660:	69 81       	ldd	r22, Y+1	; 0x01
    3662:	7a 81       	ldd	r23, Y+2	; 0x02
    3664:	8b 81       	ldd	r24, Y+3	; 0x03
    3666:	9c 81       	ldd	r25, Y+4	; 0x04
    3668:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    366c:	4b 01       	movw	r8, r22
    366e:	5c 01       	movw	r10, r24
    3670:	a7 01       	movw	r20, r14
    3672:	96 01       	movw	r18, r12
    3674:	6d 85       	ldd	r22, Y+13	; 0x0d
    3676:	7e 85       	ldd	r23, Y+14	; 0x0e
    3678:	8f 85       	ldd	r24, Y+15	; 0x0f
    367a:	98 89       	ldd	r25, Y+16	; 0x10
    367c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3680:	9b 01       	movw	r18, r22
    3682:	ac 01       	movw	r20, r24
    3684:	c5 01       	movw	r24, r10
    3686:	b4 01       	movw	r22, r8
    3688:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    368c:	9b 01       	movw	r18, r22
    368e:	ac 01       	movw	r20, r24
    3690:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3692:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3694:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3696:	98 a1       	ldd	r25, Y+32	; 0x20
    3698:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    369c:	29 8d       	ldd	r18, Y+25	; 0x19
    369e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    36a0:	4b 8d       	ldd	r20, Y+27	; 0x1b
    36a2:	5c 8d       	ldd	r21, Y+28	; 0x1c
    36a4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    36a8:	9b 01       	movw	r18, r22
    36aa:	ac 01       	movw	r20, r24
    36ac:	6f a9       	ldd	r22, Y+55	; 0x37
    36ae:	78 ad       	ldd	r23, Y+56	; 0x38
    36b0:	89 ad       	ldd	r24, Y+57	; 0x39
    36b2:	9a ad       	ldd	r25, Y+58	; 0x3a
    36b4:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    36b8:	6f ab       	std	Y+55, r22	; 0x37
    36ba:	78 af       	std	Y+56, r23	; 0x38
    36bc:	89 af       	std	Y+57, r24	; 0x39
    36be:	9a af       	std	Y+58, r25	; 0x3a
    36c0:	e9 89       	ldd	r30, Y+17	; 0x11
    36c2:	ee 5f       	subi	r30, 0xFE	; 254
    36c4:	e9 8b       	std	Y+17, r30	; 0x11
    36c6:	23 94       	inc	r2
    36c8:	33 94       	inc	r3
    36ca:	fe a9       	ldd	r31, Y+54	; 0x36
    36cc:	f3 15       	cp	r31, r3
    36ce:	08 f0       	brcs	.+2      	; 0x36d2 <igrf+0xc5e>
    36d0:	24 cc       	rjmp	.-1976   	; 0x2f1a <igrf+0x4a6>
    36d2:	0c c0       	rjmp	.+24     	; 0x36ec <igrf+0xc78>
    36d4:	1d a2       	std	Y+37, r1	; 0x25
    36d6:	1e a2       	std	Y+38, r1	; 0x26
    36d8:	1f a2       	std	Y+39, r1	; 0x27
    36da:	18 a6       	std	Y+40, r1	; 0x28
    36dc:	1f aa       	std	Y+55, r1	; 0x37
    36de:	18 ae       	std	Y+56, r1	; 0x38
    36e0:	19 ae       	std	Y+57, r1	; 0x39
    36e2:	1a ae       	std	Y+58, r1	; 0x3a
    36e4:	19 a2       	std	Y+33, r1	; 0x21
    36e6:	1a a2       	std	Y+34, r1	; 0x22
    36e8:	1b a2       	std	Y+35, r1	; 0x23
    36ea:	1c a2       	std	Y+36, r1	; 0x24
    36ec:	23 96       	adiw	r28, 0x03	; 3
    36ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    36f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    36f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    36f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    36f6:	23 97       	sbiw	r28, 0x03	; 3
    36f8:	6d a1       	ldd	r22, Y+37	; 0x25
    36fa:	7e a1       	ldd	r23, Y+38	; 0x26
    36fc:	8f a1       	ldd	r24, Y+39	; 0x27
    36fe:	98 a5       	ldd	r25, Y+40	; 0x28
    3700:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3704:	6b 01       	movw	r12, r22
    3706:	7c 01       	movw	r14, r24
    3708:	23 96       	adiw	r28, 0x03	; 3
    370a:	2c ad       	ldd	r18, Y+60	; 0x3c
    370c:	3d ad       	ldd	r19, Y+61	; 0x3d
    370e:	4e ad       	ldd	r20, Y+62	; 0x3e
    3710:	5f ad       	ldd	r21, Y+63	; 0x3f
    3712:	23 97       	sbiw	r28, 0x03	; 3
    3714:	69 a1       	ldd	r22, Y+33	; 0x21
    3716:	7a a1       	ldd	r23, Y+34	; 0x22
    3718:	8b a1       	ldd	r24, Y+35	; 0x23
    371a:	9c a1       	ldd	r25, Y+36	; 0x24
    371c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3720:	4b 01       	movw	r8, r22
    3722:	5c 01       	movw	r10, r24
    3724:	27 96       	adiw	r28, 0x07	; 7
    3726:	2c ad       	ldd	r18, Y+60	; 0x3c
    3728:	3d ad       	ldd	r19, Y+61	; 0x3d
    372a:	4e ad       	ldd	r20, Y+62	; 0x3e
    372c:	5f ad       	ldd	r21, Y+63	; 0x3f
    372e:	27 97       	sbiw	r28, 0x07	; 7
    3730:	6d a1       	ldd	r22, Y+37	; 0x25
    3732:	7e a1       	ldd	r23, Y+38	; 0x26
    3734:	8f a1       	ldd	r24, Y+39	; 0x27
    3736:	98 a5       	ldd	r25, Y+40	; 0x28
    3738:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    373c:	9b 01       	movw	r18, r22
    373e:	ac 01       	movw	r20, r24
    3740:	c5 01       	movw	r24, r10
    3742:	b4 01       	movw	r22, r8
    3744:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3748:	29 96       	adiw	r28, 0x09	; 9
    374a:	ae ad       	ldd	r26, Y+62	; 0x3e
    374c:	bf ad       	ldd	r27, Y+63	; 0x3f
    374e:	29 97       	sbiw	r28, 0x09	; 9
    3750:	6d 93       	st	X+, r22
    3752:	7d 93       	st	X+, r23
    3754:	8d 93       	st	X+, r24
    3756:	9c 93       	st	X, r25
    3758:	13 97       	sbiw	r26, 0x03	; 3
    375a:	8f a9       	ldd	r24, Y+55	; 0x37
    375c:	98 ad       	ldd	r25, Y+56	; 0x38
    375e:	a9 ad       	ldd	r26, Y+57	; 0x39
    3760:	ba ad       	ldd	r27, Y+58	; 0x3a
    3762:	29 96       	adiw	r28, 0x09	; 9
    3764:	ee ad       	ldd	r30, Y+62	; 0x3e
    3766:	ff ad       	ldd	r31, Y+63	; 0x3f
    3768:	29 97       	sbiw	r28, 0x09	; 9
    376a:	84 83       	std	Z+4, r24	; 0x04
    376c:	95 83       	std	Z+5, r25	; 0x05
    376e:	a6 83       	std	Z+6, r26	; 0x06
    3770:	b7 83       	std	Z+7, r27	; 0x07
    3772:	29 a1       	ldd	r18, Y+33	; 0x21
    3774:	3a a1       	ldd	r19, Y+34	; 0x22
    3776:	4b a1       	ldd	r20, Y+35	; 0x23
    3778:	5c a1       	ldd	r21, Y+36	; 0x24
    377a:	27 96       	adiw	r28, 0x07	; 7
    377c:	6c ad       	ldd	r22, Y+60	; 0x3c
    377e:	7d ad       	ldd	r23, Y+61	; 0x3d
    3780:	8e ad       	ldd	r24, Y+62	; 0x3e
    3782:	9f ad       	ldd	r25, Y+63	; 0x3f
    3784:	27 97       	sbiw	r28, 0x07	; 7
    3786:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    378a:	9b 01       	movw	r18, r22
    378c:	ac 01       	movw	r20, r24
    378e:	c7 01       	movw	r24, r14
    3790:	b6 01       	movw	r22, r12
    3792:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3796:	29 96       	adiw	r28, 0x09	; 9
    3798:	ae ad       	ldd	r26, Y+62	; 0x3e
    379a:	bf ad       	ldd	r27, Y+63	; 0x3f
    379c:	29 97       	sbiw	r28, 0x09	; 9
    379e:	18 96       	adiw	r26, 0x08	; 8
    37a0:	6d 93       	st	X+, r22
    37a2:	7d 93       	st	X+, r23
    37a4:	8d 93       	st	X+, r24
    37a6:	9c 93       	st	X, r25
    37a8:	1b 97       	sbiw	r26, 0x0b	; 11
    37aa:	c8 5b       	subi	r28, 0xB8	; 184
    37ac:	df 4f       	sbci	r29, 0xFF	; 255
    37ae:	0f b6       	in	r0, 0x3f	; 63
    37b0:	f8 94       	cli
    37b2:	de bf       	out	0x3e, r29	; 62
    37b4:	0f be       	out	0x3f, r0	; 63
    37b6:	cd bf       	out	0x3d, r28	; 61
    37b8:	df 91       	pop	r29
    37ba:	cf 91       	pop	r28
    37bc:	1f 91       	pop	r17
    37be:	0f 91       	pop	r16
    37c0:	ff 90       	pop	r15
    37c2:	ef 90       	pop	r14
    37c4:	df 90       	pop	r13
    37c6:	cf 90       	pop	r12
    37c8:	bf 90       	pop	r11
    37ca:	af 90       	pop	r10
    37cc:	9f 90       	pop	r9
    37ce:	8f 90       	pop	r8
    37d0:	7f 90       	pop	r7
    37d2:	6f 90       	pop	r6
    37d4:	5f 90       	pop	r5
    37d6:	4f 90       	pop	r4
    37d8:	3f 90       	pop	r3
    37da:	2f 90       	pop	r2
    37dc:	08 95       	ret

000037de <init_UART_MM>:
    37de:	cf 93       	push	r28
    37e0:	df 93       	push	r29
    37e2:	cb e9       	ldi	r28, 0x9B	; 155
    37e4:	d0 e0       	ldi	r29, 0x00	; 0
    37e6:	18 82       	st	Y, r1
    37e8:	aa e9       	ldi	r26, 0x9A	; 154
    37ea:	b0 e0       	ldi	r27, 0x00	; 0
    37ec:	1c 92       	st	X, r1
    37ee:	ed e9       	ldi	r30, 0x9D	; 157
    37f0:	f0 e0       	ldi	r31, 0x00	; 0
    37f2:	10 82       	st	Z, r1
    37f4:	88 81       	ld	r24, Y
    37f6:	82 60       	ori	r24, 0x02	; 2
    37f8:	88 83       	st	Y, r24
    37fa:	8c 91       	ld	r24, X
    37fc:	88 69       	ori	r24, 0x98	; 152
    37fe:	8c 93       	st	X, r24
    3800:	80 81       	ld	r24, Z
    3802:	8e 60       	ori	r24, 0x0E	; 14
    3804:	80 83       	st	Z, r24
    3806:	87 e6       	ldi	r24, 0x67	; 103
    3808:	80 93 99 00 	sts	0x0099, r24
    380c:	10 92 98 00 	sts	0x0098, r1
    3810:	df 91       	pop	r29
    3812:	cf 91       	pop	r28
    3814:	08 95       	ret

00003816 <__vector_30>:
    3816:	1f 92       	push	r1
    3818:	0f 92       	push	r0
    381a:	0f b6       	in	r0, 0x3f	; 63
    381c:	0f 92       	push	r0
    381e:	11 24       	eor	r1, r1
    3820:	0b b6       	in	r0, 0x3b	; 59
    3822:	0f 92       	push	r0
    3824:	2f 93       	push	r18
    3826:	3f 93       	push	r19
    3828:	4f 93       	push	r20
    382a:	5f 93       	push	r21
    382c:	6f 93       	push	r22
    382e:	7f 93       	push	r23
    3830:	8f 93       	push	r24
    3832:	9f 93       	push	r25
    3834:	af 93       	push	r26
    3836:	bf 93       	push	r27
    3838:	ef 93       	push	r30
    383a:	ff 93       	push	r31
    383c:	80 91 1f 04 	lds	r24, 0x041F
    3840:	90 91 9c 00 	lds	r25, 0x009C
    3844:	e8 2f       	mov	r30, r24
    3846:	f0 e0       	ldi	r31, 0x00	; 0
    3848:	e4 55       	subi	r30, 0x54	; 84
    384a:	fb 4f       	sbci	r31, 0xFB	; 251
    384c:	90 83       	st	Z, r25
    384e:	8f 5f       	subi	r24, 0xFF	; 255
    3850:	87 30       	cpi	r24, 0x07	; 7
    3852:	19 f0       	breq	.+6      	; 0x385a <__vector_30+0x44>
    3854:	80 93 1f 04 	sts	0x041F, r24
    3858:	9d c0       	rjmp	.+314    	; 0x3994 <__vector_30+0x17e>
    385a:	10 92 1f 04 	sts	0x041F, r1
    385e:	ec ea       	ldi	r30, 0xAC	; 172
    3860:	f4 e0       	ldi	r31, 0x04	; 4
    3862:	80 81       	ld	r24, Z
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	98 2f       	mov	r25, r24
    3868:	88 27       	eor	r24, r24
    386a:	90 93 1e 04 	sts	0x041E, r25
    386e:	80 93 1d 04 	sts	0x041D, r24
    3872:	80 91 1d 04 	lds	r24, 0x041D
    3876:	90 91 1e 04 	lds	r25, 0x041E
    387a:	88 27       	eor	r24, r24
    387c:	90 93 1e 04 	sts	0x041E, r25
    3880:	80 93 1d 04 	sts	0x041D, r24
    3884:	80 91 1d 04 	lds	r24, 0x041D
    3888:	90 91 1e 04 	lds	r25, 0x041E
    388c:	21 81       	ldd	r18, Z+1	; 0x01
    388e:	82 2b       	or	r24, r18
    3890:	90 93 1e 04 	sts	0x041E, r25
    3894:	80 93 1d 04 	sts	0x041D, r24
    3898:	82 81       	ldd	r24, Z+2	; 0x02
    389a:	90 e0       	ldi	r25, 0x00	; 0
    389c:	98 2f       	mov	r25, r24
    389e:	88 27       	eor	r24, r24
    38a0:	90 93 1c 04 	sts	0x041C, r25
    38a4:	80 93 1b 04 	sts	0x041B, r24
    38a8:	80 91 1b 04 	lds	r24, 0x041B
    38ac:	90 91 1c 04 	lds	r25, 0x041C
    38b0:	88 27       	eor	r24, r24
    38b2:	90 93 1c 04 	sts	0x041C, r25
    38b6:	80 93 1b 04 	sts	0x041B, r24
    38ba:	80 91 1b 04 	lds	r24, 0x041B
    38be:	90 91 1c 04 	lds	r25, 0x041C
    38c2:	23 81       	ldd	r18, Z+3	; 0x03
    38c4:	82 2b       	or	r24, r18
    38c6:	90 93 1c 04 	sts	0x041C, r25
    38ca:	80 93 1b 04 	sts	0x041B, r24
    38ce:	84 81       	ldd	r24, Z+4	; 0x04
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	98 2f       	mov	r25, r24
    38d4:	88 27       	eor	r24, r24
    38d6:	90 93 1a 04 	sts	0x041A, r25
    38da:	80 93 19 04 	sts	0x0419, r24
    38de:	80 91 19 04 	lds	r24, 0x0419
    38e2:	90 91 1a 04 	lds	r25, 0x041A
    38e6:	88 27       	eor	r24, r24
    38e8:	90 93 1a 04 	sts	0x041A, r25
    38ec:	80 93 19 04 	sts	0x0419, r24
    38f0:	80 91 19 04 	lds	r24, 0x0419
    38f4:	90 91 1a 04 	lds	r25, 0x041A
    38f8:	25 81       	ldd	r18, Z+5	; 0x05
    38fa:	82 2b       	or	r24, r18
    38fc:	90 93 1a 04 	sts	0x041A, r25
    3900:	80 93 19 04 	sts	0x0419, r24
    3904:	60 91 1d 04 	lds	r22, 0x041D
    3908:	70 91 1e 04 	lds	r23, 0x041E
    390c:	07 2e       	mov	r0, r23
    390e:	00 0c       	add	r0, r0
    3910:	88 0b       	sbc	r24, r24
    3912:	99 0b       	sbc	r25, r25
    3914:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    3918:	20 e0       	ldi	r18, 0x00	; 0
    391a:	30 e6       	ldi	r19, 0x60	; 96
    391c:	4a e6       	ldi	r20, 0x6A	; 106
    391e:	56 e4       	ldi	r21, 0x46	; 70
    3920:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    3924:	60 93 14 05 	sts	0x0514, r22
    3928:	70 93 15 05 	sts	0x0515, r23
    392c:	80 93 16 05 	sts	0x0516, r24
    3930:	90 93 17 05 	sts	0x0517, r25
    3934:	60 91 1b 04 	lds	r22, 0x041B
    3938:	70 91 1c 04 	lds	r23, 0x041C
    393c:	07 2e       	mov	r0, r23
    393e:	00 0c       	add	r0, r0
    3940:	88 0b       	sbc	r24, r24
    3942:	99 0b       	sbc	r25, r25
    3944:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	30 e6       	ldi	r19, 0x60	; 96
    394c:	4a e6       	ldi	r20, 0x6A	; 106
    394e:	56 e4       	ldi	r21, 0x46	; 70
    3950:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    3954:	60 93 18 05 	sts	0x0518, r22
    3958:	70 93 19 05 	sts	0x0519, r23
    395c:	80 93 1a 05 	sts	0x051A, r24
    3960:	90 93 1b 05 	sts	0x051B, r25
    3964:	60 91 19 04 	lds	r22, 0x0419
    3968:	70 91 1a 04 	lds	r23, 0x041A
    396c:	07 2e       	mov	r0, r23
    396e:	00 0c       	add	r0, r0
    3970:	88 0b       	sbc	r24, r24
    3972:	99 0b       	sbc	r25, r25
    3974:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    3978:	20 e0       	ldi	r18, 0x00	; 0
    397a:	30 e6       	ldi	r19, 0x60	; 96
    397c:	4a e6       	ldi	r20, 0x6A	; 106
    397e:	56 e4       	ldi	r21, 0x46	; 70
    3980:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    3984:	60 93 1c 05 	sts	0x051C, r22
    3988:	70 93 1d 05 	sts	0x051D, r23
    398c:	80 93 1e 05 	sts	0x051E, r24
    3990:	90 93 1f 05 	sts	0x051F, r25
    3994:	ff 91       	pop	r31
    3996:	ef 91       	pop	r30
    3998:	bf 91       	pop	r27
    399a:	af 91       	pop	r26
    399c:	9f 91       	pop	r25
    399e:	8f 91       	pop	r24
    39a0:	7f 91       	pop	r23
    39a2:	6f 91       	pop	r22
    39a4:	5f 91       	pop	r21
    39a6:	4f 91       	pop	r20
    39a8:	3f 91       	pop	r19
    39aa:	2f 91       	pop	r18
    39ac:	0f 90       	pop	r0
    39ae:	0b be       	out	0x3b, r0	; 59
    39b0:	0f 90       	pop	r0
    39b2:	0f be       	out	0x3f, r0	; 63
    39b4:	0f 90       	pop	r0
    39b6:	1f 90       	pop	r1
    39b8:	18 95       	reti

000039ba <send_MM_cmd>:
    39ba:	cf 93       	push	r28
    39bc:	df 93       	push	r29
    39be:	fc 01       	movw	r30, r24
    39c0:	20 81       	ld	r18, Z
    39c2:	22 23       	and	r18, r18
    39c4:	69 f0       	breq	.+26     	; 0x39e0 <send_MM_cmd+0x26>
    39c6:	dc 01       	movw	r26, r24
    39c8:	11 96       	adiw	r26, 0x01	; 1
    39ca:	eb e9       	ldi	r30, 0x9B	; 155
    39cc:	f0 e0       	ldi	r31, 0x00	; 0
    39ce:	cc e9       	ldi	r28, 0x9C	; 156
    39d0:	d0 e0       	ldi	r29, 0x00	; 0
    39d2:	90 81       	ld	r25, Z
    39d4:	95 ff       	sbrs	r25, 5
    39d6:	fd cf       	rjmp	.-6      	; 0x39d2 <send_MM_cmd+0x18>
    39d8:	28 83       	st	Y, r18
    39da:	2d 91       	ld	r18, X+
    39dc:	21 11       	cpse	r18, r1
    39de:	f9 cf       	rjmp	.-14     	; 0x39d2 <send_MM_cmd+0x18>
    39e0:	df 91       	pop	r29
    39e2:	cf 91       	pop	r28
    39e4:	08 95       	ret

000039e6 <poll_MM>:
    39e6:	84 e9       	ldi	r24, 0x94	; 148
    39e8:	91 e0       	ldi	r25, 0x01	; 1
    39ea:	e7 cf       	rjmp	.-50     	; 0x39ba <send_MM_cmd>
    39ec:	08 95       	ret

000039ee <copy_vector>:
    39ee:	dc 01       	movw	r26, r24
    39f0:	fb 01       	movw	r30, r22
    39f2:	4d 91       	ld	r20, X+
    39f4:	5d 91       	ld	r21, X+
    39f6:	6d 91       	ld	r22, X+
    39f8:	7c 91       	ld	r23, X
    39fa:	13 97       	sbiw	r26, 0x03	; 3
    39fc:	40 83       	st	Z, r20
    39fe:	51 83       	std	Z+1, r21	; 0x01
    3a00:	62 83       	std	Z+2, r22	; 0x02
    3a02:	73 83       	std	Z+3, r23	; 0x03
    3a04:	14 96       	adiw	r26, 0x04	; 4
    3a06:	4d 91       	ld	r20, X+
    3a08:	5d 91       	ld	r21, X+
    3a0a:	6d 91       	ld	r22, X+
    3a0c:	7c 91       	ld	r23, X
    3a0e:	17 97       	sbiw	r26, 0x07	; 7
    3a10:	44 83       	std	Z+4, r20	; 0x04
    3a12:	55 83       	std	Z+5, r21	; 0x05
    3a14:	66 83       	std	Z+6, r22	; 0x06
    3a16:	77 83       	std	Z+7, r23	; 0x07
    3a18:	18 96       	adiw	r26, 0x08	; 8
    3a1a:	8d 91       	ld	r24, X+
    3a1c:	9d 91       	ld	r25, X+
    3a1e:	0d 90       	ld	r0, X+
    3a20:	bc 91       	ld	r27, X
    3a22:	a0 2d       	mov	r26, r0
    3a24:	80 87       	std	Z+8, r24	; 0x08
    3a26:	91 87       	std	Z+9, r25	; 0x09
    3a28:	a2 87       	std	Z+10, r26	; 0x0a
    3a2a:	b3 87       	std	Z+11, r27	; 0x0b
    3a2c:	08 95       	ret

00003a2e <copy_quaternion>:
    3a2e:	fc 01       	movw	r30, r24
    3a30:	a6 2f       	mov	r26, r22
    3a32:	b7 2f       	mov	r27, r23
    3a34:	40 96       	adiw	r24, 0x10	; 16
    3a36:	41 91       	ld	r20, Z+
    3a38:	51 91       	ld	r21, Z+
    3a3a:	61 91       	ld	r22, Z+
    3a3c:	71 91       	ld	r23, Z+
    3a3e:	4d 93       	st	X+, r20
    3a40:	5d 93       	st	X+, r21
    3a42:	6d 93       	st	X+, r22
    3a44:	7d 93       	st	X+, r23
    3a46:	e8 17       	cp	r30, r24
    3a48:	f9 07       	cpc	r31, r25
    3a4a:	a9 f7       	brne	.-22     	; 0x3a36 <copy_quaternion+0x8>
    3a4c:	08 95       	ret

00003a4e <vector_norm>:
    3a4e:	4f 92       	push	r4
    3a50:	5f 92       	push	r5
    3a52:	6f 92       	push	r6
    3a54:	7f 92       	push	r7
    3a56:	8f 92       	push	r8
    3a58:	9f 92       	push	r9
    3a5a:	af 92       	push	r10
    3a5c:	bf 92       	push	r11
    3a5e:	cf 92       	push	r12
    3a60:	df 92       	push	r13
    3a62:	ef 92       	push	r14
    3a64:	ff 92       	push	r15
    3a66:	cf 93       	push	r28
    3a68:	df 93       	push	r29
    3a6a:	00 d0       	rcall	.+0      	; 0x3a6c <vector_norm+0x1e>
    3a6c:	00 d0       	rcall	.+0      	; 0x3a6e <vector_norm+0x20>
    3a6e:	cd b7       	in	r28, 0x3d	; 61
    3a70:	de b7       	in	r29, 0x3e	; 62
    3a72:	fc 01       	movw	r30, r24
    3a74:	80 80       	ld	r8, Z
    3a76:	91 80       	ldd	r9, Z+1	; 0x01
    3a78:	a2 80       	ldd	r10, Z+2	; 0x02
    3a7a:	b3 80       	ldd	r11, Z+3	; 0x03
    3a7c:	c4 80       	ldd	r12, Z+4	; 0x04
    3a7e:	d5 80       	ldd	r13, Z+5	; 0x05
    3a80:	e6 80       	ldd	r14, Z+6	; 0x06
    3a82:	f7 80       	ldd	r15, Z+7	; 0x07
    3a84:	40 84       	ldd	r4, Z+8	; 0x08
    3a86:	51 84       	ldd	r5, Z+9	; 0x09
    3a88:	62 84       	ldd	r6, Z+10	; 0x0a
    3a8a:	73 84       	ldd	r7, Z+11	; 0x0b
    3a8c:	a5 01       	movw	r20, r10
    3a8e:	94 01       	movw	r18, r8
    3a90:	c5 01       	movw	r24, r10
    3a92:	b4 01       	movw	r22, r8
    3a94:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3a98:	69 83       	std	Y+1, r22	; 0x01
    3a9a:	7a 83       	std	Y+2, r23	; 0x02
    3a9c:	8b 83       	std	Y+3, r24	; 0x03
    3a9e:	9c 83       	std	Y+4, r25	; 0x04
    3aa0:	a7 01       	movw	r20, r14
    3aa2:	96 01       	movw	r18, r12
    3aa4:	c7 01       	movw	r24, r14
    3aa6:	b6 01       	movw	r22, r12
    3aa8:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3aac:	9b 01       	movw	r18, r22
    3aae:	ac 01       	movw	r20, r24
    3ab0:	69 81       	ldd	r22, Y+1	; 0x01
    3ab2:	7a 81       	ldd	r23, Y+2	; 0x02
    3ab4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ab6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ab8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3abc:	69 83       	std	Y+1, r22	; 0x01
    3abe:	7a 83       	std	Y+2, r23	; 0x02
    3ac0:	8b 83       	std	Y+3, r24	; 0x03
    3ac2:	9c 83       	std	Y+4, r25	; 0x04
    3ac4:	a5 01       	movw	r20, r10
    3ac6:	94 01       	movw	r18, r8
    3ac8:	c5 01       	movw	r24, r10
    3aca:	b4 01       	movw	r22, r8
    3acc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ad0:	4b 01       	movw	r8, r22
    3ad2:	5c 01       	movw	r10, r24
    3ad4:	a7 01       	movw	r20, r14
    3ad6:	96 01       	movw	r18, r12
    3ad8:	c7 01       	movw	r24, r14
    3ada:	b6 01       	movw	r22, r12
    3adc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ae0:	9b 01       	movw	r18, r22
    3ae2:	ac 01       	movw	r20, r24
    3ae4:	c5 01       	movw	r24, r10
    3ae6:	b4 01       	movw	r22, r8
    3ae8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3aec:	6b 01       	movw	r12, r22
    3aee:	7c 01       	movw	r14, r24
    3af0:	a3 01       	movw	r20, r6
    3af2:	92 01       	movw	r18, r4
    3af4:	c3 01       	movw	r24, r6
    3af6:	b2 01       	movw	r22, r4
    3af8:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3afc:	9b 01       	movw	r18, r22
    3afe:	ac 01       	movw	r20, r24
    3b00:	c7 01       	movw	r24, r14
    3b02:	b6 01       	movw	r22, r12
    3b04:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3b08:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    3b0c:	0f 90       	pop	r0
    3b0e:	0f 90       	pop	r0
    3b10:	0f 90       	pop	r0
    3b12:	0f 90       	pop	r0
    3b14:	df 91       	pop	r29
    3b16:	cf 91       	pop	r28
    3b18:	ff 90       	pop	r15
    3b1a:	ef 90       	pop	r14
    3b1c:	df 90       	pop	r13
    3b1e:	cf 90       	pop	r12
    3b20:	bf 90       	pop	r11
    3b22:	af 90       	pop	r10
    3b24:	9f 90       	pop	r9
    3b26:	8f 90       	pop	r8
    3b28:	7f 90       	pop	r7
    3b2a:	6f 90       	pop	r6
    3b2c:	5f 90       	pop	r5
    3b2e:	4f 90       	pop	r4
    3b30:	08 95       	ret

00003b32 <quaternion_norm>:
    3b32:	4f 92       	push	r4
    3b34:	5f 92       	push	r5
    3b36:	6f 92       	push	r6
    3b38:	7f 92       	push	r7
    3b3a:	8f 92       	push	r8
    3b3c:	9f 92       	push	r9
    3b3e:	af 92       	push	r10
    3b40:	bf 92       	push	r11
    3b42:	cf 92       	push	r12
    3b44:	df 92       	push	r13
    3b46:	ef 92       	push	r14
    3b48:	ff 92       	push	r15
    3b4a:	cf 93       	push	r28
    3b4c:	df 93       	push	r29
    3b4e:	cd b7       	in	r28, 0x3d	; 61
    3b50:	de b7       	in	r29, 0x3e	; 62
    3b52:	28 97       	sbiw	r28, 0x08	; 8
    3b54:	0f b6       	in	r0, 0x3f	; 63
    3b56:	f8 94       	cli
    3b58:	de bf       	out	0x3e, r29	; 62
    3b5a:	0f be       	out	0x3f, r0	; 63
    3b5c:	cd bf       	out	0x3d, r28	; 61
    3b5e:	9c 01       	movw	r18, r24
    3b60:	dc 01       	movw	r26, r24
    3b62:	8d 90       	ld	r8, X+
    3b64:	9d 90       	ld	r9, X+
    3b66:	ad 90       	ld	r10, X+
    3b68:	bc 90       	ld	r11, X
    3b6a:	13 97       	sbiw	r26, 0x03	; 3
    3b6c:	14 96       	adiw	r26, 0x04	; 4
    3b6e:	cd 90       	ld	r12, X+
    3b70:	dd 90       	ld	r13, X+
    3b72:	ed 90       	ld	r14, X+
    3b74:	fc 90       	ld	r15, X
    3b76:	17 97       	sbiw	r26, 0x07	; 7
    3b78:	18 96       	adiw	r26, 0x08	; 8
    3b7a:	8d 91       	ld	r24, X+
    3b7c:	9d 91       	ld	r25, X+
    3b7e:	0d 90       	ld	r0, X+
    3b80:	bc 91       	ld	r27, X
    3b82:	a0 2d       	mov	r26, r0
    3b84:	8d 83       	std	Y+5, r24	; 0x05
    3b86:	9e 83       	std	Y+6, r25	; 0x06
    3b88:	af 83       	std	Y+7, r26	; 0x07
    3b8a:	b8 87       	std	Y+8, r27	; 0x08
    3b8c:	f9 01       	movw	r30, r18
    3b8e:	44 84       	ldd	r4, Z+12	; 0x0c
    3b90:	55 84       	ldd	r5, Z+13	; 0x0d
    3b92:	66 84       	ldd	r6, Z+14	; 0x0e
    3b94:	77 84       	ldd	r7, Z+15	; 0x0f
    3b96:	a5 01       	movw	r20, r10
    3b98:	94 01       	movw	r18, r8
    3b9a:	c5 01       	movw	r24, r10
    3b9c:	b4 01       	movw	r22, r8
    3b9e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ba2:	69 83       	std	Y+1, r22	; 0x01
    3ba4:	7a 83       	std	Y+2, r23	; 0x02
    3ba6:	8b 83       	std	Y+3, r24	; 0x03
    3ba8:	9c 83       	std	Y+4, r25	; 0x04
    3baa:	a7 01       	movw	r20, r14
    3bac:	96 01       	movw	r18, r12
    3bae:	c7 01       	movw	r24, r14
    3bb0:	b6 01       	movw	r22, r12
    3bb2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3bb6:	9b 01       	movw	r18, r22
    3bb8:	ac 01       	movw	r20, r24
    3bba:	69 81       	ldd	r22, Y+1	; 0x01
    3bbc:	7a 81       	ldd	r23, Y+2	; 0x02
    3bbe:	8b 81       	ldd	r24, Y+3	; 0x03
    3bc0:	9c 81       	ldd	r25, Y+4	; 0x04
    3bc2:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3bc6:	69 83       	std	Y+1, r22	; 0x01
    3bc8:	7a 83       	std	Y+2, r23	; 0x02
    3bca:	8b 83       	std	Y+3, r24	; 0x03
    3bcc:	9c 83       	std	Y+4, r25	; 0x04
    3bce:	2d 81       	ldd	r18, Y+5	; 0x05
    3bd0:	3e 81       	ldd	r19, Y+6	; 0x06
    3bd2:	4f 81       	ldd	r20, Y+7	; 0x07
    3bd4:	58 85       	ldd	r21, Y+8	; 0x08
    3bd6:	ca 01       	movw	r24, r20
    3bd8:	b9 01       	movw	r22, r18
    3bda:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3bde:	9b 01       	movw	r18, r22
    3be0:	ac 01       	movw	r20, r24
    3be2:	69 81       	ldd	r22, Y+1	; 0x01
    3be4:	7a 81       	ldd	r23, Y+2	; 0x02
    3be6:	8b 81       	ldd	r24, Y+3	; 0x03
    3be8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bea:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3bee:	69 83       	std	Y+1, r22	; 0x01
    3bf0:	7a 83       	std	Y+2, r23	; 0x02
    3bf2:	8b 83       	std	Y+3, r24	; 0x03
    3bf4:	9c 83       	std	Y+4, r25	; 0x04
    3bf6:	a5 01       	movw	r20, r10
    3bf8:	94 01       	movw	r18, r8
    3bfa:	c5 01       	movw	r24, r10
    3bfc:	b4 01       	movw	r22, r8
    3bfe:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3c02:	4b 01       	movw	r8, r22
    3c04:	5c 01       	movw	r10, r24
    3c06:	a7 01       	movw	r20, r14
    3c08:	96 01       	movw	r18, r12
    3c0a:	c7 01       	movw	r24, r14
    3c0c:	b6 01       	movw	r22, r12
    3c0e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3c12:	9b 01       	movw	r18, r22
    3c14:	ac 01       	movw	r20, r24
    3c16:	c5 01       	movw	r24, r10
    3c18:	b4 01       	movw	r22, r8
    3c1a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3c1e:	6b 01       	movw	r12, r22
    3c20:	7c 01       	movw	r14, r24
    3c22:	2d 81       	ldd	r18, Y+5	; 0x05
    3c24:	3e 81       	ldd	r19, Y+6	; 0x06
    3c26:	4f 81       	ldd	r20, Y+7	; 0x07
    3c28:	58 85       	ldd	r21, Y+8	; 0x08
    3c2a:	ca 01       	movw	r24, r20
    3c2c:	b9 01       	movw	r22, r18
    3c2e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3c32:	9b 01       	movw	r18, r22
    3c34:	ac 01       	movw	r20, r24
    3c36:	c7 01       	movw	r24, r14
    3c38:	b6 01       	movw	r22, r12
    3c3a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3c3e:	6b 01       	movw	r12, r22
    3c40:	7c 01       	movw	r14, r24
    3c42:	a3 01       	movw	r20, r6
    3c44:	92 01       	movw	r18, r4
    3c46:	c3 01       	movw	r24, r6
    3c48:	b2 01       	movw	r22, r4
    3c4a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3c4e:	9b 01       	movw	r18, r22
    3c50:	ac 01       	movw	r20, r24
    3c52:	c7 01       	movw	r24, r14
    3c54:	b6 01       	movw	r22, r12
    3c56:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3c5a:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    3c5e:	28 96       	adiw	r28, 0x08	; 8
    3c60:	0f b6       	in	r0, 0x3f	; 63
    3c62:	f8 94       	cli
    3c64:	de bf       	out	0x3e, r29	; 62
    3c66:	0f be       	out	0x3f, r0	; 63
    3c68:	cd bf       	out	0x3d, r28	; 61
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	ff 90       	pop	r15
    3c70:	ef 90       	pop	r14
    3c72:	df 90       	pop	r13
    3c74:	cf 90       	pop	r12
    3c76:	bf 90       	pop	r11
    3c78:	af 90       	pop	r10
    3c7a:	9f 90       	pop	r9
    3c7c:	8f 90       	pop	r8
    3c7e:	7f 90       	pop	r7
    3c80:	6f 90       	pop	r6
    3c82:	5f 90       	pop	r5
    3c84:	4f 90       	pop	r4
    3c86:	08 95       	ret

00003c88 <vector_dot_product>:
    3c88:	cf 92       	push	r12
    3c8a:	df 92       	push	r13
    3c8c:	ef 92       	push	r14
    3c8e:	ff 92       	push	r15
    3c90:	0f 93       	push	r16
    3c92:	1f 93       	push	r17
    3c94:	cf 93       	push	r28
    3c96:	df 93       	push	r29
    3c98:	ec 01       	movw	r28, r24
    3c9a:	8b 01       	movw	r16, r22
    3c9c:	fb 01       	movw	r30, r22
    3c9e:	20 81       	ld	r18, Z
    3ca0:	31 81       	ldd	r19, Z+1	; 0x01
    3ca2:	42 81       	ldd	r20, Z+2	; 0x02
    3ca4:	53 81       	ldd	r21, Z+3	; 0x03
    3ca6:	68 81       	ld	r22, Y
    3ca8:	79 81       	ldd	r23, Y+1	; 0x01
    3caa:	8a 81       	ldd	r24, Y+2	; 0x02
    3cac:	9b 81       	ldd	r25, Y+3	; 0x03
    3cae:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3cb2:	6b 01       	movw	r12, r22
    3cb4:	7c 01       	movw	r14, r24
    3cb6:	f8 01       	movw	r30, r16
    3cb8:	24 81       	ldd	r18, Z+4	; 0x04
    3cba:	35 81       	ldd	r19, Z+5	; 0x05
    3cbc:	46 81       	ldd	r20, Z+6	; 0x06
    3cbe:	57 81       	ldd	r21, Z+7	; 0x07
    3cc0:	6c 81       	ldd	r22, Y+4	; 0x04
    3cc2:	7d 81       	ldd	r23, Y+5	; 0x05
    3cc4:	8e 81       	ldd	r24, Y+6	; 0x06
    3cc6:	9f 81       	ldd	r25, Y+7	; 0x07
    3cc8:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ccc:	9b 01       	movw	r18, r22
    3cce:	ac 01       	movw	r20, r24
    3cd0:	c7 01       	movw	r24, r14
    3cd2:	b6 01       	movw	r22, r12
    3cd4:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3cd8:	6b 01       	movw	r12, r22
    3cda:	7c 01       	movw	r14, r24
    3cdc:	f8 01       	movw	r30, r16
    3cde:	20 85       	ldd	r18, Z+8	; 0x08
    3ce0:	31 85       	ldd	r19, Z+9	; 0x09
    3ce2:	42 85       	ldd	r20, Z+10	; 0x0a
    3ce4:	53 85       	ldd	r21, Z+11	; 0x0b
    3ce6:	68 85       	ldd	r22, Y+8	; 0x08
    3ce8:	79 85       	ldd	r23, Y+9	; 0x09
    3cea:	8a 85       	ldd	r24, Y+10	; 0x0a
    3cec:	9b 85       	ldd	r25, Y+11	; 0x0b
    3cee:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3cf2:	9b 01       	movw	r18, r22
    3cf4:	ac 01       	movw	r20, r24
    3cf6:	c7 01       	movw	r24, r14
    3cf8:	b6 01       	movw	r22, r12
    3cfa:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3cfe:	df 91       	pop	r29
    3d00:	cf 91       	pop	r28
    3d02:	1f 91       	pop	r17
    3d04:	0f 91       	pop	r16
    3d06:	ff 90       	pop	r15
    3d08:	ef 90       	pop	r14
    3d0a:	df 90       	pop	r13
    3d0c:	cf 90       	pop	r12
    3d0e:	08 95       	ret

00003d10 <add_vectors>:
    3d10:	cf 92       	push	r12
    3d12:	df 92       	push	r13
    3d14:	ef 92       	push	r14
    3d16:	ff 92       	push	r15
    3d18:	0f 93       	push	r16
    3d1a:	1f 93       	push	r17
    3d1c:	cf 93       	push	r28
    3d1e:	df 93       	push	r29
    3d20:	ec 01       	movw	r28, r24
    3d22:	e6 2e       	mov	r14, r22
    3d24:	f7 2e       	mov	r15, r23
    3d26:	04 2f       	mov	r16, r20
    3d28:	15 2f       	mov	r17, r21
    3d2a:	6c 01       	movw	r12, r24
    3d2c:	2c e0       	ldi	r18, 0x0C	; 12
    3d2e:	c2 0e       	add	r12, r18
    3d30:	d1 1c       	adc	r13, r1
    3d32:	69 91       	ld	r22, Y+
    3d34:	79 91       	ld	r23, Y+
    3d36:	89 91       	ld	r24, Y+
    3d38:	99 91       	ld	r25, Y+
    3d3a:	f7 01       	movw	r30, r14
    3d3c:	21 91       	ld	r18, Z+
    3d3e:	31 91       	ld	r19, Z+
    3d40:	41 91       	ld	r20, Z+
    3d42:	51 91       	ld	r21, Z+
    3d44:	7f 01       	movw	r14, r30
    3d46:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3d4a:	f8 01       	movw	r30, r16
    3d4c:	61 93       	st	Z+, r22
    3d4e:	71 93       	st	Z+, r23
    3d50:	81 93       	st	Z+, r24
    3d52:	91 93       	st	Z+, r25
    3d54:	8f 01       	movw	r16, r30
    3d56:	cc 15       	cp	r28, r12
    3d58:	dd 05       	cpc	r29, r13
    3d5a:	59 f7       	brne	.-42     	; 0x3d32 <add_vectors+0x22>
    3d5c:	df 91       	pop	r29
    3d5e:	cf 91       	pop	r28
    3d60:	1f 91       	pop	r17
    3d62:	0f 91       	pop	r16
    3d64:	ff 90       	pop	r15
    3d66:	ef 90       	pop	r14
    3d68:	df 90       	pop	r13
    3d6a:	cf 90       	pop	r12
    3d6c:	08 95       	ret

00003d6e <vector_into_matrix>:
    3d6e:	4f 92       	push	r4
    3d70:	5f 92       	push	r5
    3d72:	6f 92       	push	r6
    3d74:	7f 92       	push	r7
    3d76:	8f 92       	push	r8
    3d78:	9f 92       	push	r9
    3d7a:	af 92       	push	r10
    3d7c:	bf 92       	push	r11
    3d7e:	cf 92       	push	r12
    3d80:	df 92       	push	r13
    3d82:	ef 92       	push	r14
    3d84:	ff 92       	push	r15
    3d86:	0f 93       	push	r16
    3d88:	1f 93       	push	r17
    3d8a:	cf 93       	push	r28
    3d8c:	df 93       	push	r29
    3d8e:	6a 01       	movw	r12, r20
    3d90:	86 2e       	mov	r8, r22
    3d92:	97 2e       	mov	r9, r23
    3d94:	3a 01       	movw	r6, r20
    3d96:	2c e0       	ldi	r18, 0x0C	; 12
    3d98:	62 0e       	add	r6, r18
    3d9a:	71 1c       	adc	r7, r1
    3d9c:	48 2e       	mov	r4, r24
    3d9e:	59 2e       	mov	r5, r25
    3da0:	5c 01       	movw	r10, r24
    3da2:	ec e0       	ldi	r30, 0x0C	; 12
    3da4:	ae 0e       	add	r10, r30
    3da6:	b1 1c       	adc	r11, r1
    3da8:	76 01       	movw	r14, r12
    3daa:	f6 01       	movw	r30, r12
    3dac:	10 82       	st	Z, r1
    3dae:	11 82       	std	Z+1, r1	; 0x01
    3db0:	12 82       	std	Z+2, r1	; 0x02
    3db2:	13 82       	std	Z+3, r1	; 0x03
    3db4:	c4 2d       	mov	r28, r4
    3db6:	d5 2d       	mov	r29, r5
    3db8:	84 01       	movw	r16, r8
    3dba:	69 91       	ld	r22, Y+
    3dbc:	79 91       	ld	r23, Y+
    3dbe:	89 91       	ld	r24, Y+
    3dc0:	99 91       	ld	r25, Y+
    3dc2:	f8 01       	movw	r30, r16
    3dc4:	20 81       	ld	r18, Z
    3dc6:	31 81       	ldd	r19, Z+1	; 0x01
    3dc8:	42 81       	ldd	r20, Z+2	; 0x02
    3dca:	53 81       	ldd	r21, Z+3	; 0x03
    3dcc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3dd0:	9b 01       	movw	r18, r22
    3dd2:	ac 01       	movw	r20, r24
    3dd4:	f7 01       	movw	r30, r14
    3dd6:	60 81       	ld	r22, Z
    3dd8:	71 81       	ldd	r23, Z+1	; 0x01
    3dda:	82 81       	ldd	r24, Z+2	; 0x02
    3ddc:	93 81       	ldd	r25, Z+3	; 0x03
    3dde:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    3de2:	f7 01       	movw	r30, r14
    3de4:	60 83       	st	Z, r22
    3de6:	71 83       	std	Z+1, r23	; 0x01
    3de8:	82 83       	std	Z+2, r24	; 0x02
    3dea:	93 83       	std	Z+3, r25	; 0x03
    3dec:	04 5f       	subi	r16, 0xF4	; 244
    3dee:	1f 4f       	sbci	r17, 0xFF	; 255
    3df0:	ca 15       	cp	r28, r10
    3df2:	db 05       	cpc	r29, r11
    3df4:	11 f7       	brne	.-60     	; 0x3dba <vector_into_matrix+0x4c>
    3df6:	f4 e0       	ldi	r31, 0x04	; 4
    3df8:	cf 0e       	add	r12, r31
    3dfa:	d1 1c       	adc	r13, r1
    3dfc:	24 e0       	ldi	r18, 0x04	; 4
    3dfe:	82 0e       	add	r8, r18
    3e00:	91 1c       	adc	r9, r1
    3e02:	c6 14       	cp	r12, r6
    3e04:	d7 04       	cpc	r13, r7
    3e06:	81 f6       	brne	.-96     	; 0x3da8 <vector_into_matrix+0x3a>
    3e08:	df 91       	pop	r29
    3e0a:	cf 91       	pop	r28
    3e0c:	1f 91       	pop	r17
    3e0e:	0f 91       	pop	r16
    3e10:	ff 90       	pop	r15
    3e12:	ef 90       	pop	r14
    3e14:	df 90       	pop	r13
    3e16:	cf 90       	pop	r12
    3e18:	bf 90       	pop	r11
    3e1a:	af 90       	pop	r10
    3e1c:	9f 90       	pop	r9
    3e1e:	8f 90       	pop	r8
    3e20:	7f 90       	pop	r7
    3e22:	6f 90       	pop	r6
    3e24:	5f 90       	pop	r5
    3e26:	4f 90       	pop	r4
    3e28:	08 95       	ret

00003e2a <vector_cross_product>:
    3e2a:	8f 92       	push	r8
    3e2c:	9f 92       	push	r9
    3e2e:	af 92       	push	r10
    3e30:	bf 92       	push	r11
    3e32:	ef 92       	push	r14
    3e34:	ff 92       	push	r15
    3e36:	0f 93       	push	r16
    3e38:	1f 93       	push	r17
    3e3a:	cf 93       	push	r28
    3e3c:	df 93       	push	r29
    3e3e:	ec 01       	movw	r28, r24
    3e40:	8b 01       	movw	r16, r22
    3e42:	7a 01       	movw	r14, r20
    3e44:	fb 01       	movw	r30, r22
    3e46:	20 85       	ldd	r18, Z+8	; 0x08
    3e48:	31 85       	ldd	r19, Z+9	; 0x09
    3e4a:	42 85       	ldd	r20, Z+10	; 0x0a
    3e4c:	53 85       	ldd	r21, Z+11	; 0x0b
    3e4e:	6c 81       	ldd	r22, Y+4	; 0x04
    3e50:	7d 81       	ldd	r23, Y+5	; 0x05
    3e52:	8e 81       	ldd	r24, Y+6	; 0x06
    3e54:	9f 81       	ldd	r25, Y+7	; 0x07
    3e56:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3e5a:	4b 01       	movw	r8, r22
    3e5c:	5c 01       	movw	r10, r24
    3e5e:	f8 01       	movw	r30, r16
    3e60:	24 81       	ldd	r18, Z+4	; 0x04
    3e62:	35 81       	ldd	r19, Z+5	; 0x05
    3e64:	46 81       	ldd	r20, Z+6	; 0x06
    3e66:	57 81       	ldd	r21, Z+7	; 0x07
    3e68:	68 85       	ldd	r22, Y+8	; 0x08
    3e6a:	79 85       	ldd	r23, Y+9	; 0x09
    3e6c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e6e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e70:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3e74:	9b 01       	movw	r18, r22
    3e76:	ac 01       	movw	r20, r24
    3e78:	c5 01       	movw	r24, r10
    3e7a:	b4 01       	movw	r22, r8
    3e7c:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3e80:	f7 01       	movw	r30, r14
    3e82:	60 83       	st	Z, r22
    3e84:	71 83       	std	Z+1, r23	; 0x01
    3e86:	82 83       	std	Z+2, r24	; 0x02
    3e88:	93 83       	std	Z+3, r25	; 0x03
    3e8a:	f8 01       	movw	r30, r16
    3e8c:	20 81       	ld	r18, Z
    3e8e:	31 81       	ldd	r19, Z+1	; 0x01
    3e90:	42 81       	ldd	r20, Z+2	; 0x02
    3e92:	53 81       	ldd	r21, Z+3	; 0x03
    3e94:	68 85       	ldd	r22, Y+8	; 0x08
    3e96:	79 85       	ldd	r23, Y+9	; 0x09
    3e98:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e9a:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e9c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ea0:	4b 01       	movw	r8, r22
    3ea2:	5c 01       	movw	r10, r24
    3ea4:	f8 01       	movw	r30, r16
    3ea6:	20 85       	ldd	r18, Z+8	; 0x08
    3ea8:	31 85       	ldd	r19, Z+9	; 0x09
    3eaa:	42 85       	ldd	r20, Z+10	; 0x0a
    3eac:	53 85       	ldd	r21, Z+11	; 0x0b
    3eae:	68 81       	ld	r22, Y
    3eb0:	79 81       	ldd	r23, Y+1	; 0x01
    3eb2:	8a 81       	ldd	r24, Y+2	; 0x02
    3eb4:	9b 81       	ldd	r25, Y+3	; 0x03
    3eb6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3eba:	9b 01       	movw	r18, r22
    3ebc:	ac 01       	movw	r20, r24
    3ebe:	c5 01       	movw	r24, r10
    3ec0:	b4 01       	movw	r22, r8
    3ec2:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3ec6:	f7 01       	movw	r30, r14
    3ec8:	64 83       	std	Z+4, r22	; 0x04
    3eca:	75 83       	std	Z+5, r23	; 0x05
    3ecc:	86 83       	std	Z+6, r24	; 0x06
    3ece:	97 83       	std	Z+7, r25	; 0x07
    3ed0:	f8 01       	movw	r30, r16
    3ed2:	24 81       	ldd	r18, Z+4	; 0x04
    3ed4:	35 81       	ldd	r19, Z+5	; 0x05
    3ed6:	46 81       	ldd	r20, Z+6	; 0x06
    3ed8:	57 81       	ldd	r21, Z+7	; 0x07
    3eda:	68 81       	ld	r22, Y
    3edc:	79 81       	ldd	r23, Y+1	; 0x01
    3ede:	8a 81       	ldd	r24, Y+2	; 0x02
    3ee0:	9b 81       	ldd	r25, Y+3	; 0x03
    3ee2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3ee6:	4b 01       	movw	r8, r22
    3ee8:	5c 01       	movw	r10, r24
    3eea:	f8 01       	movw	r30, r16
    3eec:	20 81       	ld	r18, Z
    3eee:	31 81       	ldd	r19, Z+1	; 0x01
    3ef0:	42 81       	ldd	r20, Z+2	; 0x02
    3ef2:	53 81       	ldd	r21, Z+3	; 0x03
    3ef4:	6c 81       	ldd	r22, Y+4	; 0x04
    3ef6:	7d 81       	ldd	r23, Y+5	; 0x05
    3ef8:	8e 81       	ldd	r24, Y+6	; 0x06
    3efa:	9f 81       	ldd	r25, Y+7	; 0x07
    3efc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3f00:	9b 01       	movw	r18, r22
    3f02:	ac 01       	movw	r20, r24
    3f04:	c5 01       	movw	r24, r10
    3f06:	b4 01       	movw	r22, r8
    3f08:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    3f0c:	f7 01       	movw	r30, r14
    3f0e:	60 87       	std	Z+8, r22	; 0x08
    3f10:	71 87       	std	Z+9, r23	; 0x09
    3f12:	82 87       	std	Z+10, r24	; 0x0a
    3f14:	93 87       	std	Z+11, r25	; 0x0b
    3f16:	df 91       	pop	r29
    3f18:	cf 91       	pop	r28
    3f1a:	1f 91       	pop	r17
    3f1c:	0f 91       	pop	r16
    3f1e:	ff 90       	pop	r15
    3f20:	ef 90       	pop	r14
    3f22:	bf 90       	pop	r11
    3f24:	af 90       	pop	r10
    3f26:	9f 90       	pop	r9
    3f28:	8f 90       	pop	r8
    3f2a:	08 95       	ret

00003f2c <scalar_into_vector>:
    3f2c:	cf 92       	push	r12
    3f2e:	df 92       	push	r13
    3f30:	ef 92       	push	r14
    3f32:	ff 92       	push	r15
    3f34:	cf 93       	push	r28
    3f36:	df 93       	push	r29
    3f38:	ec 01       	movw	r28, r24
    3f3a:	6a 01       	movw	r12, r20
    3f3c:	7b 01       	movw	r14, r22
    3f3e:	9a 01       	movw	r18, r20
    3f40:	ab 01       	movw	r20, r22
    3f42:	68 81       	ld	r22, Y
    3f44:	79 81       	ldd	r23, Y+1	; 0x01
    3f46:	8a 81       	ldd	r24, Y+2	; 0x02
    3f48:	9b 81       	ldd	r25, Y+3	; 0x03
    3f4a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3f4e:	68 83       	st	Y, r22
    3f50:	79 83       	std	Y+1, r23	; 0x01
    3f52:	8a 83       	std	Y+2, r24	; 0x02
    3f54:	9b 83       	std	Y+3, r25	; 0x03
    3f56:	a7 01       	movw	r20, r14
    3f58:	96 01       	movw	r18, r12
    3f5a:	6c 81       	ldd	r22, Y+4	; 0x04
    3f5c:	7d 81       	ldd	r23, Y+5	; 0x05
    3f5e:	8e 81       	ldd	r24, Y+6	; 0x06
    3f60:	9f 81       	ldd	r25, Y+7	; 0x07
    3f62:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3f66:	6c 83       	std	Y+4, r22	; 0x04
    3f68:	7d 83       	std	Y+5, r23	; 0x05
    3f6a:	8e 83       	std	Y+6, r24	; 0x06
    3f6c:	9f 83       	std	Y+7, r25	; 0x07
    3f6e:	a7 01       	movw	r20, r14
    3f70:	96 01       	movw	r18, r12
    3f72:	68 85       	ldd	r22, Y+8	; 0x08
    3f74:	79 85       	ldd	r23, Y+9	; 0x09
    3f76:	8a 85       	ldd	r24, Y+10	; 0x0a
    3f78:	9b 85       	ldd	r25, Y+11	; 0x0b
    3f7a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3f7e:	68 87       	std	Y+8, r22	; 0x08
    3f80:	79 87       	std	Y+9, r23	; 0x09
    3f82:	8a 87       	std	Y+10, r24	; 0x0a
    3f84:	9b 87       	std	Y+11, r25	; 0x0b
    3f86:	df 91       	pop	r29
    3f88:	cf 91       	pop	r28
    3f8a:	ff 90       	pop	r15
    3f8c:	ef 90       	pop	r14
    3f8e:	df 90       	pop	r13
    3f90:	cf 90       	pop	r12
    3f92:	08 95       	ret

00003f94 <scalar_into_quaternion>:
    3f94:	cf 92       	push	r12
    3f96:	df 92       	push	r13
    3f98:	ef 92       	push	r14
    3f9a:	ff 92       	push	r15
    3f9c:	0f 93       	push	r16
    3f9e:	1f 93       	push	r17
    3fa0:	cf 93       	push	r28
    3fa2:	df 93       	push	r29
    3fa4:	6a 01       	movw	r12, r20
    3fa6:	7b 01       	movw	r14, r22
    3fa8:	ec 01       	movw	r28, r24
    3faa:	8c 01       	movw	r16, r24
    3fac:	00 5f       	subi	r16, 0xF0	; 240
    3fae:	1f 4f       	sbci	r17, 0xFF	; 255
    3fb0:	a7 01       	movw	r20, r14
    3fb2:	96 01       	movw	r18, r12
    3fb4:	68 81       	ld	r22, Y
    3fb6:	79 81       	ldd	r23, Y+1	; 0x01
    3fb8:	8a 81       	ldd	r24, Y+2	; 0x02
    3fba:	9b 81       	ldd	r25, Y+3	; 0x03
    3fbc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    3fc0:	69 93       	st	Y+, r22
    3fc2:	79 93       	st	Y+, r23
    3fc4:	89 93       	st	Y+, r24
    3fc6:	99 93       	st	Y+, r25
    3fc8:	c0 17       	cp	r28, r16
    3fca:	d1 07       	cpc	r29, r17
    3fcc:	89 f7       	brne	.-30     	; 0x3fb0 <scalar_into_quaternion+0x1c>
    3fce:	df 91       	pop	r29
    3fd0:	cf 91       	pop	r28
    3fd2:	1f 91       	pop	r17
    3fd4:	0f 91       	pop	r16
    3fd6:	ff 90       	pop	r15
    3fd8:	ef 90       	pop	r14
    3fda:	df 90       	pop	r13
    3fdc:	cf 90       	pop	r12
    3fde:	08 95       	ret

00003fe0 <convert_unit_vector>:
    3fe0:	cf 92       	push	r12
    3fe2:	df 92       	push	r13
    3fe4:	ef 92       	push	r14
    3fe6:	ff 92       	push	r15
    3fe8:	cf 93       	push	r28
    3fea:	df 93       	push	r29
    3fec:	ec 01       	movw	r28, r24
    3fee:	2f dd       	rcall	.-1442   	; 0x3a4e <vector_norm>
    3ff0:	6b 01       	movw	r12, r22
    3ff2:	7c 01       	movw	r14, r24
    3ff4:	9b 01       	movw	r18, r22
    3ff6:	ac 01       	movw	r20, r24
    3ff8:	68 81       	ld	r22, Y
    3ffa:	79 81       	ldd	r23, Y+1	; 0x01
    3ffc:	8a 81       	ldd	r24, Y+2	; 0x02
    3ffe:	9b 81       	ldd	r25, Y+3	; 0x03
    4000:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4004:	68 83       	st	Y, r22
    4006:	79 83       	std	Y+1, r23	; 0x01
    4008:	8a 83       	std	Y+2, r24	; 0x02
    400a:	9b 83       	std	Y+3, r25	; 0x03
    400c:	a7 01       	movw	r20, r14
    400e:	96 01       	movw	r18, r12
    4010:	6c 81       	ldd	r22, Y+4	; 0x04
    4012:	7d 81       	ldd	r23, Y+5	; 0x05
    4014:	8e 81       	ldd	r24, Y+6	; 0x06
    4016:	9f 81       	ldd	r25, Y+7	; 0x07
    4018:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    401c:	6c 83       	std	Y+4, r22	; 0x04
    401e:	7d 83       	std	Y+5, r23	; 0x05
    4020:	8e 83       	std	Y+6, r24	; 0x06
    4022:	9f 83       	std	Y+7, r25	; 0x07
    4024:	a7 01       	movw	r20, r14
    4026:	96 01       	movw	r18, r12
    4028:	68 85       	ldd	r22, Y+8	; 0x08
    402a:	79 85       	ldd	r23, Y+9	; 0x09
    402c:	8a 85       	ldd	r24, Y+10	; 0x0a
    402e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4030:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4034:	68 87       	std	Y+8, r22	; 0x08
    4036:	79 87       	std	Y+9, r23	; 0x09
    4038:	8a 87       	std	Y+10, r24	; 0x0a
    403a:	9b 87       	std	Y+11, r25	; 0x0b
    403c:	df 91       	pop	r29
    403e:	cf 91       	pop	r28
    4040:	ff 90       	pop	r15
    4042:	ef 90       	pop	r14
    4044:	df 90       	pop	r13
    4046:	cf 90       	pop	r12
    4048:	08 95       	ret

0000404a <convert_unit_quaternion>:
    404a:	cf 92       	push	r12
    404c:	df 92       	push	r13
    404e:	ef 92       	push	r14
    4050:	ff 92       	push	r15
    4052:	0f 93       	push	r16
    4054:	1f 93       	push	r17
    4056:	cf 93       	push	r28
    4058:	df 93       	push	r29
    405a:	8c 01       	movw	r16, r24
    405c:	6a dd       	rcall	.-1324   	; 0x3b32 <quaternion_norm>
    405e:	6b 01       	movw	r12, r22
    4060:	7c 01       	movw	r14, r24
    4062:	e8 01       	movw	r28, r16
    4064:	00 5f       	subi	r16, 0xF0	; 240
    4066:	1f 4f       	sbci	r17, 0xFF	; 255
    4068:	a7 01       	movw	r20, r14
    406a:	96 01       	movw	r18, r12
    406c:	68 81       	ld	r22, Y
    406e:	79 81       	ldd	r23, Y+1	; 0x01
    4070:	8a 81       	ldd	r24, Y+2	; 0x02
    4072:	9b 81       	ldd	r25, Y+3	; 0x03
    4074:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4078:	69 93       	st	Y+, r22
    407a:	79 93       	st	Y+, r23
    407c:	89 93       	st	Y+, r24
    407e:	99 93       	st	Y+, r25
    4080:	c0 17       	cp	r28, r16
    4082:	d1 07       	cpc	r29, r17
    4084:	89 f7       	brne	.-30     	; 0x4068 <convert_unit_quaternion+0x1e>
    4086:	df 91       	pop	r29
    4088:	cf 91       	pop	r28
    408a:	1f 91       	pop	r17
    408c:	0f 91       	pop	r16
    408e:	ff 90       	pop	r15
    4090:	ef 90       	pop	r14
    4092:	df 90       	pop	r13
    4094:	cf 90       	pop	r12
    4096:	08 95       	ret

00004098 <read_GPS>:
}*/

void read_GPS(void){
  ///* Switch on the GPS interrupt
  
  UCSR0B |= _BV(RXCIE0);
    4098:	57 9a       	sbi	0x0a, 7	; 10
    409a:	08 95       	ret

0000409c <read_SS>:
  
  ///Configure the Sunsensor ADC IC
  //configure_SS();
  
  ///Poll the ADC for readings
  poll_SS();// make this poll_ss()
    409c:	0c 94 81 2b 	jmp	0x5702	; 0x5702 <poll_SS>
    40a0:	08 95       	ret

000040a2 <read_MM>:

void read_MM(void){
  
  //power_up_peripheral(PMAG);
  ///Poll the magnetometer for readings
  poll_MM(); //for uart 0
    40a2:	a1 cc       	rjmp	.-1726   	; 0x39e6 <poll_MM>
    40a4:	08 95       	ret

000040a6 <configure_torquer>:
}

void configure_torquer(void)
{
  ///Configure the current direction pins as output
  DDRC |= _BV(DDC3) | _BV(DDC4) | _BV(DDC5);
    40a6:	84 b3       	in	r24, 0x14	; 20
    40a8:	88 63       	ori	r24, 0x38	; 56
    40aa:	84 bb       	out	0x14, r24	; 20
  
  ///Configure the PWM pins as output
  DDRE |= _BV(DDE3) | _BV(DDE4) | _BV(DDE5);
    40ac:	82 b1       	in	r24, 0x02	; 2
    40ae:	88 63       	ori	r24, 0x38	; 56
    40b0:	82 b9       	out	0x02, r24	; 2
  
  ///Configure PWM: Phase Correct mode Prescalar = 1 Frequency = 122Hz
  TCCR3A = 0;
    40b2:	ab e8       	ldi	r26, 0x8B	; 139
    40b4:	b0 e0       	ldi	r27, 0x00	; 0
    40b6:	1c 92       	st	X, r1
  TCCR3B = 0;
    40b8:	ea e8       	ldi	r30, 0x8A	; 138
    40ba:	f0 e0       	ldi	r31, 0x00	; 0
    40bc:	10 82       	st	Z, r1
  TCCR3C = 0;
    40be:	10 92 8c 00 	sts	0x008C, r1
  TCCR3A |= _BV(COM3A1) | _BV(COM3B1) | _BV(COM3C1) | _BV(WGM31);
    40c2:	8c 91       	ld	r24, X
    40c4:	8a 6a       	ori	r24, 0xAA	; 170
    40c6:	8c 93       	st	X, r24
  TCCR3B |= _BV(WGM33) | _BV(CS30);
    40c8:	80 81       	ld	r24, Z
    40ca:	81 61       	ori	r24, 0x11	; 17
    40cc:	80 83       	st	Z, r24
  
  ///Set top as MAX 16-bit
  ICR3 = 0xFFFF;
    40ce:	8f ef       	ldi	r24, 0xFF	; 255
    40d0:	9f ef       	ldi	r25, 0xFF	; 255
    40d2:	90 93 81 00 	sts	0x0081, r25
    40d6:	80 93 80 00 	sts	0x0080, r24
  OCR3A = 0x0000;
    40da:	10 92 87 00 	sts	0x0087, r1
    40de:	10 92 86 00 	sts	0x0086, r1
  OCR3B = 0x0000;
    40e2:	10 92 85 00 	sts	0x0085, r1
    40e6:	10 92 84 00 	sts	0x0084, r1
  OCR3C = 0x0000;
    40ea:	10 92 83 00 	sts	0x0083, r1
    40ee:	10 92 82 00 	sts	0x0082, r1
  PORTC &= ~(_BV(PC3) | _BV(PC4) | _BV(PC5));
    40f2:	85 b3       	in	r24, 0x15	; 21
    40f4:	87 7c       	andi	r24, 0xC7	; 199
    40f6:	85 bb       	out	0x15, r24	; 21
    40f8:	08 95       	ret

000040fa <set_PWM>:
}

void set_PWM(void)
{
  ///Assuming X = A, Y = B, Z = C
  PORTC &= ~(_BV(PC3) | _BV(PC4) | _BV(PC5));
    40fa:	85 b3       	in	r24, 0x15	; 21
    40fc:	87 7c       	andi	r24, 0xC7	; 199
    40fe:	85 bb       	out	0x15, r24	; 21
  
  ///If current direction of axis X/Y/Z opposite of default set pin
   if(Current_state.pwm.x_dir)
    4100:	80 91 2d 05 	lds	r24, 0x052D
    4104:	88 23       	and	r24, r24
    4106:	11 f0       	breq	.+4      	; 0x410c <set_PWM+0x12>
   PORTC |= _BV(PC5);
    4108:	ad 9a       	sbi	0x15, 5	; 21
    410a:	01 c0       	rjmp	.+2      	; 0x410e <set_PWM+0x14>
   else
   PORTC &= ~(_BV(PC5));
    410c:	ad 98       	cbi	0x15, 5	; 21
   
   if(Current_state.pwm.y_dir)
    410e:	80 91 2e 05 	lds	r24, 0x052E
    4112:	88 23       	and	r24, r24
    4114:	11 f0       	breq	.+4      	; 0x411a <set_PWM+0x20>
   PORTC |= _BV(PC4);
    4116:	ac 9a       	sbi	0x15, 4	; 21
    4118:	01 c0       	rjmp	.+2      	; 0x411c <set_PWM+0x22>
   else
   PORTC &= ~(_BV(PC4));
    411a:	ac 98       	cbi	0x15, 4	; 21
   
   if(Current_state.pwm.z_dir)
    411c:	80 91 2f 05 	lds	r24, 0x052F
    4120:	88 23       	and	r24, r24
    4122:	11 f0       	breq	.+4      	; 0x4128 <set_PWM+0x2e>
   PORTC |= _BV(PC3);
    4124:	ab 9a       	sbi	0x15, 3	; 21
    4126:	01 c0       	rjmp	.+2      	; 0x412a <set_PWM+0x30>
   else
   PORTC &= ~(_BV(PC3));
    4128:	ab 98       	cbi	0x15, 3	; 21
   
  ///Set PWM values
  OCR3A = Current_state.pwm.x;
    412a:	80 91 27 05 	lds	r24, 0x0527
    412e:	90 91 28 05 	lds	r25, 0x0528
    4132:	90 93 87 00 	sts	0x0087, r25
    4136:	80 93 86 00 	sts	0x0086, r24
  OCR3B = Current_state.pwm.y;
    413a:	80 91 29 05 	lds	r24, 0x0529
    413e:	90 91 2a 05 	lds	r25, 0x052A
    4142:	90 93 85 00 	sts	0x0085, r25
    4146:	80 93 84 00 	sts	0x0084, r24
  OCR3C = Current_state.pwm.z;
    414a:	80 91 2b 05 	lds	r24, 0x052B
    414e:	90 91 2c 05 	lds	r25, 0x052C
    4152:	90 93 83 00 	sts	0x0083, r25
    4156:	80 93 82 00 	sts	0x0082, r24
    415a:	08 95       	ret

0000415c <reset_PWM>:
  PORTC &= ~(_BV(PC3) | _BV(PC4) | _BV(PC5));
}

void reset_PWM(void)
{
  Current_state.pwm.x = 0;
    415c:	10 92 28 05 	sts	0x0528, r1
    4160:	10 92 27 05 	sts	0x0527, r1
  Current_state.pwm.y = 0;
    4164:	10 92 2a 05 	sts	0x052A, r1
    4168:	10 92 29 05 	sts	0x0529, r1
  Current_state.pwm.z = 0;
    416c:	10 92 2c 05 	sts	0x052C, r1
    4170:	10 92 2b 05 	sts	0x052B, r1
  Current_state.pwm.x_dir = 0;
    4174:	10 92 2d 05 	sts	0x052D, r1
  Current_state.pwm.y_dir = 0;
    4178:	10 92 2e 05 	sts	0x052E, r1
  Current_state.pwm.z_dir = 0;
    417c:	10 92 2f 05 	sts	0x052F, r1
  set_PWM();
    4180:	bc cf       	rjmp	.-136    	; 0x40fa <set_PWM>
    4182:	08 95       	ret

00004184 <copy_gps_reading>:
    4184:	ef 92       	push	r14
    4186:	ff 92       	push	r15
    4188:	0f 93       	push	r16
    418a:	1f 93       	push	r17
    418c:	cf 93       	push	r28
    418e:	df 93       	push	r29
    4190:	cf eb       	ldi	r28, 0xBF	; 191
    4192:	d4 e0       	ldi	r29, 0x04	; 4
    4194:	18 aa       	std	Y+48, r1	; 0x30
    4196:	1f a6       	std	Y+47, r1	; 0x2f
    4198:	68 81       	ld	r22, Y
    419a:	79 81       	ldd	r23, Y+1	; 0x01
    419c:	8a 81       	ldd	r24, Y+2	; 0x02
    419e:	9b 81       	ldd	r25, Y+3	; 0x03
    41a0:	0c e2       	ldi	r16, 0x2C	; 44
    41a2:	14 e0       	ldi	r17, 0x04	; 4
    41a4:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    41a8:	20 e0       	ldi	r18, 0x00	; 0
    41aa:	30 e0       	ldi	r19, 0x00	; 0
    41ac:	48 ec       	ldi	r20, 0xC8	; 200
    41ae:	52 e4       	ldi	r21, 0x42	; 66
    41b0:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    41b4:	d8 01       	movw	r26, r16
    41b6:	6d 93       	st	X+, r22
    41b8:	7d 93       	st	X+, r23
    41ba:	8d 93       	st	X+, r24
    41bc:	9c 93       	st	X, r25
    41be:	13 97       	sbiw	r26, 0x03	; 3
    41c0:	6c 81       	ldd	r22, Y+4	; 0x04
    41c2:	7d 81       	ldd	r23, Y+5	; 0x05
    41c4:	8e 81       	ldd	r24, Y+6	; 0x06
    41c6:	9f 81       	ldd	r25, Y+7	; 0x07
    41c8:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    41cc:	20 e0       	ldi	r18, 0x00	; 0
    41ce:	30 e0       	ldi	r19, 0x00	; 0
    41d0:	48 ec       	ldi	r20, 0xC8	; 200
    41d2:	52 e4       	ldi	r21, 0x42	; 66
    41d4:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    41d8:	f8 01       	movw	r30, r16
    41da:	64 83       	std	Z+4, r22	; 0x04
    41dc:	75 83       	std	Z+5, r23	; 0x05
    41de:	86 83       	std	Z+6, r24	; 0x06
    41e0:	97 83       	std	Z+7, r25	; 0x07
    41e2:	68 85       	ldd	r22, Y+8	; 0x08
    41e4:	79 85       	ldd	r23, Y+9	; 0x09
    41e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    41e8:	9b 85       	ldd	r25, Y+11	; 0x0b
    41ea:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    41ee:	20 e0       	ldi	r18, 0x00	; 0
    41f0:	30 e0       	ldi	r19, 0x00	; 0
    41f2:	48 ec       	ldi	r20, 0xC8	; 200
    41f4:	52 e4       	ldi	r21, 0x42	; 66
    41f6:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    41fa:	d8 01       	movw	r26, r16
    41fc:	18 96       	adiw	r26, 0x08	; 8
    41fe:	6d 93       	st	X+, r22
    4200:	7d 93       	st	X+, r23
    4202:	8d 93       	st	X+, r24
    4204:	9c 93       	st	X, r25
    4206:	1b 97       	sbiw	r26, 0x0b	; 11
    4208:	6c 85       	ldd	r22, Y+12	; 0x0c
    420a:	7d 85       	ldd	r23, Y+13	; 0x0d
    420c:	8e 85       	ldd	r24, Y+14	; 0x0e
    420e:	9f 85       	ldd	r25, Y+15	; 0x0f
    4210:	0f 2e       	mov	r0, r31
    4212:	f0 e2       	ldi	r31, 0x20	; 32
    4214:	ef 2e       	mov	r14, r31
    4216:	f4 e0       	ldi	r31, 0x04	; 4
    4218:	ff 2e       	mov	r15, r31
    421a:	f0 2d       	mov	r31, r0
    421c:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    4220:	20 e0       	ldi	r18, 0x00	; 0
    4222:	30 e0       	ldi	r19, 0x00	; 0
    4224:	4a e7       	ldi	r20, 0x7A	; 122
    4226:	54 e4       	ldi	r21, 0x44	; 68
    4228:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    422c:	f7 01       	movw	r30, r14
    422e:	60 83       	st	Z, r22
    4230:	71 83       	std	Z+1, r23	; 0x01
    4232:	82 83       	std	Z+2, r24	; 0x02
    4234:	93 83       	std	Z+3, r25	; 0x03
    4236:	68 89       	ldd	r22, Y+16	; 0x10
    4238:	79 89       	ldd	r23, Y+17	; 0x11
    423a:	8a 89       	ldd	r24, Y+18	; 0x12
    423c:	9b 89       	ldd	r25, Y+19	; 0x13
    423e:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    4242:	20 e0       	ldi	r18, 0x00	; 0
    4244:	30 e0       	ldi	r19, 0x00	; 0
    4246:	4a e7       	ldi	r20, 0x7A	; 122
    4248:	54 e4       	ldi	r21, 0x44	; 68
    424a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    424e:	d7 01       	movw	r26, r14
    4250:	14 96       	adiw	r26, 0x04	; 4
    4252:	6d 93       	st	X+, r22
    4254:	7d 93       	st	X+, r23
    4256:	8d 93       	st	X+, r24
    4258:	9c 93       	st	X, r25
    425a:	17 97       	sbiw	r26, 0x07	; 7
    425c:	6c 89       	ldd	r22, Y+20	; 0x14
    425e:	7d 89       	ldd	r23, Y+21	; 0x15
    4260:	8e 89       	ldd	r24, Y+22	; 0x16
    4262:	9f 89       	ldd	r25, Y+23	; 0x17
    4264:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    4268:	20 e0       	ldi	r18, 0x00	; 0
    426a:	30 e0       	ldi	r19, 0x00	; 0
    426c:	4a e7       	ldi	r20, 0x7A	; 122
    426e:	54 e4       	ldi	r21, 0x44	; 68
    4270:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4274:	f7 01       	movw	r30, r14
    4276:	60 87       	std	Z+8, r22	; 0x08
    4278:	71 87       	std	Z+9, r23	; 0x09
    427a:	82 87       	std	Z+10, r24	; 0x0a
    427c:	93 87       	std	Z+11, r25	; 0x0b
    427e:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <get_seconds_since_equinox>
    4282:	e8 e4       	ldi	r30, 0x48	; 72
    4284:	f4 e0       	ldi	r31, 0x04	; 4
    4286:	d8 01       	movw	r26, r16
    4288:	4d 91       	ld	r20, X+
    428a:	5d 91       	ld	r21, X+
    428c:	6d 91       	ld	r22, X+
    428e:	7c 91       	ld	r23, X
    4290:	13 97       	sbiw	r26, 0x03	; 3
    4292:	40 83       	st	Z, r20
    4294:	51 83       	std	Z+1, r21	; 0x01
    4296:	62 83       	std	Z+2, r22	; 0x02
    4298:	73 83       	std	Z+3, r23	; 0x03
    429a:	14 96       	adiw	r26, 0x04	; 4
    429c:	4d 91       	ld	r20, X+
    429e:	5d 91       	ld	r21, X+
    42a0:	6d 91       	ld	r22, X+
    42a2:	7c 91       	ld	r23, X
    42a4:	17 97       	sbiw	r26, 0x07	; 7
    42a6:	44 83       	std	Z+4, r20	; 0x04
    42a8:	55 83       	std	Z+5, r21	; 0x05
    42aa:	66 83       	std	Z+6, r22	; 0x06
    42ac:	77 83       	std	Z+7, r23	; 0x07
    42ae:	18 96       	adiw	r26, 0x08	; 8
    42b0:	4d 91       	ld	r20, X+
    42b2:	5d 91       	ld	r21, X+
    42b4:	6d 91       	ld	r22, X+
    42b6:	7c 91       	ld	r23, X
    42b8:	1b 97       	sbiw	r26, 0x0b	; 11
    42ba:	40 87       	std	Z+8, r20	; 0x08
    42bc:	51 87       	std	Z+9, r21	; 0x09
    42be:	62 87       	std	Z+10, r22	; 0x0a
    42c0:	73 87       	std	Z+11, r23	; 0x0b
    42c2:	64 e5       	ldi	r22, 0x54	; 84
    42c4:	74 e0       	ldi	r23, 0x04	; 4
    42c6:	c8 01       	movw	r24, r16
    42c8:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <ecef2eci>
    42cc:	6c e3       	ldi	r22, 0x3C	; 60
    42ce:	74 e0       	ldi	r23, 0x04	; 4
    42d0:	c7 01       	movw	r24, r14
    42d2:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <ecef2eci>
    42d6:	68 8d       	ldd	r22, Y+24	; 0x18
    42d8:	79 8d       	ldd	r23, Y+25	; 0x19
    42da:	8a 8d       	ldd	r24, Y+26	; 0x1a
    42dc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    42de:	03 eb       	ldi	r16, 0xB3	; 179
    42e0:	14 e0       	ldi	r17, 0x04	; 4
    42e2:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    42e6:	20 e8       	ldi	r18, 0x80	; 128
    42e8:	36 e9       	ldi	r19, 0x96	; 150
    42ea:	48 e1       	ldi	r20, 0x18	; 24
    42ec:	5b e4       	ldi	r21, 0x4B	; 75
    42ee:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    42f2:	25 e3       	ldi	r18, 0x35	; 53
    42f4:	3a ef       	ldi	r19, 0xFA	; 250
    42f6:	4e e8       	ldi	r20, 0x8E	; 142
    42f8:	5c e3       	ldi	r21, 0x3C	; 60
    42fa:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    42fe:	f8 01       	movw	r30, r16
    4300:	60 83       	st	Z, r22
    4302:	71 83       	std	Z+1, r23	; 0x01
    4304:	82 83       	std	Z+2, r24	; 0x02
    4306:	93 83       	std	Z+3, r25	; 0x03
    4308:	6c 8d       	ldd	r22, Y+28	; 0x1c
    430a:	7d 8d       	ldd	r23, Y+29	; 0x1d
    430c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    430e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4310:	0e 94 9a 33 	call	0x6734	; 0x6734 <__floatsisf>
    4314:	20 e8       	ldi	r18, 0x80	; 128
    4316:	36 e9       	ldi	r19, 0x96	; 150
    4318:	48 e1       	ldi	r20, 0x18	; 24
    431a:	5b e4       	ldi	r21, 0x4B	; 75
    431c:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4320:	25 e3       	ldi	r18, 0x35	; 53
    4322:	3a ef       	ldi	r19, 0xFA	; 250
    4324:	4e e8       	ldi	r20, 0x8E	; 142
    4326:	5c e3       	ldi	r21, 0x3C	; 60
    4328:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    432c:	d8 01       	movw	r26, r16
    432e:	14 96       	adiw	r26, 0x04	; 4
    4330:	6d 93       	st	X+, r22
    4332:	7d 93       	st	X+, r23
    4334:	8d 93       	st	X+, r24
    4336:	9c 93       	st	X, r25
    4338:	17 97       	sbiw	r26, 0x07	; 7
    433a:	10 92 27 01 	sts	0x0127, r1
    433e:	df 91       	pop	r29
    4340:	cf 91       	pop	r28
    4342:	1f 91       	pop	r17
    4344:	0f 91       	pop	r16
    4346:	ff 90       	pop	r15
    4348:	ef 90       	pop	r14
    434a:	08 95       	ret

0000434c <sgp_get_acceleration>:
    434c:	2f 92       	push	r2
    434e:	3f 92       	push	r3
    4350:	4f 92       	push	r4
    4352:	5f 92       	push	r5
    4354:	6f 92       	push	r6
    4356:	7f 92       	push	r7
    4358:	8f 92       	push	r8
    435a:	9f 92       	push	r9
    435c:	af 92       	push	r10
    435e:	bf 92       	push	r11
    4360:	cf 92       	push	r12
    4362:	df 92       	push	r13
    4364:	ef 92       	push	r14
    4366:	ff 92       	push	r15
    4368:	0f 93       	push	r16
    436a:	1f 93       	push	r17
    436c:	cf 93       	push	r28
    436e:	df 93       	push	r29
    4370:	cd b7       	in	r28, 0x3d	; 61
    4372:	de b7       	in	r29, 0x3e	; 62
    4374:	64 97       	sbiw	r28, 0x14	; 20
    4376:	0f b6       	in	r0, 0x3f	; 63
    4378:	f8 94       	cli
    437a:	de bf       	out	0x3e, r29	; 62
    437c:	0f be       	out	0x3f, r0	; 63
    437e:	cd bf       	out	0x3d, r28	; 61
    4380:	1c 01       	movw	r2, r24
    4382:	88 e4       	ldi	r24, 0x48	; 72
    4384:	94 e0       	ldi	r25, 0x04	; 4
    4386:	63 db       	rcall	.-2362   	; 0x3a4e <vector_norm>
    4388:	2b 01       	movw	r4, r22
    438a:	3c 01       	movw	r6, r24
    438c:	9b 01       	movw	r18, r22
    438e:	ac 01       	movw	r20, r24
    4390:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4394:	9b 01       	movw	r18, r22
    4396:	ac 01       	movw	r20, r24
    4398:	61 eb       	ldi	r22, 0xB1	; 177
    439a:	7a e1       	ldi	r23, 0x1A	; 26
    439c:	86 e7       	ldi	r24, 0x76	; 118
    439e:	91 e5       	ldi	r25, 0x51	; 81
    43a0:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    43a4:	6d 87       	std	Y+13, r22	; 0x0d
    43a6:	7e 87       	std	Y+14, r23	; 0x0e
    43a8:	8f 87       	std	Y+15, r24	; 0x0f
    43aa:	98 8b       	std	Y+16, r25	; 0x10
    43ac:	20 e0       	ldi	r18, 0x00	; 0
    43ae:	30 e0       	ldi	r19, 0x00	; 0
    43b0:	40 e4       	ldi	r20, 0x40	; 64
    43b2:	50 e4       	ldi	r21, 0x40	; 64
    43b4:	c3 01       	movw	r24, r6
    43b6:	b2 01       	movw	r22, r4
    43b8:	0e 94 80 35 	call	0x6b00	; 0x6b00 <pow>
    43bc:	6b 01       	movw	r12, r22
    43be:	7c 01       	movw	r14, r24
    43c0:	20 e0       	ldi	r18, 0x00	; 0
    43c2:	30 e0       	ldi	r19, 0x00	; 0
    43c4:	40 e8       	ldi	r20, 0x80	; 128
    43c6:	50 e4       	ldi	r21, 0x40	; 64
    43c8:	c3 01       	movw	r24, r6
    43ca:	b2 01       	movw	r22, r4
    43cc:	0e 94 80 35 	call	0x6b00	; 0x6b00 <pow>
    43d0:	2b 01       	movw	r4, r22
    43d2:	3c 01       	movw	r6, r24
    43d4:	08 e4       	ldi	r16, 0x48	; 72
    43d6:	14 e0       	ldi	r17, 0x04	; 4
    43d8:	f8 01       	movw	r30, r16
    43da:	80 84       	ldd	r8, Z+8	; 0x08
    43dc:	91 84       	ldd	r9, Z+9	; 0x09
    43de:	a2 84       	ldd	r10, Z+10	; 0x0a
    43e0:	b3 84       	ldd	r11, Z+11	; 0x0b
    43e2:	a5 01       	movw	r20, r10
    43e4:	94 01       	movw	r18, r8
    43e6:	c5 01       	movw	r24, r10
    43e8:	b4 01       	movw	r22, r8
    43ea:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    43ee:	28 e9       	ldi	r18, 0x98	; 152
    43f0:	38 e0       	ldi	r19, 0x08	; 8
    43f2:	45 e0       	ldi	r20, 0x05	; 5
    43f4:	5c e3       	ldi	r21, 0x3C	; 60
    43f6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    43fa:	2a ec       	ldi	r18, 0xCA	; 202
    43fc:	3e ef       	ldi	r19, 0xFE	; 254
    43fe:	43 e1       	ldi	r20, 0x13	; 19
    4400:	56 e5       	ldi	r21, 0x56	; 86
    4402:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4406:	a3 01       	movw	r20, r6
    4408:	92 01       	movw	r18, r4
    440a:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    440e:	69 8b       	std	Y+17, r22	; 0x11
    4410:	7a 8b       	std	Y+18, r23	; 0x12
    4412:	8b 8b       	std	Y+19, r24	; 0x13
    4414:	9c 8b       	std	Y+20, r25	; 0x14
    4416:	20 e0       	ldi	r18, 0x00	; 0
    4418:	30 e0       	ldi	r19, 0x00	; 0
    441a:	40 e8       	ldi	r20, 0x80	; 128
    441c:	5f e3       	ldi	r21, 0x3F	; 63
    441e:	6d 85       	ldd	r22, Y+13	; 0x0d
    4420:	7e 85       	ldd	r23, Y+14	; 0x0e
    4422:	8f 85       	ldd	r24, Y+15	; 0x0f
    4424:	98 89       	ldd	r25, Y+16	; 0x10
    4426:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    442a:	29 89       	ldd	r18, Y+17	; 0x11
    442c:	3a 89       	ldd	r19, Y+18	; 0x12
    442e:	4b 89       	ldd	r20, Y+19	; 0x13
    4430:	5c 89       	ldd	r21, Y+20	; 0x14
    4432:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    4436:	2b 01       	movw	r4, r22
    4438:	3c 01       	movw	r6, r24
    443a:	21 ef       	ldi	r18, 0xF1	; 241
    443c:	39 e4       	ldi	r19, 0x49	; 73
    443e:	45 eb       	ldi	r20, 0xB5	; 181
    4440:	57 ed       	ldi	r21, 0xD7	; 215
    4442:	f8 01       	movw	r30, r16
    4444:	60 81       	ld	r22, Z
    4446:	71 81       	ldd	r23, Z+1	; 0x01
    4448:	82 81       	ldd	r24, Z+2	; 0x02
    444a:	93 81       	ldd	r25, Z+3	; 0x03
    444c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4450:	a3 01       	movw	r20, r6
    4452:	92 01       	movw	r18, r4
    4454:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4458:	a7 01       	movw	r20, r14
    445a:	96 01       	movw	r18, r12
    445c:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4460:	69 83       	std	Y+1, r22	; 0x01
    4462:	7a 83       	std	Y+2, r23	; 0x02
    4464:	8b 83       	std	Y+3, r24	; 0x03
    4466:	9c 83       	std	Y+4, r25	; 0x04
    4468:	21 ef       	ldi	r18, 0xF1	; 241
    446a:	39 e4       	ldi	r19, 0x49	; 73
    446c:	45 eb       	ldi	r20, 0xB5	; 181
    446e:	57 ed       	ldi	r21, 0xD7	; 215
    4470:	f8 01       	movw	r30, r16
    4472:	64 81       	ldd	r22, Z+4	; 0x04
    4474:	75 81       	ldd	r23, Z+5	; 0x05
    4476:	86 81       	ldd	r24, Z+6	; 0x06
    4478:	97 81       	ldd	r25, Z+7	; 0x07
    447a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    447e:	9b 01       	movw	r18, r22
    4480:	ac 01       	movw	r20, r24
    4482:	c3 01       	movw	r24, r6
    4484:	b2 01       	movw	r22, r4
    4486:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    448a:	a7 01       	movw	r20, r14
    448c:	96 01       	movw	r18, r12
    448e:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4492:	6d 83       	std	Y+5, r22	; 0x05
    4494:	7e 83       	std	Y+6, r23	; 0x06
    4496:	8f 83       	std	Y+7, r24	; 0x07
    4498:	98 87       	std	Y+8, r25	; 0x08
    449a:	21 ef       	ldi	r18, 0xF1	; 241
    449c:	39 e4       	ldi	r19, 0x49	; 73
    449e:	45 eb       	ldi	r20, 0xB5	; 181
    44a0:	57 ed       	ldi	r21, 0xD7	; 215
    44a2:	c5 01       	movw	r24, r10
    44a4:	b4 01       	movw	r22, r8
    44a6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    44aa:	2b 01       	movw	r4, r22
    44ac:	3c 01       	movw	r6, r24
    44ae:	20 e0       	ldi	r18, 0x00	; 0
    44b0:	30 e0       	ldi	r19, 0x00	; 0
    44b2:	40 e4       	ldi	r20, 0x40	; 64
    44b4:	50 e4       	ldi	r21, 0x40	; 64
    44b6:	6d 85       	ldd	r22, Y+13	; 0x0d
    44b8:	7e 85       	ldd	r23, Y+14	; 0x0e
    44ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    44bc:	98 89       	ldd	r25, Y+16	; 0x10
    44be:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    44c2:	20 e0       	ldi	r18, 0x00	; 0
    44c4:	30 e0       	ldi	r19, 0x00	; 0
    44c6:	40 e8       	ldi	r20, 0x80	; 128
    44c8:	5f e3       	ldi	r21, 0x3F	; 63
    44ca:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    44ce:	29 89       	ldd	r18, Y+17	; 0x11
    44d0:	3a 89       	ldd	r19, Y+18	; 0x12
    44d2:	4b 89       	ldd	r20, Y+19	; 0x13
    44d4:	5c 89       	ldd	r21, Y+20	; 0x14
    44d6:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    44da:	9b 01       	movw	r18, r22
    44dc:	ac 01       	movw	r20, r24
    44de:	c3 01       	movw	r24, r6
    44e0:	b2 01       	movw	r22, r4
    44e2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    44e6:	a7 01       	movw	r20, r14
    44e8:	96 01       	movw	r18, r12
    44ea:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    44ee:	69 87       	std	Y+9, r22	; 0x09
    44f0:	7a 87       	std	Y+10, r23	; 0x0a
    44f2:	8b 87       	std	Y+11, r24	; 0x0b
    44f4:	9c 87       	std	Y+12, r25	; 0x0c
    44f6:	b1 01       	movw	r22, r2
    44f8:	ce 01       	movw	r24, r28
    44fa:	01 96       	adiw	r24, 0x01	; 1
    44fc:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <ecef2eci>
    4500:	64 96       	adiw	r28, 0x14	; 20
    4502:	0f b6       	in	r0, 0x3f	; 63
    4504:	f8 94       	cli
    4506:	de bf       	out	0x3e, r29	; 62
    4508:	0f be       	out	0x3f, r0	; 63
    450a:	cd bf       	out	0x3d, r28	; 61
    450c:	df 91       	pop	r29
    450e:	cf 91       	pop	r28
    4510:	1f 91       	pop	r17
    4512:	0f 91       	pop	r16
    4514:	ff 90       	pop	r15
    4516:	ef 90       	pop	r14
    4518:	df 90       	pop	r13
    451a:	cf 90       	pop	r12
    451c:	bf 90       	pop	r11
    451e:	af 90       	pop	r10
    4520:	9f 90       	pop	r9
    4522:	8f 90       	pop	r8
    4524:	7f 90       	pop	r7
    4526:	6f 90       	pop	r6
    4528:	5f 90       	pop	r5
    452a:	4f 90       	pop	r4
    452c:	3f 90       	pop	r3
    452e:	2f 90       	pop	r2
    4530:	08 95       	ret

00004532 <sgp_orbit_propagator>:
    4532:	7f 92       	push	r7
    4534:	8f 92       	push	r8
    4536:	9f 92       	push	r9
    4538:	af 92       	push	r10
    453a:	bf 92       	push	r11
    453c:	cf 92       	push	r12
    453e:	df 92       	push	r13
    4540:	ef 92       	push	r14
    4542:	ff 92       	push	r15
    4544:	0f 93       	push	r16
    4546:	1f 93       	push	r17
    4548:	cf 93       	push	r28
    454a:	df 93       	push	r29
    454c:	cd b7       	in	r28, 0x3d	; 61
    454e:	de b7       	in	r29, 0x3e	; 62
    4550:	68 97       	sbiw	r28, 0x18	; 24
    4552:	0f b6       	in	r0, 0x3f	; 63
    4554:	f8 94       	cli
    4556:	de bf       	out	0x3e, r29	; 62
    4558:	0f be       	out	0x3f, r0	; 63
    455a:	cd bf       	out	0x3d, r28	; 61
    455c:	0f 2e       	mov	r0, r31
    455e:	fa e0       	ldi	r31, 0x0A	; 10
    4560:	7f 2e       	mov	r7, r31
    4562:	f0 2d       	mov	r31, r0
    4564:	0f 2e       	mov	r0, r31
    4566:	f8 e4       	ldi	r31, 0x48	; 72
    4568:	cf 2e       	mov	r12, r31
    456a:	f4 e0       	ldi	r31, 0x04	; 4
    456c:	df 2e       	mov	r13, r31
    456e:	f0 2d       	mov	r31, r0
    4570:	0f 2e       	mov	r0, r31
    4572:	f4 e5       	ldi	r31, 0x54	; 84
    4574:	af 2e       	mov	r10, r31
    4576:	f4 e0       	ldi	r31, 0x04	; 4
    4578:	bf 2e       	mov	r11, r31
    457a:	f0 2d       	mov	r31, r0
    457c:	ce 01       	movw	r24, r28
    457e:	01 96       	adiw	r24, 0x01	; 1
    4580:	e5 de       	rcall	.-566    	; 0x434c <sgp_get_acceleration>
    4582:	be 01       	movw	r22, r28
    4584:	63 5f       	subi	r22, 0xF3	; 243
    4586:	7f 4f       	sbci	r23, 0xFF	; 255
    4588:	8c e3       	ldi	r24, 0x3C	; 60
    458a:	94 e0       	ldi	r25, 0x04	; 4
    458c:	30 da       	rcall	.-2976   	; 0x39ee <copy_vector>
    458e:	ce 01       	movw	r24, r28
    4590:	01 96       	adiw	r24, 0x01	; 1
    4592:	4c 01       	movw	r8, r24
    4594:	0f 2e       	mov	r0, r31
    4596:	fc e3       	ldi	r31, 0x3C	; 60
    4598:	ef 2e       	mov	r14, r31
    459a:	f4 e0       	ldi	r31, 0x04	; 4
    459c:	ff 2e       	mov	r15, r31
    459e:	f0 2d       	mov	r31, r0
    45a0:	87 01       	movw	r16, r14
    45a2:	f4 01       	movw	r30, r8
    45a4:	61 91       	ld	r22, Z+
    45a6:	71 91       	ld	r23, Z+
    45a8:	81 91       	ld	r24, Z+
    45aa:	91 91       	ld	r25, Z+
    45ac:	4f 01       	movw	r8, r30
    45ae:	2d ec       	ldi	r18, 0xCD	; 205
    45b0:	3c ec       	ldi	r19, 0xCC	; 204
    45b2:	4c e4       	ldi	r20, 0x4C	; 76
    45b4:	5e e3       	ldi	r21, 0x3E	; 62
    45b6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    45ba:	9b 01       	movw	r18, r22
    45bc:	ac 01       	movw	r20, r24
    45be:	f8 01       	movw	r30, r16
    45c0:	60 81       	ld	r22, Z
    45c2:	71 81       	ldd	r23, Z+1	; 0x01
    45c4:	82 81       	ldd	r24, Z+2	; 0x02
    45c6:	93 81       	ldd	r25, Z+3	; 0x03
    45c8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    45cc:	f8 01       	movw	r30, r16
    45ce:	61 93       	st	Z+, r22
    45d0:	71 93       	st	Z+, r23
    45d2:	81 93       	st	Z+, r24
    45d4:	91 93       	st	Z+, r25
    45d6:	8f 01       	movw	r16, r30
    45d8:	ec 15       	cp	r30, r12
    45da:	fd 05       	cpc	r31, r13
    45dc:	11 f7       	brne	.-60     	; 0x45a2 <sgp_orbit_propagator+0x70>
    45de:	ce 01       	movw	r24, r28
    45e0:	0d 96       	adiw	r24, 0x0d	; 13
    45e2:	4c 01       	movw	r8, r24
    45e4:	85 01       	movw	r16, r10
    45e6:	f7 01       	movw	r30, r14
    45e8:	61 91       	ld	r22, Z+
    45ea:	71 91       	ld	r23, Z+
    45ec:	81 91       	ld	r24, Z+
    45ee:	91 91       	ld	r25, Z+
    45f0:	7f 01       	movw	r14, r30
    45f2:	f4 01       	movw	r30, r8
    45f4:	21 91       	ld	r18, Z+
    45f6:	31 91       	ld	r19, Z+
    45f8:	41 91       	ld	r20, Z+
    45fa:	51 91       	ld	r21, Z+
    45fc:	4f 01       	movw	r8, r30
    45fe:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4602:	20 e0       	ldi	r18, 0x00	; 0
    4604:	30 e0       	ldi	r19, 0x00	; 0
    4606:	40 e0       	ldi	r20, 0x00	; 0
    4608:	5f e3       	ldi	r21, 0x3F	; 63
    460a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    460e:	2d ec       	ldi	r18, 0xCD	; 205
    4610:	3c ec       	ldi	r19, 0xCC	; 204
    4612:	4c e4       	ldi	r20, 0x4C	; 76
    4614:	5e e3       	ldi	r21, 0x3E	; 62
    4616:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    461a:	9b 01       	movw	r18, r22
    461c:	ac 01       	movw	r20, r24
    461e:	f8 01       	movw	r30, r16
    4620:	60 81       	ld	r22, Z
    4622:	71 81       	ldd	r23, Z+1	; 0x01
    4624:	82 81       	ldd	r24, Z+2	; 0x02
    4626:	93 81       	ldd	r25, Z+3	; 0x03
    4628:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    462c:	f8 01       	movw	r30, r16
    462e:	61 93       	st	Z+, r22
    4630:	71 93       	st	Z+, r23
    4632:	81 93       	st	Z+, r24
    4634:	91 93       	st	Z+, r25
    4636:	8f 01       	movw	r16, r30
    4638:	ec 14       	cp	r14, r12
    463a:	fd 04       	cpc	r15, r13
    463c:	a1 f6       	brne	.-88     	; 0x45e6 <sgp_orbit_propagator+0xb4>
    463e:	7a 94       	dec	r7
    4640:	71 10       	cpse	r7, r1
    4642:	9c cf       	rjmp	.-200    	; 0x457c <sgp_orbit_propagator+0x4a>
    4644:	68 96       	adiw	r28, 0x18	; 24
    4646:	0f b6       	in	r0, 0x3f	; 63
    4648:	f8 94       	cli
    464a:	de bf       	out	0x3e, r29	; 62
    464c:	0f be       	out	0x3f, r0	; 63
    464e:	cd bf       	out	0x3d, r28	; 61
    4650:	df 91       	pop	r29
    4652:	cf 91       	pop	r28
    4654:	1f 91       	pop	r17
    4656:	0f 91       	pop	r16
    4658:	ff 90       	pop	r15
    465a:	ef 90       	pop	r14
    465c:	df 90       	pop	r13
    465e:	cf 90       	pop	r12
    4660:	bf 90       	pop	r11
    4662:	af 90       	pop	r10
    4664:	9f 90       	pop	r9
    4666:	8f 90       	pop	r8
    4668:	7f 90       	pop	r7
    466a:	08 95       	ret

0000466c <sun_vector_estimator>:
    466c:	4f 92       	push	r4
    466e:	5f 92       	push	r5
    4670:	6f 92       	push	r6
    4672:	7f 92       	push	r7
    4674:	8f 92       	push	r8
    4676:	9f 92       	push	r9
    4678:	af 92       	push	r10
    467a:	bf 92       	push	r11
    467c:	cf 92       	push	r12
    467e:	df 92       	push	r13
    4680:	ef 92       	push	r14
    4682:	ff 92       	push	r15
    4684:	0f 93       	push	r16
    4686:	1f 93       	push	r17
    4688:	cf 93       	push	r28
    468a:	df 93       	push	r29
    468c:	cd b7       	in	r28, 0x3d	; 61
    468e:	de b7       	in	r29, 0x3e	; 62
    4690:	2c 97       	sbiw	r28, 0x0c	; 12
    4692:	0f b6       	in	r0, 0x3f	; 63
    4694:	f8 94       	cli
    4696:	de bf       	out	0x3e, r29	; 62
    4698:	0f be       	out	0x3f, r0	; 63
    469a:	cd bf       	out	0x3d, r28	; 61
    469c:	8c 01       	movw	r16, r24
    469e:	20 91 a4 04 	lds	r18, 0x04A4
    46a2:	30 91 a5 04 	lds	r19, 0x04A5
    46a6:	40 91 a6 04 	lds	r20, 0x04A6
    46aa:	50 91 a7 04 	lds	r21, 0x04A7
    46ae:	60 91 a8 04 	lds	r22, 0x04A8
    46b2:	70 91 a9 04 	lds	r23, 0x04A9
    46b6:	80 91 aa 04 	lds	r24, 0x04AA
    46ba:	90 91 ab 04 	lds	r25, 0x04AB
    46be:	0e 94 d5 33 	call	0x67aa	; 0x67aa <__floatundisf>
    46c2:	20 e0       	ldi	r18, 0x00	; 0
    46c4:	30 ec       	ldi	r19, 0xC0	; 192
    46c6:	48 ea       	ldi	r20, 0xA8	; 168
    46c8:	57 e4       	ldi	r21, 0x47	; 71
    46ca:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    46ce:	2b ed       	ldi	r18, 0xDB	; 219
    46d0:	3f e0       	ldi	r19, 0x0F	; 15
    46d2:	49 ec       	ldi	r20, 0xC9	; 201
    46d4:	50 e4       	ldi	r21, 0x40	; 64
    46d6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    46da:	21 ed       	ldi	r18, 0xD1	; 209
    46dc:	30 ea       	ldi	r19, 0xA0	; 160
    46de:	46 eb       	ldi	r20, 0xB6	; 182
    46e0:	53 e4       	ldi	r21, 0x43	; 67
    46e2:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    46e6:	4b 01       	movw	r8, r22
    46e8:	5c 01       	movw	r10, r24
    46ea:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    46ee:	20 e9       	ldi	r18, 0x90	; 144
    46f0:	3e e2       	ldi	r19, 0x2E	; 46
    46f2:	4c ec       	ldi	r20, 0xCC	; 204
    46f4:	5e e3       	ldi	r21, 0x3E	; 62
    46f6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    46fa:	0e 94 7f 32 	call	0x64fe	; 0x64fe <asin>
    46fe:	6b 01       	movw	r12, r22
    4700:	7c 01       	movw	r14, r24
    4702:	c5 01       	movw	r24, r10
    4704:	b4 01       	movw	r22, r8
    4706:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    470a:	2b 01       	movw	r4, r22
    470c:	3c 01       	movw	r6, r24
    470e:	c7 01       	movw	r24, r14
    4710:	b6 01       	movw	r22, r12
    4712:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    4716:	4b 01       	movw	r8, r22
    4718:	5c 01       	movw	r10, r24
    471a:	9b 01       	movw	r18, r22
    471c:	ac 01       	movw	r20, r24
    471e:	c3 01       	movw	r24, r6
    4720:	b2 01       	movw	r22, r4
    4722:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4726:	0e 94 0c 32 	call	0x6418	; 0x6418 <acos>
    472a:	2b 01       	movw	r4, r22
    472c:	3c 01       	movw	r6, r24
    472e:	20 e0       	ldi	r18, 0x00	; 0
    4730:	30 e0       	ldi	r19, 0x00	; 0
    4732:	a9 01       	movw	r20, r18
    4734:	c7 01       	movw	r24, r14
    4736:	b6 01       	movw	r22, r12
    4738:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    473c:	88 23       	and	r24, r24
    473e:	54 f4       	brge	.+20     	; 0x4754 <sun_vector_estimator+0xe8>
    4740:	a3 01       	movw	r20, r6
    4742:	92 01       	movw	r18, r4
    4744:	6b ed       	ldi	r22, 0xDB	; 219
    4746:	7f e0       	ldi	r23, 0x0F	; 15
    4748:	89 ec       	ldi	r24, 0xC9	; 201
    474a:	90 e4       	ldi	r25, 0x40	; 64
    474c:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    4750:	2b 01       	movw	r4, r22
    4752:	3c 01       	movw	r6, r24
    4754:	c3 01       	movw	r24, r6
    4756:	b2 01       	movw	r22, r4
    4758:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    475c:	9b 01       	movw	r18, r22
    475e:	ac 01       	movw	r20, r24
    4760:	c5 01       	movw	r24, r10
    4762:	b4 01       	movw	r22, r8
    4764:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4768:	69 83       	std	Y+1, r22	; 0x01
    476a:	7a 83       	std	Y+2, r23	; 0x02
    476c:	8b 83       	std	Y+3, r24	; 0x03
    476e:	9c 83       	std	Y+4, r25	; 0x04
    4770:	c3 01       	movw	r24, r6
    4772:	b2 01       	movw	r22, r4
    4774:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    4778:	9b 01       	movw	r18, r22
    477a:	ac 01       	movw	r20, r24
    477c:	c5 01       	movw	r24, r10
    477e:	b4 01       	movw	r22, r8
    4780:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4784:	6d 83       	std	Y+5, r22	; 0x05
    4786:	7e 83       	std	Y+6, r23	; 0x06
    4788:	8f 83       	std	Y+7, r24	; 0x07
    478a:	98 87       	std	Y+8, r25	; 0x08
    478c:	c7 01       	movw	r24, r14
    478e:	b6 01       	movw	r22, r12
    4790:	0e 94 cc 35 	call	0x6b98	; 0x6b98 <sin>
    4794:	69 87       	std	Y+9, r22	; 0x09
    4796:	7a 87       	std	Y+10, r23	; 0x0a
    4798:	8b 87       	std	Y+11, r24	; 0x0b
    479a:	9c 87       	std	Y+12, r25	; 0x0c
    479c:	2d ec       	ldi	r18, 0xCD	; 205
    479e:	3c ec       	ldi	r19, 0xCC	; 204
    47a0:	4c ec       	ldi	r20, 0xCC	; 204
    47a2:	5d e3       	ldi	r21, 0x3D	; 61
    47a4:	60 91 38 04 	lds	r22, 0x0438
    47a8:	70 91 39 04 	lds	r23, 0x0439
    47ac:	80 91 3a 04 	lds	r24, 0x043A
    47b0:	90 91 3b 04 	lds	r25, 0x043B
    47b4:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    47b8:	60 93 38 04 	sts	0x0438, r22
    47bc:	70 93 39 04 	sts	0x0439, r23
    47c0:	80 93 3a 04 	sts	0x043A, r24
    47c4:	90 93 3b 04 	sts	0x043B, r25
    47c8:	98 01       	movw	r18, r16
    47ca:	ae 01       	movw	r20, r28
    47cc:	4f 5f       	subi	r20, 0xFF	; 255
    47ce:	5f 4f       	sbci	r21, 0xFF	; 255
    47d0:	6c e3       	ldi	r22, 0x3C	; 60
    47d2:	74 e0       	ldi	r23, 0x04	; 4
    47d4:	84 e5       	ldi	r24, 0x54	; 84
    47d6:	94 e0       	ldi	r25, 0x04	; 4
    47d8:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <eci2orbit>
    47dc:	2c 96       	adiw	r28, 0x0c	; 12
    47de:	0f b6       	in	r0, 0x3f	; 63
    47e0:	f8 94       	cli
    47e2:	de bf       	out	0x3e, r29	; 62
    47e4:	0f be       	out	0x3f, r0	; 63
    47e6:	cd bf       	out	0x3d, r28	; 61
    47e8:	df 91       	pop	r29
    47ea:	cf 91       	pop	r28
    47ec:	1f 91       	pop	r17
    47ee:	0f 91       	pop	r16
    47f0:	ff 90       	pop	r15
    47f2:	ef 90       	pop	r14
    47f4:	df 90       	pop	r13
    47f6:	cf 90       	pop	r12
    47f8:	bf 90       	pop	r11
    47fa:	af 90       	pop	r10
    47fc:	9f 90       	pop	r9
    47fe:	8f 90       	pop	r8
    4800:	7f 90       	pop	r7
    4802:	6f 90       	pop	r6
    4804:	5f 90       	pop	r5
    4806:	4f 90       	pop	r4
    4808:	08 95       	ret

0000480a <magnetic_field_estimator>:
    480a:	8f 92       	push	r8
    480c:	9f 92       	push	r9
    480e:	af 92       	push	r10
    4810:	bf 92       	push	r11
    4812:	ef 92       	push	r14
    4814:	ff 92       	push	r15
    4816:	0f 93       	push	r16
    4818:	1f 93       	push	r17
    481a:	cf 93       	push	r28
    481c:	df 93       	push	r29
    481e:	cd b7       	in	r28, 0x3d	; 61
    4820:	de b7       	in	r29, 0x3e	; 62
    4822:	e0 97       	sbiw	r28, 0x30	; 48
    4824:	0f b6       	in	r0, 0x3f	; 63
    4826:	f8 94       	cli
    4828:	de bf       	out	0x3e, r29	; 62
    482a:	0f be       	out	0x3f, r0	; 63
    482c:	cd bf       	out	0x3d, r28	; 61
    482e:	7c 01       	movw	r14, r24
    4830:	20 91 9c 04 	lds	r18, 0x049C
    4834:	30 91 9d 04 	lds	r19, 0x049D
    4838:	40 91 9e 04 	lds	r20, 0x049E
    483c:	50 91 9f 04 	lds	r21, 0x049F
    4840:	60 91 a0 04 	lds	r22, 0x04A0
    4844:	70 91 a1 04 	lds	r23, 0x04A1
    4848:	80 91 a2 04 	lds	r24, 0x04A2
    484c:	90 91 a3 04 	lds	r25, 0x04A3
    4850:	0e 94 d5 33 	call	0x67aa	; 0x67aa <__floatundisf>
    4854:	20 ec       	ldi	r18, 0xC0	; 192
    4856:	39 e9       	ldi	r19, 0x99	; 153
    4858:	40 ef       	ldi	r20, 0xF0	; 240
    485a:	5b e4       	ldi	r21, 0x4B	; 75
    485c:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4860:	20 e0       	ldi	r18, 0x00	; 0
    4862:	30 e0       	ldi	r19, 0x00	; 0
    4864:	4c ef       	ldi	r20, 0xFC	; 252
    4866:	54 e4       	ldi	r21, 0x44	; 68
    4868:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    486c:	4b 01       	movw	r8, r22
    486e:	5c 01       	movw	r10, r24
    4870:	be 01       	movw	r22, r28
    4872:	6f 5f       	subi	r22, 0xFF	; 255
    4874:	7f 4f       	sbci	r23, 0xFF	; 255
    4876:	84 e5       	ldi	r24, 0x54	; 84
    4878:	94 e0       	ldi	r25, 0x04	; 4
    487a:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <eci2ecef>
    487e:	be 01       	movw	r22, r28
    4880:	63 5f       	subi	r22, 0xF3	; 243
    4882:	7f 4f       	sbci	r23, 0xFF	; 255
    4884:	ce 01       	movw	r24, r28
    4886:	01 96       	adiw	r24, 0x01	; 1
    4888:	0e 94 03 10 	call	0x2006	; 0x2006 <ecef2lla>
    488c:	63 eb       	ldi	r22, 0xB3	; 179
    488e:	74 e0       	ldi	r23, 0x04	; 4
    4890:	ce 01       	movw	r24, r28
    4892:	0d 96       	adiw	r24, 0x0d	; 13
    4894:	ac d8       	rcall	.-3752   	; 0x39ee <copy_vector>
    4896:	8e 01       	movw	r16, r28
    4898:	07 5e       	subi	r16, 0xE7	; 231
    489a:	1f 4f       	sbci	r17, 0xFF	; 255
    489c:	28 e0       	ldi	r18, 0x08	; 8
    489e:	b5 01       	movw	r22, r10
    48a0:	a4 01       	movw	r20, r8
    48a2:	ce 01       	movw	r24, r28
    48a4:	0d 96       	adiw	r24, 0x0d	; 13
    48a6:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <igrf>
    48aa:	ae 01       	movw	r20, r28
    48ac:	4f 5f       	subi	r20, 0xFF	; 255
    48ae:	5f 4f       	sbci	r21, 0xFF	; 255
    48b0:	be 01       	movw	r22, r28
    48b2:	63 5f       	subi	r22, 0xF3	; 243
    48b4:	7f 4f       	sbci	r23, 0xFF	; 255
    48b6:	c8 01       	movw	r24, r16
    48b8:	0e 94 8d 11 	call	0x231a	; 0x231a <ned2ecef>
    48bc:	be 01       	movw	r22, r28
    48be:	6b 5d       	subi	r22, 0xDB	; 219
    48c0:	7f 4f       	sbci	r23, 0xFF	; 255
    48c2:	ce 01       	movw	r24, r28
    48c4:	01 96       	adiw	r24, 0x01	; 1
    48c6:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <ecef2eci>
    48ca:	97 01       	movw	r18, r14
    48cc:	ae 01       	movw	r20, r28
    48ce:	4b 5d       	subi	r20, 0xDB	; 219
    48d0:	5f 4f       	sbci	r21, 0xFF	; 255
    48d2:	6c e3       	ldi	r22, 0x3C	; 60
    48d4:	74 e0       	ldi	r23, 0x04	; 4
    48d6:	84 e5       	ldi	r24, 0x54	; 84
    48d8:	94 e0       	ldi	r25, 0x04	; 4
    48da:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <eci2orbit>
    48de:	e0 96       	adiw	r28, 0x30	; 48
    48e0:	0f b6       	in	r0, 0x3f	; 63
    48e2:	f8 94       	cli
    48e4:	de bf       	out	0x3e, r29	; 62
    48e6:	0f be       	out	0x3f, r0	; 63
    48e8:	cd bf       	out	0x3d, r28	; 61
    48ea:	df 91       	pop	r29
    48ec:	cf 91       	pop	r28
    48ee:	1f 91       	pop	r17
    48f0:	0f 91       	pop	r16
    48f2:	ff 90       	pop	r15
    48f4:	ef 90       	pop	r14
    48f6:	bf 90       	pop	r11
    48f8:	af 90       	pop	r10
    48fa:	9f 90       	pop	r9
    48fc:	8f 90       	pop	r8
    48fe:	08 95       	ret

00004900 <light_cal>:
    4900:	ef 92       	push	r14
    4902:	ff 92       	push	r15
    4904:	1f 93       	push	r17
    4906:	cf 93       	push	r28
    4908:	df 93       	push	r29
    490a:	cc ef       	ldi	r28, 0xFC	; 252
    490c:	d4 e0       	ldi	r29, 0x04	; 4
    490e:	0f 2e       	mov	r0, r31
    4910:	f4 e1       	ldi	r31, 0x14	; 20
    4912:	ef 2e       	mov	r14, r31
    4914:	f5 e0       	ldi	r31, 0x05	; 5
    4916:	ff 2e       	mov	r15, r31
    4918:	f0 2d       	mov	r31, r0
    491a:	10 e0       	ldi	r17, 0x00	; 0
    491c:	69 91       	ld	r22, Y+
    491e:	79 91       	ld	r23, Y+
    4920:	89 91       	ld	r24, Y+
    4922:	99 91       	ld	r25, Y+
    4924:	27 e2       	ldi	r18, 0x27	; 39
    4926:	31 e3       	ldi	r19, 0x31	; 49
    4928:	48 ec       	ldi	r20, 0xC8	; 200
    492a:	5e e3       	ldi	r21, 0x3E	; 62
    492c:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    4930:	88 23       	and	r24, r24
    4932:	0c f4       	brge	.+2      	; 0x4936 <light_cal+0x36>
    4934:	1f 5f       	subi	r17, 0xFF	; 255
    4936:	ce 15       	cp	r28, r14
    4938:	df 05       	cpc	r29, r15
    493a:	81 f7       	brne	.-32     	; 0x491c <light_cal+0x1c>
    493c:	81 e0       	ldi	r24, 0x01	; 1
    493e:	16 30       	cpi	r17, 0x06	; 6
    4940:	09 f4       	brne	.+2      	; 0x4944 <light_cal+0x44>
    4942:	80 e0       	ldi	r24, 0x00	; 0
    4944:	df 91       	pop	r29
    4946:	cf 91       	pop	r28
    4948:	1f 91       	pop	r17
    494a:	ff 90       	pop	r15
    494c:	ef 90       	pop	r14
    494e:	08 95       	ret

00004950 <quest>:
    4950:	2f 92       	push	r2
    4952:	3f 92       	push	r3
    4954:	4f 92       	push	r4
    4956:	5f 92       	push	r5
    4958:	6f 92       	push	r6
    495a:	7f 92       	push	r7
    495c:	8f 92       	push	r8
    495e:	9f 92       	push	r9
    4960:	af 92       	push	r10
    4962:	bf 92       	push	r11
    4964:	cf 92       	push	r12
    4966:	df 92       	push	r13
    4968:	ef 92       	push	r14
    496a:	ff 92       	push	r15
    496c:	0f 93       	push	r16
    496e:	1f 93       	push	r17
    4970:	cf 93       	push	r28
    4972:	df 93       	push	r29
    4974:	cd b7       	in	r28, 0x3d	; 61
    4976:	de b7       	in	r29, 0x3e	; 62
    4978:	cb 57       	subi	r28, 0x7B	; 123
    497a:	d1 09       	sbc	r29, r1
    497c:	0f b6       	in	r0, 0x3f	; 63
    497e:	f8 94       	cli
    4980:	de bf       	out	0x3e, r29	; 62
    4982:	0f be       	out	0x3f, r0	; 63
    4984:	cd bf       	out	0x3d, r28	; 61
    4986:	af 96       	adiw	r28, 0x2f	; 47
    4988:	9f af       	std	Y+63, r25	; 0x3f
    498a:	8e af       	std	Y+62, r24	; 0x3e
    498c:	af 97       	sbiw	r28, 0x2f	; 47
    498e:	e5 96       	adiw	r28, 0x35	; 53
    4990:	7f af       	std	Y+63, r23	; 0x3f
    4992:	6e af       	std	Y+62, r22	; 0x3e
    4994:	e5 97       	sbiw	r28, 0x35	; 53
    4996:	e3 96       	adiw	r28, 0x33	; 51
    4998:	5f af       	std	Y+63, r21	; 0x3f
    499a:	4e af       	std	Y+62, r20	; 0x3e
    499c:	e3 97       	sbiw	r28, 0x33	; 51
    499e:	79 01       	movw	r14, r18
    49a0:	0c ef       	ldi	r16, 0xFC	; 252
    49a2:	14 e0       	ldi	r17, 0x04	; 4
    49a4:	0f 2e       	mov	r0, r31
    49a6:	f4 e1       	ldi	r31, 0x14	; 20
    49a8:	cf 2e       	mov	r12, r31
    49aa:	f5 e0       	ldi	r31, 0x05	; 5
    49ac:	df 2e       	mov	r13, r31
    49ae:	f0 2d       	mov	r31, r0
    49b0:	b1 2c       	mov	r11, r1
    49b2:	f8 01       	movw	r30, r16
    49b4:	61 91       	ld	r22, Z+
    49b6:	71 91       	ld	r23, Z+
    49b8:	81 91       	ld	r24, Z+
    49ba:	91 91       	ld	r25, Z+
    49bc:	8f 01       	movw	r16, r30
    49be:	27 e2       	ldi	r18, 0x27	; 39
    49c0:	31 e3       	ldi	r19, 0x31	; 49
    49c2:	48 ec       	ldi	r20, 0xC8	; 200
    49c4:	5e e3       	ldi	r21, 0x3E	; 62
    49c6:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    49ca:	88 23       	and	r24, r24
    49cc:	0c f4       	brge	.+2      	; 0x49d0 <quest+0x80>
    49ce:	b3 94       	inc	r11
    49d0:	0c 15       	cp	r16, r12
    49d2:	1d 05       	cpc	r17, r13
    49d4:	71 f7       	brne	.-36     	; 0x49b2 <quest+0x62>
    49d6:	f1 e0       	ldi	r31, 0x01	; 1
    49d8:	e8 96       	adiw	r28, 0x38	; 56
    49da:	ff af       	std	Y+63, r31	; 0x3f
    49dc:	e8 97       	sbiw	r28, 0x38	; 56
    49de:	26 e0       	ldi	r18, 0x06	; 6
    49e0:	b2 12       	cpse	r11, r18
    49e2:	03 c0       	rjmp	.+6      	; 0x49ea <quest+0x9a>
    49e4:	e8 96       	adiw	r28, 0x38	; 56
    49e6:	1f ae       	std	Y+63, r1	; 0x3f
    49e8:	e8 97       	sbiw	r28, 0x38	; 56
    49ea:	e8 96       	adiw	r28, 0x38	; 56
    49ec:	8f ad       	ldd	r24, Y+63	; 0x3f
    49ee:	e8 97       	sbiw	r28, 0x38	; 56
    49f0:	88 23       	and	r24, r24
    49f2:	09 f4       	brne	.+2      	; 0x49f6 <quest+0xa6>
    49f4:	11 c3       	rjmp	.+1570   	; 0x5018 <quest+0x6c8>
    49f6:	f7 01       	movw	r30, r14
    49f8:	80 81       	ld	r24, Z
    49fa:	81 11       	cpse	r24, r1
    49fc:	0f c0       	rjmp	.+30     	; 0x4a1c <quest+0xcc>
    49fe:	80 91 60 04 	lds	r24, 0x0460
    4a02:	90 91 61 04 	lds	r25, 0x0461
    4a06:	02 96       	adiw	r24, 0x02	; 2
    4a08:	90 93 61 04 	sts	0x0461, r25
    4a0c:	80 93 60 04 	sts	0x0460, r24
    4a10:	8c 32       	cpi	r24, 0x2C	; 44
    4a12:	91 40       	sbci	r25, 0x01	; 1
    4a14:	19 f4       	brne	.+6      	; 0x4a1c <quest+0xcc>
    4a16:	81 e0       	ldi	r24, 0x01	; 1
    4a18:	f7 01       	movw	r30, r14
    4a1a:	80 83       	st	Z, r24
    4a1c:	80 91 12 01 	lds	r24, 0x0112
    4a20:	81 11       	cpse	r24, r1
    4a22:	13 c3       	rjmp	.+1574   	; 0x504a <quest+0x6fa>
    4a24:	f7 01       	movw	r30, r14
    4a26:	10 82       	st	Z, r1
    4a28:	10 92 61 04 	sts	0x0461, r1
    4a2c:	10 92 60 04 	sts	0x0460, r1
    4a30:	0c c3       	rjmp	.+1560   	; 0x504a <quest+0x6fa>
    4a32:	89 86       	std	Y+9, r8	; 0x09
    4a34:	9a 86       	std	Y+10, r9	; 0x0a
    4a36:	ab 86       	std	Y+11, r10	; 0x0b
    4a38:	bc 86       	std	Y+12, r11	; 0x0c
    4a3a:	08 c0       	rjmp	.+16     	; 0x4a4c <quest+0xfc>
    4a3c:	f7 fa       	bst	r15, 7
    4a3e:	f0 94       	com	r15
    4a40:	f7 f8       	bld	r15, 7
    4a42:	f0 94       	com	r15
    4a44:	c9 86       	std	Y+9, r12	; 0x09
    4a46:	da 86       	std	Y+10, r13	; 0x0a
    4a48:	eb 86       	std	Y+11, r14	; 0x0b
    4a4a:	fc 86       	std	Y+12, r15	; 0x0c
    4a4c:	8e 01       	movw	r16, r28
    4a4e:	0f 5f       	subi	r16, 0xFF	; 255
    4a50:	1f 4f       	sbci	r17, 0xFF	; 255
    4a52:	1e 01       	movw	r2, r28
    4a54:	fd e0       	ldi	r31, 0x0D	; 13
    4a56:	2f 0e       	add	r2, r31
    4a58:	31 1c       	adc	r3, r1
    4a5a:	f8 01       	movw	r30, r16
    4a5c:	c0 80       	ld	r12, Z
    4a5e:	d1 80       	ldd	r13, Z+1	; 0x01
    4a60:	e2 80       	ldd	r14, Z+2	; 0x02
    4a62:	f3 80       	ldd	r15, Z+3	; 0x03
    4a64:	46 01       	movw	r8, r12
    4a66:	57 01       	movw	r10, r14
    4a68:	e8 94       	clt
    4a6a:	b7 f8       	bld	r11, 7
    4a6c:	26 e6       	ldi	r18, 0x66	; 102
    4a6e:	36 e6       	ldi	r19, 0x66	; 102
    4a70:	46 e8       	ldi	r20, 0x86	; 134
    4a72:	5f e3       	ldi	r21, 0x3F	; 63
    4a74:	c5 01       	movw	r24, r10
    4a76:	b4 01       	movw	r22, r8
    4a78:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    4a7c:	21 ec       	ldi	r18, 0xC1	; 193
    4a7e:	3a ec       	ldi	r19, 0xCA	; 202
    4a80:	41 ec       	ldi	r20, 0xC1	; 193
    4a82:	5f e3       	ldi	r21, 0x3F	; 63
    4a84:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4a88:	0e 94 0c 32 	call	0x6418	; 0x6418 <acos>
    4a8c:	20 e0       	ldi	r18, 0x00	; 0
    4a8e:	30 e0       	ldi	r19, 0x00	; 0
    4a90:	44 e3       	ldi	r20, 0x34	; 52
    4a92:	53 e4       	ldi	r21, 0x43	; 67
    4a94:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4a98:	20 ed       	ldi	r18, 0xD0	; 208
    4a9a:	3f e0       	ldi	r19, 0x0F	; 15
    4a9c:	49 e4       	ldi	r20, 0x49	; 73
    4a9e:	50 e4       	ldi	r21, 0x40	; 64
    4aa0:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4aa4:	26 e6       	ldi	r18, 0x66	; 102
    4aa6:	36 e6       	ldi	r19, 0x66	; 102
    4aa8:	4e e1       	ldi	r20, 0x1E	; 30
    4aaa:	51 e4       	ldi	r21, 0x41	; 65
    4aac:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4ab0:	23 e3       	ldi	r18, 0x33	; 51
    4ab2:	33 e3       	ldi	r19, 0x33	; 51
    4ab4:	43 ed       	ldi	r20, 0xD3	; 211
    4ab6:	5f e3       	ldi	r21, 0x3F	; 63
    4ab8:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4abc:	20 ed       	ldi	r18, 0xD0	; 208
    4abe:	3f e0       	ldi	r19, 0x0F	; 15
    4ac0:	49 e4       	ldi	r20, 0x49	; 73
    4ac2:	50 e4       	ldi	r21, 0x40	; 64
    4ac4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4ac8:	20 e0       	ldi	r18, 0x00	; 0
    4aca:	30 e0       	ldi	r19, 0x00	; 0
    4acc:	44 e3       	ldi	r20, 0x34	; 52
    4ace:	53 e4       	ldi	r21, 0x43	; 67
    4ad0:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4ad4:	2b 01       	movw	r4, r22
    4ad6:	3c 01       	movw	r6, r24
    4ad8:	20 e0       	ldi	r18, 0x00	; 0
    4ada:	30 e0       	ldi	r19, 0x00	; 0
    4adc:	a9 01       	movw	r20, r18
    4ade:	c7 01       	movw	r24, r14
    4ae0:	b6 01       	movw	r22, r12
    4ae2:	0e 94 f8 32 	call	0x65f0	; 0x65f0 <__cmpsf2>
    4ae6:	88 23       	and	r24, r24
    4ae8:	c1 f0       	breq	.+48     	; 0x4b1a <quest+0x1ca>
    4aea:	c3 01       	movw	r24, r6
    4aec:	b2 01       	movw	r22, r4
    4aee:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    4af2:	2b 01       	movw	r4, r22
    4af4:	3c 01       	movw	r6, r24
    4af6:	a7 01       	movw	r20, r14
    4af8:	96 01       	movw	r18, r12
    4afa:	c5 01       	movw	r24, r10
    4afc:	b4 01       	movw	r22, r8
    4afe:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4b02:	9b 01       	movw	r18, r22
    4b04:	ac 01       	movw	r20, r24
    4b06:	c3 01       	movw	r24, r6
    4b08:	b2 01       	movw	r22, r4
    4b0a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4b0e:	f8 01       	movw	r30, r16
    4b10:	60 83       	st	Z, r22
    4b12:	71 83       	std	Z+1, r23	; 0x01
    4b14:	82 83       	std	Z+2, r24	; 0x02
    4b16:	93 83       	std	Z+3, r25	; 0x03
    4b18:	09 c0       	rjmp	.+18     	; 0x4b2c <quest+0x1dc>
    4b1a:	c3 01       	movw	r24, r6
    4b1c:	b2 01       	movw	r22, r4
    4b1e:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <cos>
    4b22:	f8 01       	movw	r30, r16
    4b24:	60 83       	st	Z, r22
    4b26:	71 83       	std	Z+1, r23	; 0x01
    4b28:	82 83       	std	Z+2, r24	; 0x02
    4b2a:	93 83       	std	Z+3, r25	; 0x03
    4b2c:	0c 5f       	subi	r16, 0xFC	; 252
    4b2e:	1f 4f       	sbci	r17, 0xFF	; 255
    4b30:	02 15       	cp	r16, r2
    4b32:	13 05       	cpc	r17, r3
    4b34:	09 f0       	breq	.+2      	; 0x4b38 <quest+0x1e8>
    4b36:	91 cf       	rjmp	.-222    	; 0x4a5a <quest+0x10a>
    4b38:	ce 01       	movw	r24, r28
    4b3a:	01 96       	adiw	r24, 0x01	; 1
    4b3c:	51 da       	rcall	.-2910   	; 0x3fe0 <convert_unit_vector>
    4b3e:	80 91 14 05 	lds	r24, 0x0514
    4b42:	90 91 15 05 	lds	r25, 0x0515
    4b46:	a0 91 16 05 	lds	r26, 0x0516
    4b4a:	b0 91 17 05 	lds	r27, 0x0517
    4b4e:	8d 8b       	std	Y+21, r24	; 0x15
    4b50:	9e 8b       	std	Y+22, r25	; 0x16
    4b52:	af 8b       	std	Y+23, r26	; 0x17
    4b54:	b8 8f       	std	Y+24, r27	; 0x18
    4b56:	80 91 18 05 	lds	r24, 0x0518
    4b5a:	90 91 19 05 	lds	r25, 0x0519
    4b5e:	a0 91 1a 05 	lds	r26, 0x051A
    4b62:	b0 91 1b 05 	lds	r27, 0x051B
    4b66:	b0 58       	subi	r27, 0x80	; 128
    4b68:	89 8b       	std	Y+17, r24	; 0x11
    4b6a:	9a 8b       	std	Y+18, r25	; 0x12
    4b6c:	ab 8b       	std	Y+19, r26	; 0x13
    4b6e:	bc 8b       	std	Y+20, r27	; 0x14
    4b70:	80 91 1c 05 	lds	r24, 0x051C
    4b74:	90 91 1d 05 	lds	r25, 0x051D
    4b78:	a0 91 1e 05 	lds	r26, 0x051E
    4b7c:	b0 91 1f 05 	lds	r27, 0x051F
    4b80:	8d 87       	std	Y+13, r24	; 0x0d
    4b82:	9e 87       	std	Y+14, r25	; 0x0e
    4b84:	af 87       	std	Y+15, r26	; 0x0f
    4b86:	b8 8b       	std	Y+16, r27	; 0x10
    4b88:	ae 01       	movw	r20, r28
    4b8a:	47 5e       	subi	r20, 0xE7	; 231
    4b8c:	5f 4f       	sbci	r21, 0xFF	; 255
    4b8e:	be 01       	movw	r22, r28
    4b90:	6f 5f       	subi	r22, 0xFF	; 255
    4b92:	7f 4f       	sbci	r23, 0xFF	; 255
    4b94:	ce 01       	movw	r24, r28
    4b96:	0d 96       	adiw	r24, 0x0d	; 13
    4b98:	48 d9       	rcall	.-3440   	; 0x3e2a <vector_cross_product>
    4b9a:	ce 01       	movw	r24, r28
    4b9c:	49 96       	adiw	r24, 0x19	; 25
    4b9e:	20 da       	rcall	.-3008   	; 0x3fe0 <convert_unit_vector>
    4ba0:	ae 01       	movw	r20, r28
    4ba2:	4b 5d       	subi	r20, 0xDB	; 219
    4ba4:	5f 4f       	sbci	r21, 0xFF	; 255
    4ba6:	e5 96       	adiw	r28, 0x35	; 53
    4ba8:	6e ad       	ldd	r22, Y+62	; 0x3e
    4baa:	7f ad       	ldd	r23, Y+63	; 0x3f
    4bac:	e5 97       	sbiw	r28, 0x35	; 53
    4bae:	af 96       	adiw	r28, 0x2f	; 47
    4bb0:	8e ad       	ldd	r24, Y+62	; 0x3e
    4bb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4bb4:	af 97       	sbiw	r28, 0x2f	; 47
    4bb6:	39 d9       	rcall	.-3470   	; 0x3e2a <vector_cross_product>
    4bb8:	ce 01       	movw	r24, r28
    4bba:	85 96       	adiw	r24, 0x25	; 37
    4bbc:	11 da       	rcall	.-3038   	; 0x3fe0 <convert_unit_vector>
    4bbe:	be 01       	movw	r22, r28
    4bc0:	6b 5d       	subi	r22, 0xDB	; 219
    4bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    4bc4:	ce 01       	movw	r24, r28
    4bc6:	49 96       	adiw	r24, 0x19	; 25
    4bc8:	5f d8       	rcall	.-3906   	; 0x3c88 <vector_dot_product>
    4bca:	6b 01       	movw	r12, r22
    4bcc:	7c 01       	movw	r14, r24
    4bce:	af 96       	adiw	r28, 0x2f	; 47
    4bd0:	6e ad       	ldd	r22, Y+62	; 0x3e
    4bd2:	7f ad       	ldd	r23, Y+63	; 0x3f
    4bd4:	af 97       	sbiw	r28, 0x2f	; 47
    4bd6:	ce 01       	movw	r24, r28
    4bd8:	0d 96       	adiw	r24, 0x0d	; 13
    4bda:	56 d8       	rcall	.-3924   	; 0x3c88 <vector_dot_product>
    4bdc:	4b 01       	movw	r8, r22
    4bde:	5c 01       	movw	r10, r24
    4be0:	e5 96       	adiw	r28, 0x35	; 53
    4be2:	6e ad       	ldd	r22, Y+62	; 0x3e
    4be4:	7f ad       	ldd	r23, Y+63	; 0x3f
    4be6:	e5 97       	sbiw	r28, 0x35	; 53
    4be8:	ce 01       	movw	r24, r28
    4bea:	01 96       	adiw	r24, 0x01	; 1
    4bec:	4d d8       	rcall	.-3942   	; 0x3c88 <vector_dot_product>
    4bee:	2b 01       	movw	r4, r22
    4bf0:	3c 01       	movw	r6, r24
    4bf2:	20 e0       	ldi	r18, 0x00	; 0
    4bf4:	30 e0       	ldi	r19, 0x00	; 0
    4bf6:	40 e8       	ldi	r20, 0x80	; 128
    4bf8:	5f e3       	ldi	r21, 0x3F	; 63
    4bfa:	c7 01       	movw	r24, r14
    4bfc:	b6 01       	movw	r22, r12
    4bfe:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4c02:	6b 01       	movw	r12, r22
    4c04:	7c 01       	movw	r14, r24
    4c06:	26 e6       	ldi	r18, 0x66	; 102
    4c08:	36 e6       	ldi	r19, 0x66	; 102
    4c0a:	46 e6       	ldi	r20, 0x66	; 102
    4c0c:	5f e3       	ldi	r21, 0x3F	; 63
    4c0e:	c5 01       	movw	r24, r10
    4c10:	b4 01       	movw	r22, r8
    4c12:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4c16:	4b 01       	movw	r8, r22
    4c18:	5c 01       	movw	r10, r24
    4c1a:	20 ed       	ldi	r18, 0xD0	; 208
    4c1c:	3c ec       	ldi	r19, 0xCC	; 204
    4c1e:	4c ec       	ldi	r20, 0xCC	; 204
    4c20:	5d e3       	ldi	r21, 0x3D	; 61
    4c22:	c3 01       	movw	r24, r6
    4c24:	b2 01       	movw	r22, r4
    4c26:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4c2a:	9b 01       	movw	r18, r22
    4c2c:	ac 01       	movw	r20, r24
    4c2e:	c5 01       	movw	r24, r10
    4c30:	b4 01       	movw	r22, r8
    4c32:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4c36:	9b 01       	movw	r18, r22
    4c38:	ac 01       	movw	r20, r24
    4c3a:	c7 01       	movw	r24, r14
    4c3c:	b6 01       	movw	r22, r12
    4c3e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4c42:	4b 01       	movw	r8, r22
    4c44:	5c 01       	movw	r10, r24
    4c46:	ae 01       	movw	r20, r28
    4c48:	47 5b       	subi	r20, 0xB7	; 183
    4c4a:	5f 4f       	sbci	r21, 0xFF	; 255
    4c4c:	af 96       	adiw	r28, 0x2f	; 47
    4c4e:	6e ad       	ldd	r22, Y+62	; 0x3e
    4c50:	7f ad       	ldd	r23, Y+63	; 0x3f
    4c52:	af 97       	sbiw	r28, 0x2f	; 47
    4c54:	ce 01       	movw	r24, r28
    4c56:	0d 96       	adiw	r24, 0x0d	; 13
    4c58:	e8 d8       	rcall	.-3632   	; 0x3e2a <vector_cross_product>
    4c5a:	ae 01       	movw	r20, r28
    4c5c:	4b 5a       	subi	r20, 0xAB	; 171
    4c5e:	5f 4f       	sbci	r21, 0xFF	; 255
    4c60:	e5 96       	adiw	r28, 0x35	; 53
    4c62:	6e ad       	ldd	r22, Y+62	; 0x3e
    4c64:	7f ad       	ldd	r23, Y+63	; 0x3f
    4c66:	e5 97       	sbiw	r28, 0x35	; 53
    4c68:	ce 01       	movw	r24, r28
    4c6a:	01 96       	adiw	r24, 0x01	; 1
    4c6c:	de d8       	rcall	.-3652   	; 0x3e2a <vector_cross_product>
    4c6e:	ce 01       	movw	r24, r28
    4c70:	87 5b       	subi	r24, 0xB7	; 183
    4c72:	9f 4f       	sbci	r25, 0xFF	; 255
    4c74:	7c 01       	movw	r14, r24
    4c76:	8e 01       	movw	r16, r28
    4c78:	0b 5a       	subi	r16, 0xAB	; 171
    4c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    4c7c:	68 01       	movw	r12, r16
    4c7e:	9c e0       	ldi	r25, 0x0C	; 12
    4c80:	c9 0e       	add	r12, r25
    4c82:	d1 1c       	adc	r13, r1
    4c84:	f7 01       	movw	r30, r14
    4c86:	61 91       	ld	r22, Z+
    4c88:	71 91       	ld	r23, Z+
    4c8a:	81 91       	ld	r24, Z+
    4c8c:	91 91       	ld	r25, Z+
    4c8e:	7f 01       	movw	r14, r30
    4c90:	26 e6       	ldi	r18, 0x66	; 102
    4c92:	36 e6       	ldi	r19, 0x66	; 102
    4c94:	46 e6       	ldi	r20, 0x66	; 102
    4c96:	5f e3       	ldi	r21, 0x3F	; 63
    4c98:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4c9c:	2b 01       	movw	r4, r22
    4c9e:	3c 01       	movw	r6, r24
    4ca0:	20 ed       	ldi	r18, 0xD0	; 208
    4ca2:	3c ec       	ldi	r19, 0xCC	; 204
    4ca4:	4c ec       	ldi	r20, 0xCC	; 204
    4ca6:	5d e3       	ldi	r21, 0x3D	; 61
    4ca8:	f8 01       	movw	r30, r16
    4caa:	60 81       	ld	r22, Z
    4cac:	71 81       	ldd	r23, Z+1	; 0x01
    4cae:	82 81       	ldd	r24, Z+2	; 0x02
    4cb0:	93 81       	ldd	r25, Z+3	; 0x03
    4cb2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4cb6:	9b 01       	movw	r18, r22
    4cb8:	ac 01       	movw	r20, r24
    4cba:	c3 01       	movw	r24, r6
    4cbc:	b2 01       	movw	r22, r4
    4cbe:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4cc2:	f8 01       	movw	r30, r16
    4cc4:	61 93       	st	Z+, r22
    4cc6:	71 93       	st	Z+, r23
    4cc8:	81 93       	st	Z+, r24
    4cca:	91 93       	st	Z+, r25
    4ccc:	8f 01       	movw	r16, r30
    4cce:	ec 15       	cp	r30, r12
    4cd0:	fd 05       	cpc	r31, r13
    4cd2:	c1 f6       	brne	.-80     	; 0x4c84 <quest+0x334>
    4cd4:	ae 01       	movw	r20, r28
    4cd6:	4f 5c       	subi	r20, 0xCF	; 207
    4cd8:	5f 4f       	sbci	r21, 0xFF	; 255
    4cda:	be 01       	movw	r22, r28
    4cdc:	6b 5d       	subi	r22, 0xDB	; 219
    4cde:	7f 4f       	sbci	r23, 0xFF	; 255
    4ce0:	ce 01       	movw	r24, r28
    4ce2:	49 96       	adiw	r24, 0x19	; 25
    4ce4:	a2 d8       	rcall	.-3772   	; 0x3e2a <vector_cross_product>
    4ce6:	be 01       	movw	r22, r28
    4ce8:	6b 5a       	subi	r22, 0xAB	; 171
    4cea:	7f 4f       	sbci	r23, 0xFF	; 255
    4cec:	ce 01       	movw	r24, r28
    4cee:	c1 96       	adiw	r24, 0x31	; 49
    4cf0:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4cf4:	a5 01       	movw	r20, r10
    4cf6:	94 01       	movw	r18, r8
    4cf8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4cfc:	6b 01       	movw	r12, r22
    4cfe:	7c 01       	movw	r14, r24
    4d00:	ae 01       	movw	r20, r28
    4d02:	43 5c       	subi	r20, 0xC3	; 195
    4d04:	5f 4f       	sbci	r21, 0xFF	; 255
    4d06:	be 01       	movw	r22, r28
    4d08:	6b 5d       	subi	r22, 0xDB	; 219
    4d0a:	7f 4f       	sbci	r23, 0xFF	; 255
    4d0c:	ce 01       	movw	r24, r28
    4d0e:	49 96       	adiw	r24, 0x19	; 25
    4d10:	0e 94 88 1e 	call	0x3d10	; 0x3d10 <add_vectors>
    4d14:	be 01       	movw	r22, r28
    4d16:	6b 5a       	subi	r22, 0xAB	; 171
    4d18:	7f 4f       	sbci	r23, 0xFF	; 255
    4d1a:	ce 01       	movw	r24, r28
    4d1c:	cd 96       	adiw	r24, 0x3d	; 61
    4d1e:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4d22:	e1 96       	adiw	r28, 0x31	; 49
    4d24:	6c af       	std	Y+60, r22	; 0x3c
    4d26:	7d af       	std	Y+61, r23	; 0x3d
    4d28:	8e af       	std	Y+62, r24	; 0x3e
    4d2a:	9f af       	std	Y+63, r25	; 0x3f
    4d2c:	e1 97       	sbiw	r28, 0x31	; 49
    4d2e:	a7 01       	movw	r20, r14
    4d30:	96 01       	movw	r18, r12
    4d32:	c7 01       	movw	r24, r14
    4d34:	b6 01       	movw	r22, r12
    4d36:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4d3a:	4b 01       	movw	r8, r22
    4d3c:	5c 01       	movw	r10, r24
    4d3e:	e1 96       	adiw	r28, 0x31	; 49
    4d40:	2c ad       	ldd	r18, Y+60	; 0x3c
    4d42:	3d ad       	ldd	r19, Y+61	; 0x3d
    4d44:	4e ad       	ldd	r20, Y+62	; 0x3e
    4d46:	5f ad       	ldd	r21, Y+63	; 0x3f
    4d48:	e1 97       	sbiw	r28, 0x31	; 49
    4d4a:	ca 01       	movw	r24, r20
    4d4c:	b9 01       	movw	r22, r18
    4d4e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4d52:	2b 01       	movw	r4, r22
    4d54:	3c 01       	movw	r6, r24
    4d56:	a3 01       	movw	r20, r6
    4d58:	92 01       	movw	r18, r4
    4d5a:	c5 01       	movw	r24, r10
    4d5c:	b4 01       	movw	r22, r8
    4d5e:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4d62:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    4d66:	4b 01       	movw	r8, r22
    4d68:	5c 01       	movw	r10, r24
    4d6a:	20 e0       	ldi	r18, 0x00	; 0
    4d6c:	30 e0       	ldi	r19, 0x00	; 0
    4d6e:	a9 01       	movw	r20, r18
    4d70:	c7 01       	movw	r24, r14
    4d72:	b6 01       	movw	r22, r12
    4d74:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    4d78:	18 16       	cp	r1, r24
    4d7a:	0c f0       	brlt	.+2      	; 0x4d7e <quest+0x42e>
    4d7c:	90 c0       	rjmp	.+288    	; 0x4e9e <quest+0x54e>
    4d7e:	a7 01       	movw	r20, r14
    4d80:	96 01       	movw	r18, r12
    4d82:	c5 01       	movw	r24, r10
    4d84:	b4 01       	movw	r22, r8
    4d86:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4d8a:	e7 96       	adiw	r28, 0x37	; 55
    4d8c:	6c af       	std	Y+60, r22	; 0x3c
    4d8e:	7d af       	std	Y+61, r23	; 0x3d
    4d90:	8e af       	std	Y+62, r24	; 0x3e
    4d92:	9f af       	std	Y+63, r25	; 0x3f
    4d94:	e7 97       	sbiw	r28, 0x37	; 55
    4d96:	a5 01       	movw	r20, r10
    4d98:	94 01       	movw	r18, r8
    4d9a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4d9e:	4b 01       	movw	r8, r22
    4da0:	5c 01       	movw	r10, r24
    4da2:	be 01       	movw	r22, r28
    4da4:	6b 5d       	subi	r22, 0xDB	; 219
    4da6:	7f 4f       	sbci	r23, 0xFF	; 255
    4da8:	ce 01       	movw	r24, r28
    4daa:	49 96       	adiw	r24, 0x19	; 25
    4dac:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4db0:	2b 01       	movw	r4, r22
    4db2:	3c 01       	movw	r6, r24
    4db4:	20 e0       	ldi	r18, 0x00	; 0
    4db6:	30 e0       	ldi	r19, 0x00	; 0
    4db8:	40 e8       	ldi	r20, 0x80	; 128
    4dba:	5f e3       	ldi	r21, 0x3F	; 63
    4dbc:	c3 01       	movw	r24, r6
    4dbe:	b2 01       	movw	r22, r4
    4dc0:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4dc4:	9b 01       	movw	r18, r22
    4dc6:	ac 01       	movw	r20, r24
    4dc8:	c5 01       	movw	r24, r10
    4dca:	b4 01       	movw	r22, r8
    4dcc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4dd0:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    4dd4:	9b 01       	movw	r18, r22
    4dd6:	ac 01       	movw	r20, r24
    4dd8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4ddc:	9b 01       	movw	r18, r22
    4dde:	ac 01       	movw	r20, r24
    4de0:	60 e0       	ldi	r22, 0x00	; 0
    4de2:	70 e0       	ldi	r23, 0x00	; 0
    4de4:	80 e8       	ldi	r24, 0x80	; 128
    4de6:	9f e3       	ldi	r25, 0x3F	; 63
    4de8:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4dec:	ec 96       	adiw	r28, 0x3c	; 60
    4dee:	6c af       	std	Y+60, r22	; 0x3c
    4df0:	7d af       	std	Y+61, r23	; 0x3d
    4df2:	8e af       	std	Y+62, r24	; 0x3e
    4df4:	9f af       	std	Y+63, r25	; 0x3f
    4df6:	ec 97       	sbiw	r28, 0x3c	; 60
    4df8:	8e 01       	movw	r16, r28
    4dfa:	0f 5c       	subi	r16, 0xCF	; 207
    4dfc:	1f 4f       	sbci	r17, 0xFF	; 255
    4dfe:	1e 01       	movw	r2, r28
    4e00:	fd e3       	ldi	r31, 0x3D	; 61
    4e02:	2f 0e       	add	r2, r31
    4e04:	31 1c       	adc	r3, r1
    4e06:	6e 01       	movw	r12, r28
    4e08:	21 e6       	ldi	r18, 0x61	; 97
    4e0a:	c2 0e       	add	r12, r18
    4e0c:	d1 1c       	adc	r13, r1
    4e0e:	71 01       	movw	r14, r2
    4e10:	f8 01       	movw	r30, r16
    4e12:	21 91       	ld	r18, Z+
    4e14:	31 91       	ld	r19, Z+
    4e16:	41 91       	ld	r20, Z+
    4e18:	51 91       	ld	r21, Z+
    4e1a:	8f 01       	movw	r16, r30
    4e1c:	f1 01       	movw	r30, r2
    4e1e:	41 90       	ld	r4, Z+
    4e20:	51 90       	ld	r5, Z+
    4e22:	61 90       	ld	r6, Z+
    4e24:	71 90       	ld	r7, Z+
    4e26:	1f 01       	movw	r2, r30
    4e28:	e7 96       	adiw	r28, 0x37	; 55
    4e2a:	6c ad       	ldd	r22, Y+60	; 0x3c
    4e2c:	7d ad       	ldd	r23, Y+61	; 0x3d
    4e2e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4e30:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e32:	e7 97       	sbiw	r28, 0x37	; 55
    4e34:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4e38:	4b 01       	movw	r8, r22
    4e3a:	5c 01       	movw	r10, r24
    4e3c:	e1 96       	adiw	r28, 0x31	; 49
    4e3e:	2c ad       	ldd	r18, Y+60	; 0x3c
    4e40:	3d ad       	ldd	r19, Y+61	; 0x3d
    4e42:	4e ad       	ldd	r20, Y+62	; 0x3e
    4e44:	5f ad       	ldd	r21, Y+63	; 0x3f
    4e46:	e1 97       	sbiw	r28, 0x31	; 49
    4e48:	c3 01       	movw	r24, r6
    4e4a:	b2 01       	movw	r22, r4
    4e4c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4e50:	9b 01       	movw	r18, r22
    4e52:	ac 01       	movw	r20, r24
    4e54:	c5 01       	movw	r24, r10
    4e56:	b4 01       	movw	r22, r8
    4e58:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4e5c:	f6 01       	movw	r30, r12
    4e5e:	61 93       	st	Z+, r22
    4e60:	71 93       	st	Z+, r23
    4e62:	81 93       	st	Z+, r24
    4e64:	91 93       	st	Z+, r25
    4e66:	6f 01       	movw	r12, r30
    4e68:	0e 15       	cp	r16, r14
    4e6a:	1f 05       	cpc	r17, r15
    4e6c:	89 f6       	brne	.-94     	; 0x4e10 <quest+0x4c0>
    4e6e:	be 01       	movw	r22, r28
    4e70:	6b 5d       	subi	r22, 0xDB	; 219
    4e72:	7f 4f       	sbci	r23, 0xFF	; 255
    4e74:	ce 01       	movw	r24, r28
    4e76:	49 96       	adiw	r24, 0x19	; 25
    4e78:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4e7c:	20 e0       	ldi	r18, 0x00	; 0
    4e7e:	30 e0       	ldi	r19, 0x00	; 0
    4e80:	40 e8       	ldi	r20, 0x80	; 128
    4e82:	5f e3       	ldi	r21, 0x3F	; 63
    4e84:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4e88:	9b 01       	movw	r18, r22
    4e8a:	ac 01       	movw	r20, r24
    4e8c:	e7 96       	adiw	r28, 0x37	; 55
    4e8e:	6c ad       	ldd	r22, Y+60	; 0x3c
    4e90:	7d ad       	ldd	r23, Y+61	; 0x3d
    4e92:	8e ad       	ldd	r24, Y+62	; 0x3e
    4e94:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e96:	e7 97       	sbiw	r28, 0x37	; 55
    4e98:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4e9c:	8d c0       	rjmp	.+282    	; 0x4fb8 <quest+0x668>
    4e9e:	a7 01       	movw	r20, r14
    4ea0:	96 01       	movw	r18, r12
    4ea2:	c5 01       	movw	r24, r10
    4ea4:	b4 01       	movw	r22, r8
    4ea6:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    4eaa:	e7 96       	adiw	r28, 0x37	; 55
    4eac:	6c af       	std	Y+60, r22	; 0x3c
    4eae:	7d af       	std	Y+61, r23	; 0x3d
    4eb0:	8e af       	std	Y+62, r24	; 0x3e
    4eb2:	9f af       	std	Y+63, r25	; 0x3f
    4eb4:	e7 97       	sbiw	r28, 0x37	; 55
    4eb6:	a5 01       	movw	r20, r10
    4eb8:	94 01       	movw	r18, r8
    4eba:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4ebe:	6b 01       	movw	r12, r22
    4ec0:	7c 01       	movw	r14, r24
    4ec2:	be 01       	movw	r22, r28
    4ec4:	6b 5d       	subi	r22, 0xDB	; 219
    4ec6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ec8:	ce 01       	movw	r24, r28
    4eca:	49 96       	adiw	r24, 0x19	; 25
    4ecc:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4ed0:	4b 01       	movw	r8, r22
    4ed2:	5c 01       	movw	r10, r24
    4ed4:	20 e0       	ldi	r18, 0x00	; 0
    4ed6:	30 e0       	ldi	r19, 0x00	; 0
    4ed8:	40 e8       	ldi	r20, 0x80	; 128
    4eda:	5f e3       	ldi	r21, 0x3F	; 63
    4edc:	c5 01       	movw	r24, r10
    4ede:	b4 01       	movw	r22, r8
    4ee0:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4ee4:	9b 01       	movw	r18, r22
    4ee6:	ac 01       	movw	r20, r24
    4ee8:	c7 01       	movw	r24, r14
    4eea:	b6 01       	movw	r22, r12
    4eec:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4ef0:	0e 94 d6 35 	call	0x6bac	; 0x6bac <sqrt>
    4ef4:	9b 01       	movw	r18, r22
    4ef6:	ac 01       	movw	r20, r24
    4ef8:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4efc:	9b 01       	movw	r18, r22
    4efe:	ac 01       	movw	r20, r24
    4f00:	60 e0       	ldi	r22, 0x00	; 0
    4f02:	70 e0       	ldi	r23, 0x00	; 0
    4f04:	80 e8       	ldi	r24, 0x80	; 128
    4f06:	9f e3       	ldi	r25, 0x3F	; 63
    4f08:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    4f0c:	ec 96       	adiw	r28, 0x3c	; 60
    4f0e:	6c af       	std	Y+60, r22	; 0x3c
    4f10:	7d af       	std	Y+61, r23	; 0x3d
    4f12:	8e af       	std	Y+62, r24	; 0x3e
    4f14:	9f af       	std	Y+63, r25	; 0x3f
    4f16:	ec 97       	sbiw	r28, 0x3c	; 60
    4f18:	8e 01       	movw	r16, r28
    4f1a:	0f 5c       	subi	r16, 0xCF	; 207
    4f1c:	1f 4f       	sbci	r17, 0xFF	; 255
    4f1e:	1e 01       	movw	r2, r28
    4f20:	fd e3       	ldi	r31, 0x3D	; 61
    4f22:	2f 0e       	add	r2, r31
    4f24:	31 1c       	adc	r3, r1
    4f26:	2e 01       	movw	r4, r28
    4f28:	21 e6       	ldi	r18, 0x61	; 97
    4f2a:	42 0e       	add	r4, r18
    4f2c:	51 1c       	adc	r5, r1
    4f2e:	31 01       	movw	r6, r2
    4f30:	f8 01       	movw	r30, r16
    4f32:	61 91       	ld	r22, Z+
    4f34:	71 91       	ld	r23, Z+
    4f36:	81 91       	ld	r24, Z+
    4f38:	91 91       	ld	r25, Z+
    4f3a:	8f 01       	movw	r16, r30
    4f3c:	f1 01       	movw	r30, r2
    4f3e:	81 90       	ld	r8, Z+
    4f40:	91 90       	ld	r9, Z+
    4f42:	a1 90       	ld	r10, Z+
    4f44:	b1 90       	ld	r11, Z+
    4f46:	1f 01       	movw	r2, r30
    4f48:	e1 96       	adiw	r28, 0x31	; 49
    4f4a:	2c ad       	ldd	r18, Y+60	; 0x3c
    4f4c:	3d ad       	ldd	r19, Y+61	; 0x3d
    4f4e:	4e ad       	ldd	r20, Y+62	; 0x3e
    4f50:	5f ad       	ldd	r21, Y+63	; 0x3f
    4f52:	e1 97       	sbiw	r28, 0x31	; 49
    4f54:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4f58:	6b 01       	movw	r12, r22
    4f5a:	7c 01       	movw	r14, r24
    4f5c:	a5 01       	movw	r20, r10
    4f5e:	94 01       	movw	r18, r8
    4f60:	e7 96       	adiw	r28, 0x37	; 55
    4f62:	6c ad       	ldd	r22, Y+60	; 0x3c
    4f64:	7d ad       	ldd	r23, Y+61	; 0x3d
    4f66:	8e ad       	ldd	r24, Y+62	; 0x3e
    4f68:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f6a:	e7 97       	sbiw	r28, 0x37	; 55
    4f6c:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4f70:	9b 01       	movw	r18, r22
    4f72:	ac 01       	movw	r20, r24
    4f74:	c7 01       	movw	r24, r14
    4f76:	b6 01       	movw	r22, r12
    4f78:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4f7c:	f2 01       	movw	r30, r4
    4f7e:	61 93       	st	Z+, r22
    4f80:	71 93       	st	Z+, r23
    4f82:	81 93       	st	Z+, r24
    4f84:	91 93       	st	Z+, r25
    4f86:	2f 01       	movw	r4, r30
    4f88:	06 15       	cp	r16, r6
    4f8a:	17 05       	cpc	r17, r7
    4f8c:	89 f6       	brne	.-94     	; 0x4f30 <quest+0x5e0>
    4f8e:	be 01       	movw	r22, r28
    4f90:	6b 5d       	subi	r22, 0xDB	; 219
    4f92:	7f 4f       	sbci	r23, 0xFF	; 255
    4f94:	ce 01       	movw	r24, r28
    4f96:	49 96       	adiw	r24, 0x19	; 25
    4f98:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <vector_dot_product>
    4f9c:	20 e0       	ldi	r18, 0x00	; 0
    4f9e:	30 e0       	ldi	r19, 0x00	; 0
    4fa0:	40 e8       	ldi	r20, 0x80	; 128
    4fa2:	5f e3       	ldi	r21, 0x3F	; 63
    4fa4:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    4fa8:	e1 96       	adiw	r28, 0x31	; 49
    4faa:	2c ad       	ldd	r18, Y+60	; 0x3c
    4fac:	3d ad       	ldd	r19, Y+61	; 0x3d
    4fae:	4e ad       	ldd	r20, Y+62	; 0x3e
    4fb0:	5f ad       	ldd	r21, Y+63	; 0x3f
    4fb2:	e1 97       	sbiw	r28, 0x31	; 49
    4fb4:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    4fb8:	a5 96       	adiw	r28, 0x25	; 37
    4fba:	0c ad       	ldd	r16, Y+60	; 0x3c
    4fbc:	1d ad       	ldd	r17, Y+61	; 0x3d
    4fbe:	2e ad       	ldd	r18, Y+62	; 0x3e
    4fc0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4fc2:	a5 97       	sbiw	r28, 0x25	; 37
    4fc4:	e3 96       	adiw	r28, 0x33	; 51
    4fc6:	ee ad       	ldd	r30, Y+62	; 0x3e
    4fc8:	ff ad       	ldd	r31, Y+63	; 0x3f
    4fca:	e3 97       	sbiw	r28, 0x33	; 51
    4fcc:	00 83       	st	Z, r16
    4fce:	11 83       	std	Z+1, r17	; 0x01
    4fd0:	22 83       	std	Z+2, r18	; 0x02
    4fd2:	33 83       	std	Z+3, r19	; 0x03
    4fd4:	a9 96       	adiw	r28, 0x29	; 41
    4fd6:	0c ad       	ldd	r16, Y+60	; 0x3c
    4fd8:	1d ad       	ldd	r17, Y+61	; 0x3d
    4fda:	2e ad       	ldd	r18, Y+62	; 0x3e
    4fdc:	3f ad       	ldd	r19, Y+63	; 0x3f
    4fde:	a9 97       	sbiw	r28, 0x29	; 41
    4fe0:	04 83       	std	Z+4, r16	; 0x04
    4fe2:	15 83       	std	Z+5, r17	; 0x05
    4fe4:	26 83       	std	Z+6, r18	; 0x06
    4fe6:	37 83       	std	Z+7, r19	; 0x07
    4fe8:	ad 96       	adiw	r28, 0x2d	; 45
    4fea:	0c ad       	ldd	r16, Y+60	; 0x3c
    4fec:	1d ad       	ldd	r17, Y+61	; 0x3d
    4fee:	2e ad       	ldd	r18, Y+62	; 0x3e
    4ff0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4ff2:	ad 97       	sbiw	r28, 0x2d	; 45
    4ff4:	00 87       	std	Z+8, r16	; 0x08
    4ff6:	11 87       	std	Z+9, r17	; 0x09
    4ff8:	22 87       	std	Z+10, r18	; 0x0a
    4ffa:	33 87       	std	Z+11, r19	; 0x0b
    4ffc:	64 87       	std	Z+12, r22	; 0x0c
    4ffe:	75 87       	std	Z+13, r23	; 0x0d
    5000:	86 87       	std	Z+14, r24	; 0x0e
    5002:	97 87       	std	Z+15, r25	; 0x0f
    5004:	ec 96       	adiw	r28, 0x3c	; 60
    5006:	4c ad       	ldd	r20, Y+60	; 0x3c
    5008:	5d ad       	ldd	r21, Y+61	; 0x3d
    500a:	6e ad       	ldd	r22, Y+62	; 0x3e
    500c:	7f ad       	ldd	r23, Y+63	; 0x3f
    500e:	ec 97       	sbiw	r28, 0x3c	; 60
    5010:	cf 01       	movw	r24, r30
    5012:	0e 94 ca 1f 	call	0x3f94	; 0x3f94 <scalar_into_quaternion>
    5016:	7d c0       	rjmp	.+250    	; 0x5112 <quest+0x7c2>
    5018:	e3 96       	adiw	r28, 0x33	; 51
    501a:	ee ad       	ldd	r30, Y+62	; 0x3e
    501c:	ff ad       	ldd	r31, Y+63	; 0x3f
    501e:	e3 97       	sbiw	r28, 0x33	; 51
    5020:	10 82       	st	Z, r1
    5022:	11 82       	std	Z+1, r1	; 0x01
    5024:	12 82       	std	Z+2, r1	; 0x02
    5026:	13 82       	std	Z+3, r1	; 0x03
    5028:	14 82       	std	Z+4, r1	; 0x04
    502a:	15 82       	std	Z+5, r1	; 0x05
    502c:	16 82       	std	Z+6, r1	; 0x06
    502e:	17 82       	std	Z+7, r1	; 0x07
    5030:	10 86       	std	Z+8, r1	; 0x08
    5032:	11 86       	std	Z+9, r1	; 0x09
    5034:	12 86       	std	Z+10, r1	; 0x0a
    5036:	13 86       	std	Z+11, r1	; 0x0b
    5038:	80 e0       	ldi	r24, 0x00	; 0
    503a:	90 e0       	ldi	r25, 0x00	; 0
    503c:	a0 e8       	ldi	r26, 0x80	; 128
    503e:	bf e3       	ldi	r27, 0x3F	; 63
    5040:	84 87       	std	Z+12, r24	; 0x0c
    5042:	95 87       	std	Z+13, r25	; 0x0d
    5044:	a6 87       	std	Z+14, r26	; 0x0e
    5046:	b7 87       	std	Z+15, r27	; 0x0f
    5048:	64 c0       	rjmp	.+200    	; 0x5112 <quest+0x7c2>
    504a:	80 90 fc 04 	lds	r8, 0x04FC
    504e:	90 90 fd 04 	lds	r9, 0x04FD
    5052:	a0 90 fe 04 	lds	r10, 0x04FE
    5056:	b0 90 ff 04 	lds	r11, 0x04FF
    505a:	c0 90 00 05 	lds	r12, 0x0500
    505e:	d0 90 01 05 	lds	r13, 0x0501
    5062:	e0 90 02 05 	lds	r14, 0x0502
    5066:	f0 90 03 05 	lds	r15, 0x0503
    506a:	a7 01       	movw	r20, r14
    506c:	96 01       	movw	r18, r12
    506e:	c5 01       	movw	r24, r10
    5070:	b4 01       	movw	r22, r8
    5072:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    5076:	18 16       	cp	r1, r24
    5078:	4c f0       	brlt	.+18     	; 0x508c <quest+0x73c>
    507a:	f7 fa       	bst	r15, 7
    507c:	f0 94       	com	r15
    507e:	f7 f8       	bld	r15, 7
    5080:	f0 94       	com	r15
    5082:	c9 82       	std	Y+1, r12	; 0x01
    5084:	da 82       	std	Y+2, r13	; 0x02
    5086:	eb 82       	std	Y+3, r14	; 0x03
    5088:	fc 82       	std	Y+4, r15	; 0x04
    508a:	04 c0       	rjmp	.+8      	; 0x5094 <quest+0x744>
    508c:	89 82       	std	Y+1, r8	; 0x01
    508e:	9a 82       	std	Y+2, r9	; 0x02
    5090:	ab 82       	std	Y+3, r10	; 0x03
    5092:	bc 82       	std	Y+4, r11	; 0x04
    5094:	80 90 04 05 	lds	r8, 0x0504
    5098:	90 90 05 05 	lds	r9, 0x0505
    509c:	a0 90 06 05 	lds	r10, 0x0506
    50a0:	b0 90 07 05 	lds	r11, 0x0507
    50a4:	c0 90 08 05 	lds	r12, 0x0508
    50a8:	d0 90 09 05 	lds	r13, 0x0509
    50ac:	e0 90 0a 05 	lds	r14, 0x050A
    50b0:	f0 90 0b 05 	lds	r15, 0x050B
    50b4:	a7 01       	movw	r20, r14
    50b6:	96 01       	movw	r18, r12
    50b8:	c5 01       	movw	r24, r10
    50ba:	b4 01       	movw	r22, r8
    50bc:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    50c0:	18 16       	cp	r1, r24
    50c2:	4c f0       	brlt	.+18     	; 0x50d6 <quest+0x786>
    50c4:	f7 fa       	bst	r15, 7
    50c6:	f0 94       	com	r15
    50c8:	f7 f8       	bld	r15, 7
    50ca:	f0 94       	com	r15
    50cc:	cd 82       	std	Y+5, r12	; 0x05
    50ce:	de 82       	std	Y+6, r13	; 0x06
    50d0:	ef 82       	std	Y+7, r14	; 0x07
    50d2:	f8 86       	std	Y+8, r15	; 0x08
    50d4:	04 c0       	rjmp	.+8      	; 0x50de <quest+0x78e>
    50d6:	8d 82       	std	Y+5, r8	; 0x05
    50d8:	9e 82       	std	Y+6, r9	; 0x06
    50da:	af 82       	std	Y+7, r10	; 0x07
    50dc:	b8 86       	std	Y+8, r11	; 0x08
    50de:	80 90 0c 05 	lds	r8, 0x050C
    50e2:	90 90 0d 05 	lds	r9, 0x050D
    50e6:	a0 90 0e 05 	lds	r10, 0x050E
    50ea:	b0 90 0f 05 	lds	r11, 0x050F
    50ee:	c0 90 10 05 	lds	r12, 0x0510
    50f2:	d0 90 11 05 	lds	r13, 0x0511
    50f6:	e0 90 12 05 	lds	r14, 0x0512
    50fa:	f0 90 13 05 	lds	r15, 0x0513
    50fe:	a7 01       	movw	r20, r14
    5100:	96 01       	movw	r18, r12
    5102:	c5 01       	movw	r24, r10
    5104:	b4 01       	movw	r22, r8
    5106:	0e 94 12 35 	call	0x6a24	; 0x6a24 <__gesf2>
    510a:	18 16       	cp	r1, r24
    510c:	0c f4       	brge	.+2      	; 0x5110 <quest+0x7c0>
    510e:	91 cc       	rjmp	.-1758   	; 0x4a32 <quest+0xe2>
    5110:	95 cc       	rjmp	.-1750   	; 0x4a3c <quest+0xec>
    5112:	e8 96       	adiw	r28, 0x38	; 56
    5114:	ff ad       	ldd	r31, Y+63	; 0x3f
    5116:	e8 97       	sbiw	r28, 0x38	; 56
    5118:	f0 93 12 01 	sts	0x0112, r31
    511c:	8f 2f       	mov	r24, r31
    511e:	c5 58       	subi	r28, 0x85	; 133
    5120:	df 4f       	sbci	r29, 0xFF	; 255
    5122:	0f b6       	in	r0, 0x3f	; 63
    5124:	f8 94       	cli
    5126:	de bf       	out	0x3e, r29	; 62
    5128:	0f be       	out	0x3f, r0	; 63
    512a:	cd bf       	out	0x3d, r28	; 61
    512c:	df 91       	pop	r29
    512e:	cf 91       	pop	r28
    5130:	1f 91       	pop	r17
    5132:	0f 91       	pop	r16
    5134:	ff 90       	pop	r15
    5136:	ef 90       	pop	r14
    5138:	df 90       	pop	r13
    513a:	cf 90       	pop	r12
    513c:	bf 90       	pop	r11
    513e:	af 90       	pop	r10
    5140:	9f 90       	pop	r9
    5142:	8f 90       	pop	r8
    5144:	7f 90       	pop	r7
    5146:	6f 90       	pop	r6
    5148:	5f 90       	pop	r5
    514a:	4f 90       	pop	r4
    514c:	3f 90       	pop	r3
    514e:	2f 90       	pop	r2
    5150:	08 95       	ret

00005152 <omega_estimation>:
    5152:	2f 92       	push	r2
    5154:	3f 92       	push	r3
    5156:	4f 92       	push	r4
    5158:	5f 92       	push	r5
    515a:	6f 92       	push	r6
    515c:	7f 92       	push	r7
    515e:	8f 92       	push	r8
    5160:	9f 92       	push	r9
    5162:	af 92       	push	r10
    5164:	bf 92       	push	r11
    5166:	cf 92       	push	r12
    5168:	df 92       	push	r13
    516a:	ef 92       	push	r14
    516c:	ff 92       	push	r15
    516e:	0f 93       	push	r16
    5170:	1f 93       	push	r17
    5172:	cf 93       	push	r28
    5174:	df 93       	push	r29
    5176:	cd b7       	in	r28, 0x3d	; 61
    5178:	de b7       	in	r29, 0x3e	; 62
    517a:	c6 5c       	subi	r28, 0xC6	; 198
    517c:	d1 09       	sbc	r29, r1
    517e:	0f b6       	in	r0, 0x3f	; 63
    5180:	f8 94       	cli
    5182:	de bf       	out	0x3e, r29	; 62
    5184:	0f be       	out	0x3f, r0	; 63
    5186:	cd bf       	out	0x3d, r28	; 61
    5188:	cd 53       	subi	r28, 0x3D	; 61
    518a:	df 4f       	sbci	r29, 0xFF	; 255
    518c:	88 83       	st	Y, r24
    518e:	c3 5c       	subi	r28, 0xC3	; 195
    5190:	d0 40       	sbci	r29, 0x00	; 0
    5192:	cc 53       	subi	r28, 0x3C	; 60
    5194:	df 4f       	sbci	r29, 0xFF	; 255
    5196:	98 83       	st	Y, r25
    5198:	c4 5c       	subi	r28, 0xC4	; 196
    519a:	d0 40       	sbci	r29, 0x00	; 0
    519c:	cb 53       	subi	r28, 0x3B	; 59
    519e:	df 4f       	sbci	r29, 0xFF	; 255
    51a0:	68 83       	st	Y, r22
    51a2:	c5 5c       	subi	r28, 0xC5	; 197
    51a4:	d0 40       	sbci	r29, 0x00	; 0
    51a6:	ca 53       	subi	r28, 0x3A	; 58
    51a8:	df 4f       	sbci	r29, 0xFF	; 255
    51aa:	78 83       	st	Y, r23
    51ac:	c6 5c       	subi	r28, 0xC6	; 198
    51ae:	d0 40       	sbci	r29, 0x00	; 0
    51b0:	28 2e       	mov	r2, r24
    51b2:	39 2e       	mov	r3, r25
    51b4:	0e e6       	ldi	r16, 0x6E	; 110
    51b6:	14 e0       	ldi	r17, 0x04	; 4
    51b8:	ce 01       	movw	r24, r28
    51ba:	01 96       	adiw	r24, 0x01	; 1
    51bc:	7c 01       	movw	r14, r24
    51be:	de 01       	movw	r26, r28
    51c0:	51 96       	adiw	r26, 0x11	; 17
    51c2:	cb 54       	subi	r28, 0x4B	; 75
    51c4:	df 4f       	sbci	r29, 0xFF	; 255
    51c6:	b9 83       	std	Y+1, r27	; 0x01
    51c8:	a8 83       	st	Y, r26
    51ca:	c5 5b       	subi	r28, 0xB5	; 181
    51cc:	d0 40       	sbci	r29, 0x00	; 0
    51ce:	0f 2e       	mov	r0, r31
    51d0:	fe e7       	ldi	r31, 0x7E	; 126
    51d2:	cf 2e       	mov	r12, r31
    51d4:	f4 e0       	ldi	r31, 0x04	; 4
    51d6:	df 2e       	mov	r13, r31
    51d8:	f0 2d       	mov	r31, r0
    51da:	cf 54       	subi	r28, 0x4F	; 79
    51dc:	df 4f       	sbci	r29, 0xFF	; 255
    51de:	b9 83       	std	Y+1, r27	; 0x01
    51e0:	a8 83       	st	Y, r26
    51e2:	c1 5b       	subi	r28, 0xB1	; 177
    51e4:	d0 40       	sbci	r29, 0x00	; 0
    51e6:	c7 54       	subi	r28, 0x47	; 71
    51e8:	df 4f       	sbci	r29, 0xFF	; 255
    51ea:	99 83       	std	Y+1, r25	; 0x01
    51ec:	88 83       	st	Y, r24
    51ee:	c9 5b       	subi	r28, 0xB9	; 185
    51f0:	d0 40       	sbci	r29, 0x00	; 0
    51f2:	f1 01       	movw	r30, r2
    51f4:	81 90       	ld	r8, Z+
    51f6:	91 90       	ld	r9, Z+
    51f8:	a1 90       	ld	r10, Z+
    51fa:	b1 90       	ld	r11, Z+
    51fc:	1f 01       	movw	r2, r30
    51fe:	d8 01       	movw	r26, r16
    5200:	4d 90       	ld	r4, X+
    5202:	5d 90       	ld	r5, X+
    5204:	6d 90       	ld	r6, X+
    5206:	7d 90       	ld	r7, X+
    5208:	8d 01       	movw	r16, r26
    520a:	a3 01       	movw	r20, r6
    520c:	92 01       	movw	r18, r4
    520e:	c5 01       	movw	r24, r10
    5210:	b4 01       	movw	r22, r8
    5212:	0e 94 1a 32 	call	0x6434	; 0x6434 <__subsf3>
    5216:	20 e0       	ldi	r18, 0x00	; 0
    5218:	30 e0       	ldi	r19, 0x00	; 0
    521a:	40 e0       	ldi	r20, 0x00	; 0
    521c:	5f e3       	ldi	r21, 0x3F	; 63
    521e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5222:	f7 01       	movw	r30, r14
    5224:	61 93       	st	Z+, r22
    5226:	71 93       	st	Z+, r23
    5228:	81 93       	st	Z+, r24
    522a:	91 93       	st	Z+, r25
    522c:	7f 01       	movw	r14, r30
    522e:	a3 01       	movw	r20, r6
    5230:	92 01       	movw	r18, r4
    5232:	c5 01       	movw	r24, r10
    5234:	b4 01       	movw	r22, r8
    5236:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    523a:	20 e0       	ldi	r18, 0x00	; 0
    523c:	30 e0       	ldi	r19, 0x00	; 0
    523e:	40 e0       	ldi	r20, 0x00	; 0
    5240:	5f e3       	ldi	r21, 0x3F	; 63
    5242:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5246:	cf 54       	subi	r28, 0x4F	; 79
    5248:	df 4f       	sbci	r29, 0xFF	; 255
    524a:	a8 81       	ld	r26, Y
    524c:	b9 81       	ldd	r27, Y+1	; 0x01
    524e:	c1 5b       	subi	r28, 0xB1	; 177
    5250:	d0 40       	sbci	r29, 0x00	; 0
    5252:	6d 93       	st	X+, r22
    5254:	7d 93       	st	X+, r23
    5256:	8d 93       	st	X+, r24
    5258:	9d 93       	st	X+, r25
    525a:	cf 54       	subi	r28, 0x4F	; 79
    525c:	df 4f       	sbci	r29, 0xFF	; 255
    525e:	b9 83       	std	Y+1, r27	; 0x01
    5260:	a8 83       	st	Y, r26
    5262:	c1 5b       	subi	r28, 0xB1	; 177
    5264:	d0 40       	sbci	r29, 0x00	; 0
    5266:	0c 15       	cp	r16, r12
    5268:	1d 05       	cpc	r17, r13
    526a:	19 f6       	brne	.-122    	; 0x51f2 <omega_estimation+0xa0>
    526c:	c7 54       	subi	r28, 0x47	; 71
    526e:	df 4f       	sbci	r29, 0xFF	; 255
    5270:	e8 80       	ld	r14, Y
    5272:	f9 80       	ldd	r15, Y+1	; 0x01
    5274:	c9 5b       	subi	r28, 0xB9	; 185
    5276:	d0 40       	sbci	r29, 0x00	; 0
    5278:	de 01       	movw	r26, r28
    527a:	9d 96       	adiw	r26, 0x2d	; 45
    527c:	8e 01       	movw	r16, r28
    527e:	0f 5d       	subi	r16, 0xDF	; 223
    5280:	1f 4f       	sbci	r17, 0xFF	; 255
    5282:	ce 01       	movw	r24, r28
    5284:	0d 96       	adiw	r24, 0x0d	; 13
    5286:	bd 01       	movw	r22, r26
    5288:	98 01       	movw	r18, r16
    528a:	f7 01       	movw	r30, r14
    528c:	cb 54       	subi	r28, 0x4B	; 75
    528e:	df 4f       	sbci	r29, 0xFF	; 255
    5290:	48 81       	ld	r20, Y
    5292:	59 81       	ldd	r21, Y+1	; 0x01
    5294:	c5 5b       	subi	r28, 0xB5	; 181
    5296:	d0 40       	sbci	r29, 0x00	; 0
    5298:	c1 90       	ld	r12, Z+
    529a:	d1 90       	ld	r13, Z+
    529c:	e1 90       	ld	r14, Z+
    529e:	f1 90       	ld	r15, Z+
    52a0:	db 01       	movw	r26, r22
    52a2:	cd 92       	st	X+, r12
    52a4:	dd 92       	st	X+, r13
    52a6:	ed 92       	st	X+, r14
    52a8:	fd 92       	st	X+, r15
    52aa:	bd 01       	movw	r22, r26
    52ac:	da 01       	movw	r26, r20
    52ae:	cd 90       	ld	r12, X+
    52b0:	dd 90       	ld	r13, X+
    52b2:	ed 90       	ld	r14, X+
    52b4:	fd 90       	ld	r15, X+
    52b6:	ad 01       	movw	r20, r26
    52b8:	d9 01       	movw	r26, r18
    52ba:	cd 92       	st	X+, r12
    52bc:	dd 92       	st	X+, r13
    52be:	ed 92       	st	X+, r14
    52c0:	fd 92       	st	X+, r15
    52c2:	9d 01       	movw	r18, r26
    52c4:	e8 17       	cp	r30, r24
    52c6:	f9 07       	cpc	r31, r25
    52c8:	39 f7       	brne	.-50     	; 0x5298 <omega_estimation+0x146>
    52ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52ce:	af 8d       	ldd	r26, Y+31	; 0x1f
    52d0:	b8 a1       	ldd	r27, Y+32	; 0x20
    52d2:	c7 54       	subi	r28, 0x47	; 71
    52d4:	df 4f       	sbci	r29, 0xFF	; 255
    52d6:	88 83       	st	Y, r24
    52d8:	99 83       	std	Y+1, r25	; 0x01
    52da:	aa 83       	std	Y+2, r26	; 0x02
    52dc:	bb 83       	std	Y+3, r27	; 0x03
    52de:	c9 5b       	subi	r28, 0xB9	; 185
    52e0:	d0 40       	sbci	r29, 0x00	; 0
    52e2:	ad 96       	adiw	r28, 0x2d	; 45
    52e4:	1c ae       	std	Y+60, r1	; 0x3c
    52e6:	1d ae       	std	Y+61, r1	; 0x3d
    52e8:	1e ae       	std	Y+62, r1	; 0x3e
    52ea:	1f ae       	std	Y+63, r1	; 0x3f
    52ec:	ad 97       	sbiw	r28, 0x2d	; 45
    52ee:	c9 a4       	ldd	r12, Y+41	; 0x29
    52f0:	da a4       	ldd	r13, Y+42	; 0x2a
    52f2:	eb a4       	ldd	r14, Y+43	; 0x2b
    52f4:	fc a4       	ldd	r15, Y+44	; 0x2c
    52f6:	20 e0       	ldi	r18, 0x00	; 0
    52f8:	30 e0       	ldi	r19, 0x00	; 0
    52fa:	40 e0       	ldi	r20, 0x00	; 0
    52fc:	50 ec       	ldi	r21, 0xC0	; 192
    52fe:	c7 01       	movw	r24, r14
    5300:	b6 01       	movw	r22, r12
    5302:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5306:	e1 96       	adiw	r28, 0x31	; 49
    5308:	6c af       	std	Y+60, r22	; 0x3c
    530a:	7d af       	std	Y+61, r23	; 0x3d
    530c:	8e af       	std	Y+62, r24	; 0x3e
    530e:	9f af       	std	Y+63, r25	; 0x3f
    5310:	e1 97       	sbiw	r28, 0x31	; 49
    5312:	8d a0       	ldd	r8, Y+37	; 0x25
    5314:	9e a0       	ldd	r9, Y+38	; 0x26
    5316:	af a0       	ldd	r10, Y+39	; 0x27
    5318:	b8 a4       	ldd	r11, Y+40	; 0x28
    531a:	a5 01       	movw	r20, r10
    531c:	94 01       	movw	r18, r8
    531e:	c5 01       	movw	r24, r10
    5320:	b4 01       	movw	r22, r8
    5322:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    5326:	e5 96       	adiw	r28, 0x35	; 53
    5328:	6c af       	std	Y+60, r22	; 0x3c
    532a:	7d af       	std	Y+61, r23	; 0x3d
    532c:	8e af       	std	Y+62, r24	; 0x3e
    532e:	9f af       	std	Y+63, r25	; 0x3f
    5330:	e5 97       	sbiw	r28, 0x35	; 53
    5332:	a7 01       	movw	r20, r14
    5334:	96 01       	movw	r18, r12
    5336:	c7 01       	movw	r24, r14
    5338:	b6 01       	movw	r22, r12
    533a:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    533e:	e9 96       	adiw	r28, 0x39	; 57
    5340:	6c af       	std	Y+60, r22	; 0x3c
    5342:	7d af       	std	Y+61, r23	; 0x3d
    5344:	8e af       	std	Y+62, r24	; 0x3e
    5346:	9f af       	std	Y+63, r25	; 0x3f
    5348:	e9 97       	sbiw	r28, 0x39	; 57
    534a:	ed 96       	adiw	r28, 0x3d	; 61
    534c:	1c ae       	std	Y+60, r1	; 0x3c
    534e:	1d ae       	std	Y+61, r1	; 0x3d
    5350:	1e ae       	std	Y+62, r1	; 0x3e
    5352:	1f ae       	std	Y+63, r1	; 0x3f
    5354:	ed 97       	sbiw	r28, 0x3d	; 61
    5356:	c9 a0       	ldd	r12, Y+33	; 0x21
    5358:	da a0       	ldd	r13, Y+34	; 0x22
    535a:	eb a0       	ldd	r14, Y+35	; 0x23
    535c:	fc a0       	ldd	r15, Y+36	; 0x24
    535e:	20 e0       	ldi	r18, 0x00	; 0
    5360:	30 e0       	ldi	r19, 0x00	; 0
    5362:	40 e0       	ldi	r20, 0x00	; 0
    5364:	50 ec       	ldi	r21, 0xC0	; 192
    5366:	c7 01       	movw	r24, r14
    5368:	b6 01       	movw	r22, r12
    536a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    536e:	c3 58       	subi	r28, 0x83	; 131
    5370:	df 4f       	sbci	r29, 0xFF	; 255
    5372:	68 83       	st	Y, r22
    5374:	79 83       	std	Y+1, r23	; 0x01
    5376:	8a 83       	std	Y+2, r24	; 0x02
    5378:	9b 83       	std	Y+3, r25	; 0x03
    537a:	cd 57       	subi	r28, 0x7D	; 125
    537c:	d0 40       	sbci	r29, 0x00	; 0
    537e:	20 e0       	ldi	r18, 0x00	; 0
    5380:	30 e0       	ldi	r19, 0x00	; 0
    5382:	40 e0       	ldi	r20, 0x00	; 0
    5384:	50 ec       	ldi	r21, 0xC0	; 192
    5386:	c5 01       	movw	r24, r10
    5388:	b4 01       	movw	r22, r8
    538a:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    538e:	cf 57       	subi	r28, 0x7F	; 127
    5390:	df 4f       	sbci	r29, 0xFF	; 255
    5392:	68 83       	st	Y, r22
    5394:	79 83       	std	Y+1, r23	; 0x01
    5396:	8a 83       	std	Y+2, r24	; 0x02
    5398:	9b 83       	std	Y+3, r25	; 0x03
    539a:	c1 58       	subi	r28, 0x81	; 129
    539c:	d0 40       	sbci	r29, 0x00	; 0
    539e:	a7 01       	movw	r20, r14
    53a0:	96 01       	movw	r18, r12
    53a2:	c7 01       	movw	r24, r14
    53a4:	b6 01       	movw	r22, r12
    53a6:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    53aa:	cb 57       	subi	r28, 0x7B	; 123
    53ac:	df 4f       	sbci	r29, 0xFF	; 255
    53ae:	68 83       	st	Y, r22
    53b0:	79 83       	std	Y+1, r23	; 0x01
    53b2:	8a 83       	std	Y+2, r24	; 0x02
    53b4:	9b 83       	std	Y+3, r25	; 0x03
    53b6:	c5 58       	subi	r28, 0x85	; 133
    53b8:	d0 40       	sbci	r29, 0x00	; 0
    53ba:	c7 57       	subi	r28, 0x77	; 119
    53bc:	df 4f       	sbci	r29, 0xFF	; 255
    53be:	18 82       	st	Y, r1
    53c0:	19 82       	std	Y+1, r1	; 0x01
    53c2:	1a 82       	std	Y+2, r1	; 0x02
    53c4:	1b 82       	std	Y+3, r1	; 0x03
    53c6:	c9 58       	subi	r28, 0x89	; 137
    53c8:	d0 40       	sbci	r29, 0x00	; 0
    53ca:	c7 54       	subi	r28, 0x47	; 71
    53cc:	df 4f       	sbci	r29, 0xFF	; 255
    53ce:	28 81       	ld	r18, Y
    53d0:	39 81       	ldd	r19, Y+1	; 0x01
    53d2:	4a 81       	ldd	r20, Y+2	; 0x02
    53d4:	5b 81       	ldd	r21, Y+3	; 0x03
    53d6:	c9 5b       	subi	r28, 0xB9	; 185
    53d8:	d0 40       	sbci	r29, 0x00	; 0
    53da:	ca 01       	movw	r24, r20
    53dc:	b9 01       	movw	r22, r18
    53de:	0e 94 1b 32 	call	0x6436	; 0x6436 <__addsf3>
    53e2:	c3 57       	subi	r28, 0x73	; 115
    53e4:	df 4f       	sbci	r29, 0xFF	; 255
    53e6:	68 83       	st	Y, r22
    53e8:	79 83       	std	Y+1, r23	; 0x01
    53ea:	8a 83       	std	Y+2, r24	; 0x02
    53ec:	9b 83       	std	Y+3, r25	; 0x03
    53ee:	cd 58       	subi	r28, 0x8D	; 141
    53f0:	d0 40       	sbci	r29, 0x00	; 0
    53f2:	cf 56       	subi	r28, 0x6F	; 111
    53f4:	df 4f       	sbci	r29, 0xFF	; 255
    53f6:	18 82       	st	Y, r1
    53f8:	19 82       	std	Y+1, r1	; 0x01
    53fa:	1a 82       	std	Y+2, r1	; 0x02
    53fc:	1b 82       	std	Y+3, r1	; 0x03
    53fe:	c1 59       	subi	r28, 0x91	; 145
    5400:	d0 40       	sbci	r29, 0x00	; 0
    5402:	cb 56       	subi	r28, 0x6B	; 107
    5404:	df 4f       	sbci	r29, 0xFF	; 255
    5406:	18 82       	st	Y, r1
    5408:	19 82       	std	Y+1, r1	; 0x01
    540a:	1a 82       	std	Y+2, r1	; 0x02
    540c:	1b 82       	std	Y+3, r1	; 0x03
    540e:	c5 59       	subi	r28, 0x95	; 149
    5410:	d0 40       	sbci	r29, 0x00	; 0
    5412:	c7 56       	subi	r28, 0x67	; 103
    5414:	df 4f       	sbci	r29, 0xFF	; 255
    5416:	18 82       	st	Y, r1
    5418:	19 82       	std	Y+1, r1	; 0x01
    541a:	1a 82       	std	Y+2, r1	; 0x02
    541c:	1b 82       	std	Y+3, r1	; 0x03
    541e:	c9 59       	subi	r28, 0x99	; 153
    5420:	d0 40       	sbci	r29, 0x00	; 0
    5422:	c3 56       	subi	r28, 0x63	; 99
    5424:	df 4f       	sbci	r29, 0xFF	; 255
    5426:	68 83       	st	Y, r22
    5428:	79 83       	std	Y+1, r23	; 0x01
    542a:	8a 83       	std	Y+2, r24	; 0x02
    542c:	9b 83       	std	Y+3, r25	; 0x03
    542e:	cd 59       	subi	r28, 0x9D	; 157
    5430:	d0 40       	sbci	r29, 0x00	; 0
    5432:	cf 55       	subi	r28, 0x5F	; 95
    5434:	df 4f       	sbci	r29, 0xFF	; 255
    5436:	18 82       	st	Y, r1
    5438:	19 82       	std	Y+1, r1	; 0x01
    543a:	1a 82       	std	Y+2, r1	; 0x02
    543c:	1b 82       	std	Y+3, r1	; 0x03
    543e:	c1 5a       	subi	r28, 0xA1	; 161
    5440:	d0 40       	sbci	r29, 0x00	; 0
    5442:	cb 55       	subi	r28, 0x5B	; 91
    5444:	df 4f       	sbci	r29, 0xFF	; 255
    5446:	18 82       	st	Y, r1
    5448:	19 82       	std	Y+1, r1	; 0x01
    544a:	1a 82       	std	Y+2, r1	; 0x02
    544c:	1b 82       	std	Y+3, r1	; 0x03
    544e:	c5 5a       	subi	r28, 0xA5	; 165
    5450:	d0 40       	sbci	r29, 0x00	; 0
    5452:	c7 55       	subi	r28, 0x57	; 87
    5454:	df 4f       	sbci	r29, 0xFF	; 255
    5456:	18 82       	st	Y, r1
    5458:	19 82       	std	Y+1, r1	; 0x01
    545a:	1a 82       	std	Y+2, r1	; 0x02
    545c:	1b 82       	std	Y+3, r1	; 0x03
    545e:	c9 5a       	subi	r28, 0xA9	; 169
    5460:	d0 40       	sbci	r29, 0x00	; 0
    5462:	c3 55       	subi	r28, 0x53	; 83
    5464:	df 4f       	sbci	r29, 0xFF	; 255
    5466:	68 83       	st	Y, r22
    5468:	79 83       	std	Y+1, r23	; 0x01
    546a:	8a 83       	std	Y+2, r24	; 0x02
    546c:	9b 83       	std	Y+3, r25	; 0x03
    546e:	cd 5a       	subi	r28, 0xAD	; 173
    5470:	d0 40       	sbci	r29, 0x00	; 0
    5472:	3e 01       	movw	r6, r28
    5474:	95 e4       	ldi	r25, 0x45	; 69
    5476:	69 0e       	add	r6, r25
    5478:	71 1c       	adc	r7, r1
    547a:	c3 54       	subi	r28, 0x43	; 67
    547c:	df 4f       	sbci	r29, 0xFF	; 255
    547e:	19 83       	std	Y+1, r17	; 0x01
    5480:	08 83       	st	Y, r16
    5482:	cd 5b       	subi	r28, 0xBD	; 189
    5484:	d0 40       	sbci	r29, 0x00	; 0
    5486:	81 2c       	mov	r8, r1
    5488:	91 2c       	mov	r9, r1
    548a:	5e 01       	movw	r10, r28
    548c:	ad e2       	ldi	r26, 0x2D	; 45
    548e:	aa 0e       	add	r10, r26
    5490:	b1 1c       	adc	r11, r1
    5492:	cf 53       	subi	r28, 0x3F	; 63
    5494:	df 4f       	sbci	r29, 0xFF	; 255
    5496:	08 83       	st	Y, r16
    5498:	c1 5c       	subi	r28, 0xC1	; 193
    549a:	d0 40       	sbci	r29, 0x00	; 0
    549c:	ce 53       	subi	r28, 0x3E	; 62
    549e:	df 4f       	sbci	r29, 0xFF	; 255
    54a0:	18 83       	st	Y, r17
    54a2:	c2 5c       	subi	r28, 0xC2	; 194
    54a4:	d0 40       	sbci	r29, 0x00	; 0
    54a6:	5a c0       	rjmp	.+180    	; 0x555c <omega_estimation+0x40a>
    54a8:	f1 01       	movw	r30, r2
    54aa:	61 91       	ld	r22, Z+
    54ac:	71 91       	ld	r23, Z+
    54ae:	81 91       	ld	r24, Z+
    54b0:	91 91       	ld	r25, Z+
    54b2:	1f 01       	movw	r2, r30
    54b4:	d6 01       	movw	r26, r12
    54b6:	2d 91       	ld	r18, X+
    54b8:	3d 91       	ld	r19, X+
    54ba:	4d 91       	ld	r20, X+
    54bc:	5d 91       	ld	r21, X+
    54be:	6d 01       	movw	r12, r26
    54c0:	f2 01       	movw	r30, r4
    54c2:	61 90       	ld	r6, Z+
    54c4:	71 90       	ld	r7, Z+
    54c6:	81 90       	ld	r8, Z+
    54c8:	91 90       	ld	r9, Z+
    54ca:	2f 01       	movw	r4, r30
    54cc:	b3 d7       	rcall	.+3942   	; 0x6434 <__subsf3>
    54ce:	cf 54       	subi	r28, 0x4F	; 79
    54d0:	df 4f       	sbci	r29, 0xFF	; 255
    54d2:	68 83       	st	Y, r22
    54d4:	79 83       	std	Y+1, r23	; 0x01
    54d6:	8a 83       	std	Y+2, r24	; 0x02
    54d8:	9b 83       	std	Y+3, r25	; 0x03
    54da:	c1 5b       	subi	r28, 0xB1	; 177
    54dc:	d0 40       	sbci	r29, 0x00	; 0
    54de:	a4 01       	movw	r20, r8
    54e0:	93 01       	movw	r18, r6
    54e2:	cb 54       	subi	r28, 0x4B	; 75
    54e4:	df 4f       	sbci	r29, 0xFF	; 255
    54e6:	68 81       	ld	r22, Y
    54e8:	79 81       	ldd	r23, Y+1	; 0x01
    54ea:	8a 81       	ldd	r24, Y+2	; 0x02
    54ec:	9b 81       	ldd	r25, Y+3	; 0x03
    54ee:	c5 5b       	subi	r28, 0xB5	; 181
    54f0:	d0 40       	sbci	r29, 0x00	; 0
    54f2:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    54f6:	c7 54       	subi	r28, 0x47	; 71
    54f8:	df 4f       	sbci	r29, 0xFF	; 255
    54fa:	28 81       	ld	r18, Y
    54fc:	39 81       	ldd	r19, Y+1	; 0x01
    54fe:	4a 81       	ldd	r20, Y+2	; 0x02
    5500:	5b 81       	ldd	r21, Y+3	; 0x03
    5502:	c9 5b       	subi	r28, 0xB9	; 185
    5504:	d0 40       	sbci	r29, 0x00	; 0
    5506:	0e 94 ff 32 	call	0x65fe	; 0x65fe <__divsf3>
    550a:	9b 01       	movw	r18, r22
    550c:	ac 01       	movw	r20, r24
    550e:	cf 54       	subi	r28, 0x4F	; 79
    5510:	df 4f       	sbci	r29, 0xFF	; 255
    5512:	68 81       	ld	r22, Y
    5514:	79 81       	ldd	r23, Y+1	; 0x01
    5516:	8a 81       	ldd	r24, Y+2	; 0x02
    5518:	9b 81       	ldd	r25, Y+3	; 0x03
    551a:	c1 5b       	subi	r28, 0xB1	; 177
    551c:	d0 40       	sbci	r29, 0x00	; 0
    551e:	8b d7       	rcall	.+3862   	; 0x6436 <__addsf3>
    5520:	d8 01       	movw	r26, r16
    5522:	6d 93       	st	X+, r22
    5524:	7d 93       	st	X+, r23
    5526:	8d 93       	st	X+, r24
    5528:	9c 93       	st	X, r25
    552a:	13 97       	sbiw	r26, 0x03	; 3
    552c:	04 5f       	subi	r16, 0xF4	; 244
    552e:	1f 4f       	sbci	r17, 0xFF	; 255
    5530:	4a 14       	cp	r4, r10
    5532:	5b 04       	cpc	r5, r11
    5534:	09 f0       	breq	.+2      	; 0x5538 <omega_estimation+0x3e6>
    5536:	b8 cf       	rjmp	.-144    	; 0x54a8 <omega_estimation+0x356>
    5538:	47 01       	movw	r8, r14
    553a:	c1 54       	subi	r28, 0x41	; 65
    553c:	df 4f       	sbci	r29, 0xFF	; 255
    553e:	68 80       	ld	r6, Y
    5540:	79 80       	ldd	r7, Y+1	; 0x01
    5542:	cf 5b       	subi	r28, 0xBF	; 191
    5544:	d0 40       	sbci	r29, 0x00	; 0
    5546:	bc e0       	ldi	r27, 0x0C	; 12
    5548:	8b 0e       	add	r8, r27
    554a:	91 1c       	adc	r9, r1
    554c:	e4 e0       	ldi	r30, 0x04	; 4
    554e:	6e 0e       	add	r6, r30
    5550:	71 1c       	adc	r7, r1
    5552:	f4 e2       	ldi	r31, 0x24	; 36
    5554:	8f 16       	cp	r8, r31
    5556:	91 04       	cpc	r9, r1
    5558:	09 f4       	brne	.+2      	; 0x555c <omega_estimation+0x40a>
    555a:	40 c0       	rjmp	.+128    	; 0x55dc <omega_estimation+0x48a>
    555c:	c3 54       	subi	r28, 0x43	; 67
    555e:	df 4f       	sbci	r29, 0xFF	; 255
    5560:	a8 81       	ld	r26, Y
    5562:	b9 81       	ldd	r27, Y+1	; 0x01
    5564:	cd 5b       	subi	r28, 0xBD	; 189
    5566:	d0 40       	sbci	r29, 0x00	; 0
    5568:	6d 91       	ld	r22, X+
    556a:	7d 91       	ld	r23, X+
    556c:	8d 91       	ld	r24, X+
    556e:	9d 91       	ld	r25, X+
    5570:	c3 54       	subi	r28, 0x43	; 67
    5572:	df 4f       	sbci	r29, 0xFF	; 255
    5574:	b9 83       	std	Y+1, r27	; 0x01
    5576:	a8 83       	st	Y, r26
    5578:	cd 5b       	subi	r28, 0xBD	; 189
    557a:	d0 40       	sbci	r29, 0x00	; 0
    557c:	9b 01       	movw	r18, r22
    557e:	ac 01       	movw	r20, r24
    5580:	5a d7       	rcall	.+3764   	; 0x6436 <__addsf3>
    5582:	cb 54       	subi	r28, 0x4B	; 75
    5584:	df 4f       	sbci	r29, 0xFF	; 255
    5586:	68 83       	st	Y, r22
    5588:	79 83       	std	Y+1, r23	; 0x01
    558a:	8a 83       	std	Y+2, r24	; 0x02
    558c:	9b 83       	std	Y+3, r25	; 0x03
    558e:	c5 5b       	subi	r28, 0xB5	; 181
    5590:	d0 40       	sbci	r29, 0x00	; 0
    5592:	0f 2e       	mov	r0, r31
    5594:	fd e8       	ldi	r31, 0x8D	; 141
    5596:	2f 2e       	mov	r2, r31
    5598:	31 2c       	mov	r3, r1
    559a:	f0 2d       	mov	r31, r0
    559c:	2c 0e       	add	r2, r28
    559e:	3d 1e       	adc	r3, r29
    55a0:	28 0c       	add	r2, r8
    55a2:	39 1c       	adc	r3, r9
    55a4:	0f 2e       	mov	r0, r31
    55a6:	f9 e6       	ldi	r31, 0x69	; 105
    55a8:	cf 2e       	mov	r12, r31
    55aa:	d1 2c       	mov	r13, r1
    55ac:	f0 2d       	mov	r31, r0
    55ae:	cc 0e       	add	r12, r28
    55b0:	dd 1e       	adc	r13, r29
    55b2:	c8 0c       	add	r12, r8
    55b4:	d9 1c       	adc	r13, r9
    55b6:	83 01       	movw	r16, r6
    55b8:	cf 53       	subi	r28, 0x3F	; 63
    55ba:	df 4f       	sbci	r29, 0xFF	; 255
    55bc:	48 80       	ld	r4, Y
    55be:	c1 5c       	subi	r28, 0xC1	; 193
    55c0:	d0 40       	sbci	r29, 0x00	; 0
    55c2:	ce 53       	subi	r28, 0x3E	; 62
    55c4:	df 4f       	sbci	r29, 0xFF	; 255
    55c6:	58 80       	ld	r5, Y
    55c8:	c2 5c       	subi	r28, 0xC2	; 194
    55ca:	d0 40       	sbci	r29, 0x00	; 0
    55cc:	74 01       	movw	r14, r8
    55ce:	c1 54       	subi	r28, 0x41	; 65
    55d0:	df 4f       	sbci	r29, 0xFF	; 255
    55d2:	79 82       	std	Y+1, r7	; 0x01
    55d4:	68 82       	st	Y, r6
    55d6:	cf 5b       	subi	r28, 0xBF	; 191
    55d8:	d0 40       	sbci	r29, 0x00	; 0
    55da:	66 cf       	rjmp	.-308    	; 0x54a8 <omega_estimation+0x356>
    55dc:	ae 01       	movw	r20, r28
    55de:	47 5c       	subi	r20, 0xC7	; 199
    55e0:	5f 4f       	sbci	r21, 0xFF	; 255
    55e2:	be 01       	movw	r22, r28
    55e4:	6b 5b       	subi	r22, 0xBB	; 187
    55e6:	7f 4f       	sbci	r23, 0xFF	; 255
    55e8:	ce 01       	movw	r24, r28
    55ea:	8d 96       	adiw	r24, 0x2d	; 45
    55ec:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <vector_into_matrix>
    55f0:	8e 01       	movw	r16, r28
    55f2:	07 5c       	subi	r16, 0xC7	; 199
    55f4:	1f 4f       	sbci	r17, 0xFF	; 255
    55f6:	0f 2e       	mov	r0, r31
    55f8:	f2 e6       	ldi	r31, 0x62	; 98
    55fa:	cf 2e       	mov	r12, r31
    55fc:	f4 e0       	ldi	r31, 0x04	; 4
    55fe:	df 2e       	mov	r13, r31
    5600:	f0 2d       	mov	r31, r0
    5602:	cb 53       	subi	r28, 0x3B	; 59
    5604:	df 4f       	sbci	r29, 0xFF	; 255
    5606:	28 80       	ld	r2, Y
    5608:	c5 5c       	subi	r28, 0xC5	; 197
    560a:	d0 40       	sbci	r29, 0x00	; 0
    560c:	ca 53       	subi	r28, 0x3A	; 58
    560e:	df 4f       	sbci	r29, 0xFF	; 255
    5610:	38 80       	ld	r3, Y
    5612:	c6 5c       	subi	r28, 0xC6	; 198
    5614:	d0 40       	sbci	r29, 0x00	; 0
    5616:	78 01       	movw	r14, r16
    5618:	bc e0       	ldi	r27, 0x0C	; 12
    561a:	eb 0e       	add	r14, r27
    561c:	f1 1c       	adc	r15, r1
    561e:	f8 01       	movw	r30, r16
    5620:	61 91       	ld	r22, Z+
    5622:	71 91       	ld	r23, Z+
    5624:	81 91       	ld	r24, Z+
    5626:	91 91       	ld	r25, Z+
    5628:	8f 01       	movw	r16, r30
    562a:	d6 01       	movw	r26, r12
    562c:	4d 90       	ld	r4, X+
    562e:	5d 90       	ld	r5, X+
    5630:	6d 90       	ld	r6, X+
    5632:	7d 90       	ld	r7, X+
    5634:	6d 01       	movw	r12, r26
    5636:	28 e0       	ldi	r18, 0x08	; 8
    5638:	31 e2       	ldi	r19, 0x21	; 33
    563a:	44 e0       	ldi	r20, 0x04	; 4
    563c:	5d e3       	ldi	r21, 0x3D	; 61
    563e:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5642:	4b 01       	movw	r8, r22
    5644:	5c 01       	movw	r10, r24
    5646:	20 ef       	ldi	r18, 0xF0	; 240
    5648:	3d eb       	ldi	r19, 0xBD	; 189
    564a:	47 e7       	ldi	r20, 0x77	; 119
    564c:	5f e3       	ldi	r21, 0x3F	; 63
    564e:	c3 01       	movw	r24, r6
    5650:	b2 01       	movw	r22, r4
    5652:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5656:	9b 01       	movw	r18, r22
    5658:	ac 01       	movw	r20, r24
    565a:	c5 01       	movw	r24, r10
    565c:	b4 01       	movw	r22, r8
    565e:	eb d6       	rcall	.+3542   	; 0x6436 <__addsf3>
    5660:	f1 01       	movw	r30, r2
    5662:	61 93       	st	Z+, r22
    5664:	71 93       	st	Z+, r23
    5666:	81 93       	st	Z+, r24
    5668:	91 93       	st	Z+, r25
    566a:	1f 01       	movw	r2, r30
    566c:	0e 15       	cp	r16, r14
    566e:	1f 05       	cpc	r17, r15
    5670:	b1 f6       	brne	.-84     	; 0x561e <omega_estimation+0x4cc>
    5672:	6e e6       	ldi	r22, 0x6E	; 110
    5674:	74 e0       	ldi	r23, 0x04	; 4
    5676:	cd 53       	subi	r28, 0x3D	; 61
    5678:	df 4f       	sbci	r29, 0xFF	; 255
    567a:	88 81       	ld	r24, Y
    567c:	c3 5c       	subi	r28, 0xC3	; 195
    567e:	d0 40       	sbci	r29, 0x00	; 0
    5680:	cc 53       	subi	r28, 0x3C	; 60
    5682:	df 4f       	sbci	r29, 0xFF	; 255
    5684:	98 81       	ld	r25, Y
    5686:	c4 5c       	subi	r28, 0xC4	; 196
    5688:	d0 40       	sbci	r29, 0x00	; 0
    568a:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <copy_quaternion>
    568e:	62 e6       	ldi	r22, 0x62	; 98
    5690:	74 e0       	ldi	r23, 0x04	; 4
    5692:	cb 53       	subi	r28, 0x3B	; 59
    5694:	df 4f       	sbci	r29, 0xFF	; 255
    5696:	88 81       	ld	r24, Y
    5698:	c5 5c       	subi	r28, 0xC5	; 197
    569a:	d0 40       	sbci	r29, 0x00	; 0
    569c:	ca 53       	subi	r28, 0x3A	; 58
    569e:	df 4f       	sbci	r29, 0xFF	; 255
    56a0:	98 81       	ld	r25, Y
    56a2:	c6 5c       	subi	r28, 0xC6	; 198
    56a4:	d0 40       	sbci	r29, 0x00	; 0
    56a6:	0e 94 f7 1c 	call	0x39ee	; 0x39ee <copy_vector>
    56aa:	ca 53       	subi	r28, 0x3A	; 58
    56ac:	df 4f       	sbci	r29, 0xFF	; 255
    56ae:	0f b6       	in	r0, 0x3f	; 63
    56b0:	f8 94       	cli
    56b2:	de bf       	out	0x3e, r29	; 62
    56b4:	0f be       	out	0x3f, r0	; 63
    56b6:	cd bf       	out	0x3d, r28	; 61
    56b8:	df 91       	pop	r29
    56ba:	cf 91       	pop	r28
    56bc:	1f 91       	pop	r17
    56be:	0f 91       	pop	r16
    56c0:	ff 90       	pop	r15
    56c2:	ef 90       	pop	r14
    56c4:	df 90       	pop	r13
    56c6:	cf 90       	pop	r12
    56c8:	bf 90       	pop	r11
    56ca:	af 90       	pop	r10
    56cc:	9f 90       	pop	r9
    56ce:	8f 90       	pop	r8
    56d0:	7f 90       	pop	r7
    56d2:	6f 90       	pop	r6
    56d4:	5f 90       	pop	r5
    56d6:	4f 90       	pop	r4
    56d8:	3f 90       	pop	r3
    56da:	2f 90       	pop	r2
    56dc:	08 95       	ret

000056de <init_SPI>:
    56de:	17 ba       	out	0x17, r1	; 23
    56e0:	86 e0       	ldi	r24, 0x06	; 6
    56e2:	87 bb       	out	0x17, r24	; 23
    56e4:	87 b3       	in	r24, 0x17	; 23
    56e6:	81 63       	ori	r24, 0x31	; 49
    56e8:	87 bb       	out	0x17, r24	; 23
    56ea:	88 b3       	in	r24, 0x18	; 24
    56ec:	80 63       	ori	r24, 0x30	; 48
    56ee:	88 bb       	out	0x18, r24	; 24
    56f0:	c0 98       	cbi	0x18, 0	; 24
    56f2:	8f e5       	ldi	r24, 0x5F	; 95
    56f4:	8d b9       	out	0x0d, r24	; 13
    56f6:	08 95       	ret

000056f8 <SPI_transfer>:
    56f8:	8f b9       	out	0x0f, r24	; 15
    56fa:	77 9b       	sbis	0x0e, 7	; 14
    56fc:	fe cf       	rjmp	.-4      	; 0x56fa <SPI_transfer+0x2>
    56fe:	8f b1       	in	r24, 0x0f	; 15
    5700:	08 95       	ret

00005702 <poll_SS>:
	val=(val<<8)+vall;
	return val;
}

void poll_SS(void)
{
    5702:	5f 92       	push	r5
    5704:	6f 92       	push	r6
    5706:	7f 92       	push	r7
    5708:	8f 92       	push	r8
    570a:	9f 92       	push	r9
    570c:	af 92       	push	r10
    570e:	bf 92       	push	r11
    5710:	cf 92       	push	r12
    5712:	df 92       	push	r13
    5714:	ef 92       	push	r14
    5716:	ff 92       	push	r15
    5718:	0f 93       	push	r16
    571a:	1f 93       	push	r17
    571c:	cf 93       	push	r28
    571e:	df 93       	push	r29
    5720:	cd b7       	in	r28, 0x3d	; 61
    5722:	de b7       	in	r29, 0x3e	; 62
    5724:	2c 97       	sbiw	r28, 0x0c	; 12
    5726:	0f b6       	in	r0, 0x3f	; 63
    5728:	f8 94       	cli
    572a:	de bf       	out	0x3e, r29	; 62
    572c:	0f be       	out	0x3f, r0	; 63
    572e:	cd bf       	out	0x3d, r28	; 61
	uint8_t valh6;
	uint8_t vall6;

	uint16_t val[6];//First sunsensor combined 16 bit value
	int8_t data_r;
  PORTB |= (1<<PB0);//Set Slave select of Slave OBC to 1
    5730:	c0 9a       	sbi	0x18, 0	; 24
  PORTB &= ~(1<<PB5);// Set slave select of ADC to 0
    5732:	c5 98       	cbi	0x18, 5	; 24
    5734:	8f ec       	ldi	r24, 0xCF	; 207
    5736:	97 e0       	ldi	r25, 0x07	; 7
    5738:	01 97       	sbiw	r24, 0x01	; 1
    573a:	f1 f7       	brne	.-4      	; 0x5738 <poll_SS+0x36>
    573c:	00 c0       	rjmp	.+0      	; 0x573e <poll_SS+0x3c>
    573e:	00 00       	nop
  //SPCR |=(1<<SPE);
  _delay_ms(1);
  data_r=SPI_transfer(0xFF); //Dummy transaction. Tell ADC that data transmission should begin now.
    5740:	8f ef       	ldi	r24, 0xFF	; 255
    5742:	da df       	rcall	.-76     	; 0x56f8 <SPI_transfer>
    5744:	ef ec       	ldi	r30, 0xCF	; 207
    5746:	f7 e0       	ldi	r31, 0x07	; 7
    5748:	31 97       	sbiw	r30, 0x01	; 1
    574a:	f1 f7       	brne	.-4      	; 0x5748 <poll_SS+0x46>
    574c:	00 c0       	rjmp	.+0      	; 0x574e <poll_SS+0x4c>
    574e:	00 00       	nop
  _delay_ms(1);
  //transmit_UART0(data_r);
  PORTA = 0xFF;
    5750:	8f ef       	ldi	r24, 0xFF	; 255
    5752:	8b bb       	out	0x1b, r24	; 27
  vall1=SPI_transfer(0xFF);//First data byte
    5754:	d1 df       	rcall	.-94     	; 0x56f8 <SPI_transfer>
    5756:	58 2e       	mov	r5, r24
    5758:	8f ec       	ldi	r24, 0xCF	; 207
    575a:	97 e0       	ldi	r25, 0x07	; 7
    575c:	01 97       	sbiw	r24, 0x01	; 1
    575e:	f1 f7       	brne	.-4      	; 0x575c <poll_SS+0x5a>
    5760:	00 c0       	rjmp	.+0      	; 0x5762 <poll_SS+0x60>
    5762:	00 00       	nop
  _delay_ms(1);
  valh1=SPI_transfer(0xFF);
    5764:	8f ef       	ldi	r24, 0xFF	; 255
    5766:	c8 df       	rcall	.-112    	; 0x56f8 <SPI_transfer>
    5768:	a8 2e       	mov	r10, r24
    576a:	ef ec       	ldi	r30, 0xCF	; 207
    576c:	f7 e0       	ldi	r31, 0x07	; 7
    576e:	31 97       	sbiw	r30, 0x01	; 1
    5770:	f1 f7       	brne	.-4      	; 0x576e <poll_SS+0x6c>
    5772:	00 c0       	rjmp	.+0      	; 0x5774 <poll_SS+0x72>
    5774:	00 00       	nop
  _delay_ms(1);


  vall2=SPI_transfer(0xFF);
    5776:	8f ef       	ldi	r24, 0xFF	; 255
    5778:	bf df       	rcall	.-130    	; 0x56f8 <SPI_transfer>
    577a:	68 2e       	mov	r6, r24
    577c:	8f ec       	ldi	r24, 0xCF	; 207
    577e:	97 e0       	ldi	r25, 0x07	; 7
    5780:	01 97       	sbiw	r24, 0x01	; 1
    5782:	f1 f7       	brne	.-4      	; 0x5780 <poll_SS+0x7e>
    5784:	00 c0       	rjmp	.+0      	; 0x5786 <poll_SS+0x84>
    5786:	00 00       	nop
  _delay_ms(1);
  valh2=SPI_transfer(0xFF);
    5788:	8f ef       	ldi	r24, 0xFF	; 255
    578a:	b6 df       	rcall	.-148    	; 0x56f8 <SPI_transfer>
    578c:	78 2e       	mov	r7, r24
    578e:	ef ec       	ldi	r30, 0xCF	; 207
    5790:	f7 e0       	ldi	r31, 0x07	; 7
    5792:	31 97       	sbiw	r30, 0x01	; 1
    5794:	f1 f7       	brne	.-4      	; 0x5792 <poll_SS+0x90>
    5796:	00 c0       	rjmp	.+0      	; 0x5798 <poll_SS+0x96>
    5798:	00 00       	nop
  _delay_ms(1);




  vall3=SPI_transfer(0xFF);
    579a:	8f ef       	ldi	r24, 0xFF	; 255
    579c:	ad df       	rcall	.-166    	; 0x56f8 <SPI_transfer>
    579e:	d8 2e       	mov	r13, r24
    57a0:	8f ec       	ldi	r24, 0xCF	; 207
    57a2:	97 e0       	ldi	r25, 0x07	; 7
    57a4:	01 97       	sbiw	r24, 0x01	; 1
    57a6:	f1 f7       	brne	.-4      	; 0x57a4 <poll_SS+0xa2>
    57a8:	00 c0       	rjmp	.+0      	; 0x57aa <poll_SS+0xa8>
    57aa:	00 00       	nop
  _delay_ms(1);
  valh3=SPI_transfer(0xFF);
    57ac:	8f ef       	ldi	r24, 0xFF	; 255
    57ae:	a4 df       	rcall	.-184    	; 0x56f8 <SPI_transfer>
    57b0:	c8 2e       	mov	r12, r24
    57b2:	ef ec       	ldi	r30, 0xCF	; 207
    57b4:	f7 e0       	ldi	r31, 0x07	; 7
    57b6:	31 97       	sbiw	r30, 0x01	; 1
    57b8:	f1 f7       	brne	.-4      	; 0x57b6 <poll_SS+0xb4>
    57ba:	00 c0       	rjmp	.+0      	; 0x57bc <poll_SS+0xba>
    57bc:	00 00       	nop
  _delay_ms(1);



  vall4=SPI_transfer(0xFF);
    57be:	8f ef       	ldi	r24, 0xFF	; 255
    57c0:	9b df       	rcall	.-202    	; 0x56f8 <SPI_transfer>
    57c2:	88 2e       	mov	r8, r24
    57c4:	8f ec       	ldi	r24, 0xCF	; 207
    57c6:	97 e0       	ldi	r25, 0x07	; 7
    57c8:	01 97       	sbiw	r24, 0x01	; 1
    57ca:	f1 f7       	brne	.-4      	; 0x57c8 <poll_SS+0xc6>
    57cc:	00 c0       	rjmp	.+0      	; 0x57ce <poll_SS+0xcc>
    57ce:	00 00       	nop
  _delay_ms(1);
  valh4=SPI_transfer(0xFF);
    57d0:	8f ef       	ldi	r24, 0xFF	; 255
    57d2:	92 df       	rcall	.-220    	; 0x56f8 <SPI_transfer>
    57d4:	98 2e       	mov	r9, r24
    57d6:	ef ec       	ldi	r30, 0xCF	; 207
    57d8:	f7 e0       	ldi	r31, 0x07	; 7
    57da:	31 97       	sbiw	r30, 0x01	; 1
    57dc:	f1 f7       	brne	.-4      	; 0x57da <poll_SS+0xd8>
    57de:	00 c0       	rjmp	.+0      	; 0x57e0 <poll_SS+0xde>
    57e0:	00 00       	nop
  _delay_ms(1);



  vall5=SPI_transfer(0xFF);
    57e2:	8f ef       	ldi	r24, 0xFF	; 255
    57e4:	89 df       	rcall	.-238    	; 0x56f8 <SPI_transfer>
    57e6:	f8 2e       	mov	r15, r24
    57e8:	8f ec       	ldi	r24, 0xCF	; 207
    57ea:	97 e0       	ldi	r25, 0x07	; 7
    57ec:	01 97       	sbiw	r24, 0x01	; 1
    57ee:	f1 f7       	brne	.-4      	; 0x57ec <poll_SS+0xea>
    57f0:	00 c0       	rjmp	.+0      	; 0x57f2 <poll_SS+0xf0>
    57f2:	00 00       	nop
  _delay_ms(1);
  valh5=SPI_transfer(0xFF);
    57f4:	8f ef       	ldi	r24, 0xFF	; 255
    57f6:	80 df       	rcall	.-256    	; 0x56f8 <SPI_transfer>
    57f8:	18 2f       	mov	r17, r24
    57fa:	ef ec       	ldi	r30, 0xCF	; 207
    57fc:	f7 e0       	ldi	r31, 0x07	; 7
    57fe:	31 97       	sbiw	r30, 0x01	; 1
    5800:	f1 f7       	brne	.-4      	; 0x57fe <poll_SS+0xfc>
    5802:	00 c0       	rjmp	.+0      	; 0x5804 <poll_SS+0x102>
    5804:	00 00       	nop
  _delay_ms(1);



  vall6=SPI_transfer(0xFF);
    5806:	8f ef       	ldi	r24, 0xFF	; 255
    5808:	77 df       	rcall	.-274    	; 0x56f8 <SPI_transfer>
    580a:	08 2f       	mov	r16, r24
    580c:	8f ec       	ldi	r24, 0xCF	; 207
    580e:	97 e0       	ldi	r25, 0x07	; 7
    5810:	01 97       	sbiw	r24, 0x01	; 1
    5812:	f1 f7       	brne	.-4      	; 0x5810 <poll_SS+0x10e>
    5814:	00 c0       	rjmp	.+0      	; 0x5816 <poll_SS+0x114>
    5816:	00 00       	nop
  _delay_ms(1);
  valh6=SPI_transfer(0xFF);
    5818:	8f ef       	ldi	r24, 0xFF	; 255
    581a:	6e df       	rcall	.-292    	; 0x56f8 <SPI_transfer>
    581c:	e8 2e       	mov	r14, r24
    581e:	ef ec       	ldi	r30, 0xCF	; 207
    5820:	f7 e0       	ldi	r31, 0x07	; 7
    5822:	31 97       	sbiw	r30, 0x01	; 1
    5824:	f1 f7       	brne	.-4      	; 0x5822 <poll_SS+0x120>
    5826:	00 c0       	rjmp	.+0      	; 0x5828 <poll_SS+0x126>
    5828:	00 00       	nop
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    582a:	b1 2c       	mov	r11, r1
	val=(val<<8)+vall;
    582c:	ba 2c       	mov	r11, r10
    582e:	aa 24       	eor	r10, r10
    5830:	a5 0c       	add	r10, r5
    5832:	b1 1c       	adc	r11, r1

  vall6=SPI_transfer(0xFF);
  _delay_ms(1);
  valh6=SPI_transfer(0xFF);
  _delay_ms(1);
  val[0]=convert(vall1,valh1);
    5834:	ba 82       	std	Y+2, r11	; 0x02
    5836:	a9 82       	std	Y+1, r10	; 0x01
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    5838:	27 2d       	mov	r18, r7
    583a:	30 e0       	ldi	r19, 0x00	; 0
	val=(val<<8)+vall;
    583c:	32 2f       	mov	r19, r18
    583e:	22 27       	eor	r18, r18
    5840:	26 0d       	add	r18, r6
    5842:	31 1d       	adc	r19, r1
  vall6=SPI_transfer(0xFF);
  _delay_ms(1);
  valh6=SPI_transfer(0xFF);
  _delay_ms(1);
  val[0]=convert(vall1,valh1);
  val[1]=convert(vall2,valh2);
    5844:	3c 83       	std	Y+4, r19	; 0x04
    5846:	2b 83       	std	Y+3, r18	; 0x03
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    5848:	8c 2d       	mov	r24, r12
    584a:	90 e0       	ldi	r25, 0x00	; 0
	val=(val<<8)+vall;
    584c:	98 2f       	mov	r25, r24
    584e:	88 27       	eor	r24, r24
    5850:	9c 01       	movw	r18, r24
    5852:	2d 0d       	add	r18, r13
    5854:	31 1d       	adc	r19, r1
    5856:	69 01       	movw	r12, r18
  _delay_ms(1);
  valh6=SPI_transfer(0xFF);
  _delay_ms(1);
  val[0]=convert(vall1,valh1);
  val[1]=convert(vall2,valh2);
  val[2]=convert(vall3,valh3);
    5858:	3e 83       	std	Y+6, r19	; 0x06
    585a:	2d 83       	std	Y+5, r18	; 0x05
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    585c:	29 2d       	mov	r18, r9
    585e:	30 e0       	ldi	r19, 0x00	; 0
	val=(val<<8)+vall;
    5860:	32 2f       	mov	r19, r18
    5862:	22 27       	eor	r18, r18
    5864:	28 0d       	add	r18, r8
    5866:	31 1d       	adc	r19, r1
  valh6=SPI_transfer(0xFF);
  _delay_ms(1);
  val[0]=convert(vall1,valh1);
  val[1]=convert(vall2,valh2);
  val[2]=convert(vall3,valh3);
  val[3]=convert(vall4,valh4);
    5868:	38 87       	std	Y+8, r19	; 0x08
    586a:	2f 83       	std	Y+7, r18	; 0x07
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    586c:	21 2f       	mov	r18, r17
    586e:	30 e0       	ldi	r19, 0x00	; 0
	val=(val<<8)+vall;
    5870:	32 2f       	mov	r19, r18
    5872:	22 27       	eor	r18, r18
    5874:	2f 0d       	add	r18, r15
    5876:	31 1d       	adc	r19, r1
  _delay_ms(1);
  val[0]=convert(vall1,valh1);
  val[1]=convert(vall2,valh2);
  val[2]=convert(vall3,valh3);
  val[3]=convert(vall4,valh4);
  val[4]=convert(vall5,valh5);
    5878:	3a 87       	std	Y+10, r19	; 0x0a
    587a:	29 87       	std	Y+9, r18	; 0x09
}

uint16_t convert(uint8_t vall, uint8_t valh) //to convert 2 8 bit integer values to one 16 bit value
{
	
	uint16_t val= valh;
    587c:	f1 2c       	mov	r15, r1
	val=(val<<8)+vall;
    587e:	fe 2c       	mov	r15, r14
    5880:	ee 24       	eor	r14, r14
    5882:	e0 0e       	add	r14, r16
    5884:	f1 1c       	adc	r15, r1
  val[0]=convert(vall1,valh1);
  val[1]=convert(vall2,valh2);
  val[2]=convert(vall3,valh3);
  val[3]=convert(vall4,valh4);
  val[4]=convert(vall5,valh5);
  val[5]=convert(vall6,valh6);
    5886:	fc 86       	std	Y+12, r15	; 0x0c
    5888:	eb 86       	std	Y+11, r14	; 0x0b
    588a:	ce 01       	movw	r24, r28
    588c:	01 96       	adiw	r24, 0x01	; 1
    588e:	4c 01       	movw	r8, r24

  for (int i=0;i<6;i=i+1)
    5890:	00 e0       	ldi	r16, 0x00	; 0
    5892:	10 e0       	ldi	r17, 0x00	; 0
  {
	  Current_state.ss.read[i] = (double)(((double)val[i]*3.3/1024.0));//Current_state.ss.read[i] = (double)(((double)Current_state.ss.reading[i]*3.3/1024)-1.65)*2;
    5894:	f4 01       	movw	r30, r8
    5896:	61 91       	ld	r22, Z+
    5898:	71 91       	ld	r23, Z+
    589a:	4f 01       	movw	r8, r30
    589c:	80 e0       	ldi	r24, 0x00	; 0
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	47 d7       	rcall	.+3726   	; 0x6730 <__floatunsisf>
    58a2:	23 e3       	ldi	r18, 0x33	; 51
    58a4:	33 e3       	ldi	r19, 0x33	; 51
    58a6:	43 e5       	ldi	r20, 0x53	; 83
    58a8:	50 e4       	ldi	r21, 0x40	; 64
    58aa:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    58ae:	20 e0       	ldi	r18, 0x00	; 0
    58b0:	30 e0       	ldi	r19, 0x00	; 0
    58b2:	40 e8       	ldi	r20, 0x80	; 128
    58b4:	5a e3       	ldi	r21, 0x3A	; 58
    58b6:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    58ba:	f8 01       	movw	r30, r16
    58bc:	ee 0f       	add	r30, r30
    58be:	ff 1f       	adc	r31, r31
    58c0:	ee 0f       	add	r30, r30
    58c2:	ff 1f       	adc	r31, r31
    58c4:	e5 53       	subi	r30, 0x35	; 53
    58c6:	fb 4f       	sbci	r31, 0xFB	; 251
    58c8:	61 ab       	std	Z+49, r22	; 0x31
    58ca:	72 ab       	std	Z+50, r23	; 0x32
    58cc:	83 ab       	std	Z+51, r24	; 0x33
    58ce:	94 ab       	std	Z+52, r25	; 0x34
  val[2]=convert(vall3,valh3);
  val[3]=convert(vall4,valh4);
  val[4]=convert(vall5,valh5);
  val[5]=convert(vall6,valh6);

  for (int i=0;i<6;i=i+1)
    58d0:	0f 5f       	subi	r16, 0xFF	; 255
    58d2:	1f 4f       	sbci	r17, 0xFF	; 255
    58d4:	06 30       	cpi	r16, 0x06	; 6
    58d6:	11 05       	cpc	r17, r1
    58d8:	e9 f6       	brne	.-70     	; 0x5894 <poll_SS+0x192>
    58da:	00 e0       	ldi	r16, 0x00	; 0
    58dc:	10 e0       	ldi	r17, 0x00	; 0
  
  uint8_t sen;
 // transmit_UART0('A');
  for(int i=0;i<6;i=i+1)
  {
	  sen = (Current_state.ss.read[i]*255/3.3);
    58de:	f8 01       	movw	r30, r16
    58e0:	ee 0f       	add	r30, r30
    58e2:	ff 1f       	adc	r31, r31
    58e4:	ee 0f       	add	r30, r30
    58e6:	ff 1f       	adc	r31, r31
    58e8:	e5 53       	subi	r30, 0x35	; 53
    58ea:	fb 4f       	sbci	r31, 0xFB	; 251
    58ec:	61 a9       	ldd	r22, Z+49	; 0x31
    58ee:	72 a9       	ldd	r23, Z+50	; 0x32
    58f0:	83 a9       	ldd	r24, Z+51	; 0x33
    58f2:	94 a9       	ldd	r25, Z+52	; 0x34
    58f4:	20 e0       	ldi	r18, 0x00	; 0
    58f6:	30 e0       	ldi	r19, 0x00	; 0
    58f8:	4f e7       	ldi	r20, 0x7F	; 127
    58fa:	53 e4       	ldi	r21, 0x43	; 67
    58fc:	0e 94 1d 35 	call	0x6a3a	; 0x6a3a <__mulsf3>
    5900:	23 e3       	ldi	r18, 0x33	; 51
    5902:	33 e3       	ldi	r19, 0x33	; 51
    5904:	43 e5       	ldi	r20, 0x53	; 83
    5906:	50 e4       	ldi	r21, 0x40	; 64
    5908:	7a d6       	rcall	.+3316   	; 0x65fe <__divsf3>
    590a:	e6 d6       	rcall	.+3532   	; 0x66d8 <__fixunssfsi>
	  transmit_UART0(sen);
    590c:	86 2f       	mov	r24, r22
    590e:	90 e0       	ldi	r25, 0x00	; 0
    5910:	5a d0       	rcall	.+180    	; 0x59c6 <transmit_UART0>
	  Current_state.ss.read[i] = (double)(((double)val[i]*3.3/1024.0));//Current_state.ss.read[i] = (double)(((double)Current_state.ss.reading[i]*3.3/1024)-1.65)*2;
  }
  
  uint8_t sen;
 // transmit_UART0('A');
  for(int i=0;i<6;i=i+1)
    5912:	0f 5f       	subi	r16, 0xFF	; 255
    5914:	1f 4f       	sbci	r17, 0xFF	; 255
    5916:	06 30       	cpi	r16, 0x06	; 6
    5918:	11 05       	cpc	r17, r1
    591a:	09 f7       	brne	.-62     	; 0x58de <poll_SS+0x1dc>
  {
	  sen = (Current_state.ss.read[i]*255/3.3);
	  transmit_UART0(sen);
  }
  ///////////////////////////////////
  if ((val[5]>30000)||(val[2]>30000)||(val[0]>30000))
    591c:	f1 e3       	ldi	r31, 0x31	; 49
    591e:	ef 16       	cp	r14, r31
    5920:	f5 e7       	ldi	r31, 0x75	; 117
    5922:	ff 06       	cpc	r15, r31
    5924:	50 f4       	brcc	.+20     	; 0x593a <poll_SS+0x238>
    5926:	21 e3       	ldi	r18, 0x31	; 49
    5928:	c2 16       	cp	r12, r18
    592a:	25 e7       	ldi	r18, 0x75	; 117
    592c:	d2 06       	cpc	r13, r18
    592e:	28 f4       	brcc	.+10     	; 0x593a <poll_SS+0x238>
    5930:	31 e3       	ldi	r19, 0x31	; 49
    5932:	a3 16       	cp	r10, r19
    5934:	35 e7       	ldi	r19, 0x75	; 117
    5936:	b3 06       	cpc	r11, r19
    5938:	48 f0       	brcs	.+18     	; 0x594c <poll_SS+0x24a>
    593a:	8f ef       	ldi	r24, 0xFF	; 255
    593c:	9d e3       	ldi	r25, 0x3D	; 61
    593e:	e9 e4       	ldi	r30, 0x49	; 73
    5940:	81 50       	subi	r24, 0x01	; 1
    5942:	90 40       	sbci	r25, 0x00	; 0
    5944:	e0 40       	sbci	r30, 0x00	; 0
    5946:	e1 f7       	brne	.-8      	; 0x5940 <poll_SS+0x23e>
    5948:	00 c0       	rjmp	.+0      	; 0x594a <poll_SS+0x248>
    594a:	00 00       	nop
  {
	  _delay_ms(3000);
  }
  ///////////////////////////////////
 
  PORTB |= (1<<PB5);
    594c:	c5 9a       	sbi	0x18, 5	; 24
  //_delay_ms(1000);
  ///Power Down PD low
  //cbi(PORTB, PB6);
//return;  
}
    594e:	2c 96       	adiw	r28, 0x0c	; 12
    5950:	0f b6       	in	r0, 0x3f	; 63
    5952:	f8 94       	cli
    5954:	de bf       	out	0x3e, r29	; 62
    5956:	0f be       	out	0x3f, r0	; 63
    5958:	cd bf       	out	0x3d, r28	; 61
    595a:	df 91       	pop	r29
    595c:	cf 91       	pop	r28
    595e:	1f 91       	pop	r17
    5960:	0f 91       	pop	r16
    5962:	ff 90       	pop	r15
    5964:	ef 90       	pop	r14
    5966:	df 90       	pop	r13
    5968:	cf 90       	pop	r12
    596a:	bf 90       	pop	r11
    596c:	af 90       	pop	r10
    596e:	9f 90       	pop	r9
    5970:	8f 90       	pop	r8
    5972:	7f 90       	pop	r7
    5974:	6f 90       	pop	r6
    5976:	5f 90       	pop	r5
    5978:	08 95       	ret

0000597a <timer_reset_two_sec>:
__attribute__ ((__always_inline__))
void wdt_enable (const uint8_t value)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
		__asm__ __volatile__ (
    597a:	86 b7       	in	r24, 0x36	; 54
    597c:	80 61       	ori	r24, 0x10	; 16
    597e:	86 bf       	out	0x36, r24	; 54
    5980:	1e bc       	out	0x2e, r1	; 46
    5982:	1d bc       	out	0x2d, r1	; 45
    5984:	1c bc       	out	0x2c, r1	; 44
    5986:	88 e0       	ldi	r24, 0x08	; 8
    5988:	9d e3       	ldi	r25, 0x3D	; 61
    598a:	9b bd       	out	0x2b, r25	; 43
    598c:	8a bd       	out	0x2a, r24	; 42
    598e:	1f bc       	out	0x2f, r1	; 47
    5990:	85 e0       	ldi	r24, 0x05	; 5
    5992:	8e bd       	out	0x2e, r24	; 46
    5994:	10 92 7a 00 	sts	0x007A, r1
    5998:	08 95       	ret

0000599a <timer_wait_reset>:
    599a:	06 b6       	in	r0, 0x36	; 54
    599c:	04 fe       	sbrs	r0, 4
    599e:	fd cf       	rjmp	.-6      	; 0x599a <timer_wait_reset>
    59a0:	ec cf       	rjmp	.-40     	; 0x597a <timer_reset_two_sec>
    59a2:	08 95       	ret

000059a4 <init_UART0>:
    59a4:	1b b8       	out	0x0b, r1	; 11
    59a6:	1a b8       	out	0x0a, r1	; 10
    59a8:	e5 e9       	ldi	r30, 0x95	; 149
    59aa:	f0 e0       	ldi	r31, 0x00	; 0
    59ac:	10 82       	st	Z, r1
    59ae:	59 9a       	sbi	0x0b, 1	; 11
    59b0:	8a b1       	in	r24, 0x0a	; 10
    59b2:	88 61       	ori	r24, 0x18	; 24
    59b4:	8a b9       	out	0x0a, r24	; 10
    59b6:	80 81       	ld	r24, Z
    59b8:	8e 60       	ori	r24, 0x0E	; 14
    59ba:	80 83       	st	Z, r24
    59bc:	87 e6       	ldi	r24, 0x67	; 103
    59be:	89 b9       	out	0x09, r24	; 9
    59c0:	10 92 90 00 	sts	0x0090, r1
    59c4:	08 95       	ret

000059c6 <transmit_UART0>:
    59c6:	5d 9b       	sbis	0x0b, 5	; 11
    59c8:	fe cf       	rjmp	.-4      	; 0x59c6 <transmit_UART0>
    59ca:	8c b9       	out	0x0c, r24	; 12
    59cc:	08 95       	ret

000059ce <transmit_string_UART0>:
    59ce:	fc 01       	movw	r30, r24
    59d0:	90 81       	ld	r25, Z
    59d2:	99 23       	and	r25, r25
    59d4:	39 f0       	breq	.+14     	; 0x59e4 <transmit_string_UART0+0x16>
    59d6:	31 96       	adiw	r30, 0x01	; 1
    59d8:	5d 9b       	sbis	0x0b, 5	; 11
    59da:	fe cf       	rjmp	.-4      	; 0x59d8 <transmit_string_UART0+0xa>
    59dc:	9c b9       	out	0x0c, r25	; 12
    59de:	91 91       	ld	r25, Z+
    59e0:	91 11       	cpse	r25, r1
    59e2:	fa cf       	rjmp	.-12     	; 0x59d8 <transmit_string_UART0+0xa>
    59e4:	08 95       	ret

000059e6 <TWI_init_master>:
{
	// Clear TWI interrupt flag, Put start condition on SDA, Enable TWI
	TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
	while(!(TWCR & (1<<TWINT))); // wait till restart condition is transmitted
	while((TWSR & 0xF8)!= 0x10); // Check for the acknoledgement
}
    59e6:	10 92 71 00 	sts	0x0071, r1
    59ea:	10 92 74 00 	sts	0x0074, r1
    59ee:	8c e0       	ldi	r24, 0x0C	; 12
    59f0:	80 93 70 00 	sts	0x0070, r24
    59f4:	08 95       	ret

000059f6 <TWI_start>:
    59f6:	84 ea       	ldi	r24, 0xA4	; 164
    59f8:	80 93 74 00 	sts	0x0074, r24
    59fc:	e4 e7       	ldi	r30, 0x74	; 116
    59fe:	f0 e0       	ldi	r31, 0x00	; 0
    5a00:	80 81       	ld	r24, Z
    5a02:	88 23       	and	r24, r24
    5a04:	ec f7       	brge	.-6      	; 0x5a00 <TWI_start+0xa>
    5a06:	e1 e7       	ldi	r30, 0x71	; 113
    5a08:	f0 e0       	ldi	r31, 0x00	; 0
    5a0a:	80 81       	ld	r24, Z
    5a0c:	88 7f       	andi	r24, 0xF8	; 248
    5a0e:	88 30       	cpi	r24, 0x08	; 8
    5a10:	e1 f7       	brne	.-8      	; 0x5a0a <TWI_start+0x14>
    5a12:	08 95       	ret

00005a14 <TWI_write_address>:

void TWI_write_address(unsigned char data)//Function for Master side to send slave address for I2C
{

	TWDR=data; // Address and write instruction
    5a14:	80 93 73 00 	sts	0x0073, r24
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
    5a18:	84 e8       	ldi	r24, 0x84	; 132
    5a1a:	80 93 74 00 	sts	0x0074, r24
	while (!(TWCR & (1<<TWINT)))// Wait till complete TWDR byte transmitted
    5a1e:	a4 e7       	ldi	r26, 0x74	; 116
    5a20:	b0 e0       	ldi	r27, 0x00	; 0
	while((TWSR & 0xF8)!= 0x18);  // Check for the acknowledgement
    5a22:	e1 e7       	ldi	r30, 0x71	; 113
    5a24:	f0 e0       	ldi	r31, 0x00	; 0
void TWI_write_address(unsigned char data)//Function for Master side to send slave address for I2C
{

	TWDR=data; // Address and write instruction
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT)))// Wait till complete TWDR byte transmitted
    5a26:	04 c0       	rjmp	.+8      	; 0x5a30 <TWI_write_address+0x1c>
	while((TWSR & 0xF8)!= 0x18);  // Check for the acknowledgement
    5a28:	80 81       	ld	r24, Z
    5a2a:	88 7f       	andi	r24, 0xF8	; 248
    5a2c:	88 31       	cpi	r24, 0x18	; 24
    5a2e:	e1 f7       	brne	.-8      	; 0x5a28 <TWI_write_address+0x14>
void TWI_write_address(unsigned char data)//Function for Master side to send slave address for I2C
{

	TWDR=data; // Address and write instruction
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT)))// Wait till complete TWDR byte transmitted
    5a30:	8c 91       	ld	r24, X
    5a32:	88 23       	and	r24, r24
    5a34:	cc f7       	brge	.-14     	; 0x5a28 <TWI_write_address+0x14>
	while((TWSR & 0xF8)!= 0x18);  // Check for the acknowledgement

}
    5a36:	08 95       	ret

00005a38 <TWI_read_address>:

void TWI_read_address(unsigned char data) //Function for slave side to read address sent by Master
{
	TWDR=data; // Address and read instruction
    5a38:	80 93 73 00 	sts	0x0073, r24
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
    5a3c:	84 e8       	ldi	r24, 0x84	; 132
    5a3e:	80 93 74 00 	sts	0x0074, r24
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte received
    5a42:	e4 e7       	ldi	r30, 0x74	; 116
    5a44:	f0 e0       	ldi	r31, 0x00	; 0
    5a46:	80 81       	ld	r24, Z
    5a48:	88 23       	and	r24, r24
    5a4a:	ec f7       	brge	.-6      	; 0x5a46 <TWI_read_address+0xe>
	while((TWSR & 0xF8)!= 0x40);  // Check for the acknoledgement
    5a4c:	e1 e7       	ldi	r30, 0x71	; 113
    5a4e:	f0 e0       	ldi	r31, 0x00	; 0
    5a50:	80 81       	ld	r24, Z
    5a52:	88 7f       	andi	r24, 0xF8	; 248
    5a54:	80 34       	cpi	r24, 0x40	; 64
    5a56:	e1 f7       	brne	.-8      	; 0x5a50 <TWI_read_address+0x18>
}
    5a58:	08 95       	ret

00005a5a <TWI_write_data>:

void TWI_write_data(unsigned char data)//Function to write data on I2C data line
{
	TWDR=data; // put data in TWDR
    5a5a:	80 93 73 00 	sts	0x0073, r24
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
    5a5e:	84 e8       	ldi	r24, 0x84	; 132
    5a60:	80 93 74 00 	sts	0x0074, r24
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
    5a64:	e4 e7       	ldi	r30, 0x74	; 116
    5a66:	f0 e0       	ldi	r31, 0x00	; 0
    5a68:	80 81       	ld	r24, Z
    5a6a:	88 23       	and	r24, r24
    5a6c:	ec f7       	brge	.-6      	; 0x5a68 <TWI_write_data+0xe>
	while((TWSR & 0xF8) != 0x28); // Check for the acknoledgement
    5a6e:	e1 e7       	ldi	r30, 0x71	; 113
    5a70:	f0 e0       	ldi	r31, 0x00	; 0
    5a72:	80 81       	ld	r24, Z
    5a74:	88 7f       	andi	r24, 0xF8	; 248
    5a76:	88 32       	cpi	r24, 0x28	; 40
    5a78:	e1 f7       	brne	.-8      	; 0x5a72 <TWI_write_data+0x18>
}
    5a7a:	08 95       	ret

00005a7c <TWI_read_data>:

void TWI_read_data(void) //Function to read data from I2C data line
{
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
    5a7c:	84 e8       	ldi	r24, 0x84	; 132
    5a7e:	80 93 74 00 	sts	0x0074, r24
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
    5a82:	e4 e7       	ldi	r30, 0x74	; 116
    5a84:	f0 e0       	ldi	r31, 0x00	; 0
    5a86:	80 81       	ld	r24, Z
    5a88:	88 23       	and	r24, r24
    5a8a:	ec f7       	brge	.-6      	; 0x5a86 <TWI_read_data+0xa>
	while((TWSR & 0xF8) != 0x58); // Check for the acknoledgement
    5a8c:	e1 e7       	ldi	r30, 0x71	; 113
    5a8e:	f0 e0       	ldi	r31, 0x00	; 0
    5a90:	80 81       	ld	r24, Z
    5a92:	88 7f       	andi	r24, 0xF8	; 248
    5a94:	88 35       	cpi	r24, 0x58	; 88
    5a96:	e1 f7       	brne	.-8      	; 0x5a90 <TWI_read_data+0x14>
	recv_data=TWDR;//PORTA=recv_data;
    5a98:	80 91 73 00 	lds	r24, 0x0073
    5a9c:	80 93 30 05 	sts	0x0530, r24
    5aa0:	08 95       	ret

00005aa2 <TWI_stop>:
}

void TWI_stop(void)//Function to stop data transmission
{
	// Clear TWI interrupt flag, Put stop condition on SDA, Enable TWI
	TWCR= (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
    5aa2:	84 e9       	ldi	r24, 0x94	; 148
    5aa4:	80 93 74 00 	sts	0x0074, r24
	while(!(TWCR & (1<<TWSTO)));  // Wait till stop condition is transmitted
    5aa8:	e4 e7       	ldi	r30, 0x74	; 116
    5aaa:	f0 e0       	ldi	r31, 0x00	; 0
    5aac:	80 81       	ld	r24, Z
    5aae:	84 ff       	sbrs	r24, 4
    5ab0:	fd cf       	rjmp	.-6      	; 0x5aac <TWI_stop+0xa>
}
    5ab2:	08 95       	ret

00005ab4 <SendHM>:
/**
 * @brief Main function
 */

 void SendHM(void)
 {
    5ab4:	e9 e3       	ldi	r30, 0x39	; 57
    5ab6:	f5 e0       	ldi	r31, 0x05	; 5
    5ab8:	20 e4       	ldi	r18, 0x40	; 64
    5aba:	35 e0       	ldi	r19, 0x05	; 5
	 for (uint8_t i =0;i<7;i++) {
		 SPDR = HM_Data[i];
		 while(!(SPSR & (1<<SPIF) ));
		 PORTA = 0xFF;
    5abc:	9f ef       	ldi	r25, 0xFF	; 255
 */

 void SendHM(void)
 {
	 for (uint8_t i =0;i<7;i++) {
		 SPDR = HM_Data[i];
    5abe:	81 91       	ld	r24, Z+
    5ac0:	8f b9       	out	0x0f, r24	; 15
		 while(!(SPSR & (1<<SPIF) ));
    5ac2:	77 9b       	sbis	0x0e, 7	; 14
    5ac4:	fe cf       	rjmp	.-4      	; 0x5ac2 <SendHM+0xe>
		 PORTA = 0xFF;
    5ac6:	9b bb       	out	0x1b, r25	; 27
    5ac8:	af ec       	ldi	r26, 0xCF	; 207
    5aca:	b7 e0       	ldi	r27, 0x07	; 7
    5acc:	11 97       	sbiw	r26, 0x01	; 1
    5ace:	f1 f7       	brne	.-4      	; 0x5acc <SendHM+0x18>
    5ad0:	00 c0       	rjmp	.+0      	; 0x5ad2 <SendHM+0x1e>
    5ad2:	00 00       	nop
 * @brief Main function
 */

 void SendHM(void)
 {
	 for (uint8_t i =0;i<7;i++) {
    5ad4:	e2 17       	cp	r30, r18
    5ad6:	f3 07       	cpc	r31, r19
    5ad8:	91 f7       	brne	.-28     	; 0x5abe <SendHM+0xa>
		 SPDR = HM_Data[i];
		 while(!(SPSR & (1<<SPIF) ));
		 PORTA = 0xFF;
		 _delay_ms(1);
	 }
 }
    5ada:	08 95       	ret

00005adc <main>:


int main(void){
    5adc:	cf 93       	push	r28
    5ade:	df 93       	push	r29
    5ae0:	cd b7       	in	r28, 0x3d	; 61
    5ae2:	de b7       	in	r29, 0x3e	; 62
    5ae4:	a0 97       	sbiw	r28, 0x20	; 32
    5ae6:	0f b6       	in	r0, 0x3f	; 63
    5ae8:	f8 94       	cli
    5aea:	de bf       	out	0x3e, r29	; 62
    5aec:	0f be       	out	0x3f, r0	; 63
    5aee:	cd bf       	out	0x3d, r28	; 61
    
  /// Initialise Interfaces - UART of Magnetometer and GPS and the SPI bus
   //0 - no over current; 1-reverse
  //Current_state.gps.gps_OC = 0;
  init_SPI();
    5af0:	f6 dd       	rcall	.-1044   	; 0x56de <init_SPI>
  init_UART0();
    5af2:	58 df       	rcall	.-336    	; 0x59a4 <init_UART0>
  init_UART_MM();
    5af4:	0e 94 ef 1b 	call	0x37de	; 0x37de <init_UART_MM>
  configure_torquer();
    5af8:	0e 94 53 20 	call	0x40a6	; 0x40a6 <configure_torquer>
  DDRA=0xF0;
    5afc:	80 ef       	ldi	r24, 0xF0	; 240
    5afe:	8a bb       	out	0x1a, r24	; 26
  Current_state.gps.gps_OC = 0; // This is important because the default value of OC should be 0
    5b00:	10 92 ec 04 	sts	0x04EC, r1
  DDRB |= (1<<PB0)|(1<<PB5);//PB0 and PB5 are slave select pins for Slave OBC and ADC
    5b04:	87 b3       	in	r24, 0x17	; 23
    5b06:	81 62       	ori	r24, 0x21	; 33
    5b08:	87 bb       	out	0x17, r24	; 23
    5b0a:	2f ef       	ldi	r18, 0xFF	; 255
    5b0c:	83 ed       	ldi	r24, 0xD3	; 211
    5b0e:	90 e3       	ldi	r25, 0x30	; 48
    5b10:	21 50       	subi	r18, 0x01	; 1
    5b12:	80 40       	sbci	r24, 0x00	; 0
    5b14:	90 40       	sbci	r25, 0x00	; 0
    5b16:	e1 f7       	brne	.-8      	; 0x5b10 <main+0x34>
    5b18:	00 c0       	rjmp	.+0      	; 0x5b1a <main+0x3e>
    5b1a:	00 00       	nop
  int j=1;
  _delay_ms(2000);
  PORTA=0b11010000; //LED indicator for debugging
    5b1c:	80 ed       	ldi	r24, 0xD0	; 208
    5b1e:	8b bb       	out	0x1b, r24	; 27
  TWI_init_master();
    5b20:	62 df       	rcall	.-316    	; 0x59e6 <TWI_init_master>
  transmit_string_UART0("Flight");// uncomment afetrwards
    5b22:	8a e9       	ldi	r24, 0x9A	; 154
    5b24:	91 e0       	ldi	r25, 0x01	; 1
    5b26:	53 df       	rcall	.-346    	; 0x59ce <transmit_string_UART0>
  transmit_string_UART0("Code");
    5b28:	81 ea       	ldi	r24, 0xA1	; 161
    5b2a:	91 e0       	ldi	r25, 0x01	; 1
    5b2c:	50 df       	rcall	.-352    	; 0x59ce <transmit_string_UART0>
    5b2e:	af ef       	ldi	r26, 0xFF	; 255
    5b30:	b1 e1       	ldi	r27, 0x11	; 17
    5b32:	ea e7       	ldi	r30, 0x7A	; 122
    5b34:	a1 50       	subi	r26, 0x01	; 1
    5b36:	b0 40       	sbci	r27, 0x00	; 0
    5b38:	e0 40       	sbci	r30, 0x00	; 0
    5b3a:	e1 f7       	brne	.-8      	; 0x5b34 <main+0x58>
    5b3c:	00 c0       	rjmp	.+0      	; 0x5b3e <main+0x62>
    5b3e:	00 00       	nop
    ///Wait for all components to switch on
    _delay_ms(5000);
    
    ///* Switch on Global interrupts
    sei();
    5b40:	78 94       	sei
    
    ///* Set default mode of Satellite
    //Mode = DETUMBLING;
   // Mode = NOMINAL;
    ///* initialise Timer
    Time = 0;
    5b42:	10 92 31 05 	sts	0x0531, r1
    5b46:	10 92 32 05 	sts	0x0532, r1
    5b4a:	10 92 33 05 	sts	0x0533, r1
    5b4e:	10 92 34 05 	sts	0x0534, r1
    5b52:	10 92 35 05 	sts	0x0535, r1
    5b56:	10 92 36 05 	sts	0x0536, r1
    5b5a:	10 92 37 05 	sts	0x0537, r1
    5b5e:	10 92 38 05 	sts	0x0538, r1
  PORTB |= (1<<PB5); //Set slave select of ADC =1
	PORTB &= ~(1<<PB0);//Set slave select of Slave OBC = 0
	//SPCR |= (1<<SPE);
	//write_data&= ~(1<<4);// Turn off downlink
	//write_data&= ~(1<<1);//Turn off uplink
	if((Current_state.gps.gps_power_main==2)&&(Current_state.gps.gps_OC == 0))// gps_oc =0 means no overcurrent
    5b62:	0f 2e       	mov	r0, r31
    5b64:	ff eb       	ldi	r31, 0xBF	; 191
    5b66:	af 2e       	mov	r10, r31
    5b68:	f4 e0       	ldi	r31, 0x04	; 4
    5b6a:	bf 2e       	mov	r11, r31
    5b6c:	f0 2d       	mov	r31, r0
    5b6e:	0f 2e       	mov	r0, r31
    5b70:	f0 e4       	ldi	r31, 0x40	; 64
    5b72:	4f 2e       	mov	r4, r31
    5b74:	f5 e0       	ldi	r31, 0x05	; 5
    5b76:	5f 2e       	mov	r5, r31
    5b78:	f0 2d       	mov	r31, r0
G10 = (uint8_t)(q_o[1]*256);
G11 = (uint8_t)(q_o[2]*256);
G12 = (uint8_t)(q_o[3]*256);


GPS_Data[0] = G1;
    5b7a:	0f 2e       	mov	r0, r31
    5b7c:	f4 e1       	ldi	r31, 0x14	; 20
    5b7e:	6f 2e       	mov	r6, r31
    5b80:	f1 e0       	ldi	r31, 0x01	; 1
    5b82:	7f 2e       	mov	r7, r31
    5b84:	f0 2d       	mov	r31, r0
    5b86:	0f 2e       	mov	r0, r31
    5b88:	f0 e2       	ldi	r31, 0x20	; 32
    5b8a:	2f 2e       	mov	r2, r31
    5b8c:	f1 e0       	ldi	r31, 0x01	; 1
    5b8e:	3f 2e       	mov	r3, r31
    5b90:	f0 2d       	mov	r31, r0
			
			for (uint8_t i =0;i<12;i++) 
			{
				SPDR = GPS_Data[i];
				while(!(SPSR & (1<<SPIF) ));
				PORTA = 0xFF;
    5b92:	88 24       	eor	r8, r8
    5b94:	8a 94       	dec	r8
       */
	 
	  
  while (1)
  {
	  timer_reset_two_sec();
    5b96:	f1 de       	rcall	.-542    	; 0x597a <timer_reset_two_sec>
	  //wdt_enable(WDTO_2S);
	  //wdt_reset();
	  if (Mode == DETUMBLING){ write_data|=(1<<6)|(1<<3)|(1<<2);}
    5b98:	80 91 26 01 	lds	r24, 0x0126
    5b9c:	84 30       	cpi	r24, 0x04	; 4
    5b9e:	31 f4       	brne	.+12     	; 0x5bac <main+0xd0>
    5ba0:	80 91 25 01 	lds	r24, 0x0125
    5ba4:	8c 64       	ori	r24, 0x4C	; 76
    5ba6:	80 93 25 01 	sts	0x0125, r24
    5baa:	07 c0       	rjmp	.+14     	; 0x5bba <main+0xde>
	  if (Mode == NOMINAL){write_data|=(1<<6)|(1<<3)|(1<<2)|(1<<7);}
    5bac:	81 30       	cpi	r24, 0x01	; 1
    5bae:	29 f4       	brne	.+10     	; 0x5bba <main+0xde>
    5bb0:	80 91 25 01 	lds	r24, 0x0125
    5bb4:	8c 6c       	ori	r24, 0xCC	; 204
    5bb6:	80 93 25 01 	sts	0x0125, r24
	  
  PORTB |= (1<<PB5); //Set slave select of ADC =1
    5bba:	c5 9a       	sbi	0x18, 5	; 24
	PORTB &= ~(1<<PB0);//Set slave select of Slave OBC = 0
    5bbc:	c0 98       	cbi	0x18, 0	; 24
	//SPCR |= (1<<SPE);
	//write_data&= ~(1<<4);// Turn off downlink
	//write_data&= ~(1<<1);//Turn off uplink
	if((Current_state.gps.gps_power_main==2)&&(Current_state.gps.gps_OC == 0))// gps_oc =0 means no overcurrent
    5bbe:	d5 01       	movw	r26, r10
    5bc0:	9e 96       	adiw	r26, 0x2e	; 46
    5bc2:	8c 91       	ld	r24, X
    5bc4:	9e 97       	sbiw	r26, 0x2e	; 46
    5bc6:	82 30       	cpi	r24, 0x02	; 2
    5bc8:	51 f4       	brne	.+20     	; 0x5bde <main+0x102>
    5bca:	9d 96       	adiw	r26, 0x2d	; 45
    5bcc:	8c 91       	ld	r24, X
    5bce:	81 11       	cpse	r24, r1
    5bd0:	06 c0       	rjmp	.+12     	; 0x5bde <main+0x102>
	{write_data |= (1<<5);}
    5bd2:	80 91 25 01 	lds	r24, 0x0125
    5bd6:	80 62       	ori	r24, 0x20	; 32
    5bd8:	80 93 25 01 	sts	0x0125, r24
    5bdc:	05 c0       	rjmp	.+10     	; 0x5be8 <main+0x10c>
		else
		{write_data&= ~(1<<5);}//transmit_UART0('a');
    5bde:	80 91 25 01 	lds	r24, 0x0125
    5be2:	8f 7d       	andi	r24, 0xDF	; 223
    5be4:	80 93 25 01 	sts	0x0125, r24
			
	
	if ((Mode == NOMINAL)&&(light_main == 0)) //Nominal+Eclipse
    5be8:	80 91 26 01 	lds	r24, 0x0126
    5bec:	81 30       	cpi	r24, 0x01	; 1
    5bee:	49 f4       	brne	.+18     	; 0x5c02 <main+0x126>
    5bf0:	80 91 13 01 	lds	r24, 0x0113
    5bf4:	81 11       	cpse	r24, r1
    5bf6:	05 c0       	rjmp	.+10     	; 0x5c02 <main+0x126>
	{
		write_data &= ~(1<<5);// Turn off GPS
		write_data &= ~(1<<2);// Turn off Mag
		write_data &= ~(1<<6);// Turn off Torq
    5bf8:	80 91 25 01 	lds	r24, 0x0125
    5bfc:	8b 79       	andi	r24, 0x9B	; 155
    5bfe:	80 93 25 01 	sts	0x0125, r24
    5c02:	9f e0       	ldi	r25, 0x0F	; 15
    5c04:	88 e1       	ldi	r24, 0x18	; 24
    5c06:	0f b6       	in	r0, 0x3f	; 63
    5c08:	f8 94       	cli
    5c0a:	a8 95       	wdr
    5c0c:	81 bd       	out	0x21, r24	; 33
    5c0e:	0f be       	out	0x3f, r0	; 63
    5c10:	91 bd       	out	0x21, r25	; 33
	}
	
	wdt_enable(WDTO_2S);
	wdt_reset();
    5c12:	a8 95       	wdr
	
PORTA = 0xAA;
    5c14:	8a ea       	ldi	r24, 0xAA	; 170
    5c16:	8b bb       	out	0x1b, r24	; 27
TWI_start(); // Function to send start condition
    5c18:	ee de       	rcall	.-548    	; 0x59f6 <TWI_start>
PORTA=0b11000000;
    5c1a:	80 ec       	ldi	r24, 0xC0	; 192
    5c1c:	8b bb       	out	0x1b, r24	; 27
TWI_write_address(address); // Function to write address and data direction bit(write) on SDA
    5c1e:	80 91 24 01 	lds	r24, 0x0124
    5c22:	f8 de       	rcall	.-528    	; 0x5a14 <TWI_write_address>

PORTA=0b01100000;
    5c24:	80 e6       	ldi	r24, 0x60	; 96
    5c26:	8b bb       	out	0x1b, r24	; 27
TWI_write_data(write_data);     // Function to write data in slave
    5c28:	80 91 25 01 	lds	r24, 0x0125
    5c2c:	16 df       	rcall	.-468    	; 0x5a5a <TWI_write_data>
PORTA=0b10100000;
    5c2e:	80 ea       	ldi	r24, 0xA0	; 160
    5c30:	8b bb       	out	0x1b, r24	; 27
TWI_stop(); // Function to send stop condition
    5c32:	37 df       	rcall	.-402    	; 0x5aa2 <TWI_stop>
    5c34:	ef e1       	ldi	r30, 0x1F	; 31
    5c36:	fe e4       	ldi	r31, 0x4E	; 78
    5c38:	31 97       	sbiw	r30, 0x01	; 1
    5c3a:	f1 f7       	brne	.-4      	; 0x5c38 <main+0x15c>
    5c3c:	00 c0       	rjmp	.+0      	; 0x5c3e <main+0x162>
    5c3e:	00 00       	nop
    5c40:	89 e3       	ldi	r24, 0x39	; 57
    5c42:	95 e0       	ldi	r25, 0x05	; 5
    5c44:	8c 01       	movw	r16, r24
    5c46:	7c 01       	movw	r14, r24
_delay_ms(10); // Delay of 10 mili second
//************************Get HM Data from Power Board*************************************

for(int i=0;i<7;i=i+1) 
{
	TWI_start();
    5c48:	d6 de       	rcall	.-596    	; 0x59f6 <TWI_start>
	
	TWI_read_address(address+read); // Function to write address and data direction bit(read) on SDA
    5c4a:	90 91 23 01 	lds	r25, 0x0123
    5c4e:	80 91 24 01 	lds	r24, 0x0124
    5c52:	89 0f       	add	r24, r25
    5c54:	f1 de       	rcall	.-542    	; 0x5a38 <TWI_read_address>
	TWI_read_data(); // Function to read data from slave
    5c56:	12 df       	rcall	.-476    	; 0x5a7c <TWI_read_data>
	HM_Data[i] = recv_data;
    5c58:	80 91 30 05 	lds	r24, 0x0530
    5c5c:	d7 01       	movw	r26, r14
    5c5e:	8d 93       	st	X+, r24
    5c60:	7d 01       	movw	r14, r26
	TWI_stop();
    5c62:	1f df       	rcall	.-450    	; 0x5aa2 <TWI_stop>

//if (UniversalCycles%CyclesToCollectData == 0){transmit_string_UART0("PRA");}
_delay_ms(10); // Delay of 10 mili second
//************************Get HM Data from Power Board*************************************

for(int i=0;i<7;i=i+1) 
    5c64:	e4 14       	cp	r14, r4
    5c66:	f5 04       	cpc	r15, r5
    5c68:	79 f7       	brne	.-34     	; 0x5c48 <main+0x16c>
    5c6a:	1a 8b       	std	Y+18, r17	; 0x12
    5c6c:	09 8b       	std	Y+17, r16	; 0x11
void wdt_disable (void)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    5c6e:	0f b6       	in	r0, 0x3f	; 63
    5c70:	f8 94       	cli
    5c72:	a8 95       	wdr
    5c74:	81 b5       	in	r24, 0x21	; 33
    5c76:	88 61       	ori	r24, 0x18	; 24
    5c78:	81 bd       	out	0x21, r24	; 33
    5c7a:	11 bc       	out	0x21, r1	; 33
    5c7c:	0f be       	out	0x3f, r0	; 63
    5c7e:	ef e1       	ldi	r30, 0x1F	; 31
    5c80:	fe e4       	ldi	r31, 0x4E	; 78
    5c82:	31 97       	sbiw	r30, 0x01	; 1
    5c84:	f1 f7       	brne	.-4      	; 0x5c82 <main+0x1a6>
    5c86:	00 c0       	rjmp	.+0      	; 0x5c88 <main+0x1ac>
    5c88:	00 00       	nop
}
wdt_disable();
_delay_ms(10);
////////////////////////////////////////////////////////
uint8_t G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,G11,G12;
G1 = (uint8_t)Current_state.gps.lat;
    5c8a:	d5 01       	movw	r26, r10
    5c8c:	58 96       	adiw	r26, 0x18	; 24
    5c8e:	8d 91       	ld	r24, X+
    5c90:	9d 91       	ld	r25, X+
    5c92:	0d 90       	ld	r0, X+
    5c94:	bc 91       	ld	r27, X
    5c96:	a0 2d       	mov	r26, r0
    5c98:	89 83       	std	Y+1, r24	; 0x01
    5c9a:	9a 83       	std	Y+2, r25	; 0x02
    5c9c:	ab 83       	std	Y+3, r26	; 0x03
    5c9e:	bc 83       	std	Y+4, r27	; 0x04
G2 = (uint8_t)((Current_state.gps.lat)>>8);
    5ca0:	d5 01       	movw	r26, r10
    5ca2:	58 96       	adiw	r26, 0x18	; 24
    5ca4:	8d 91       	ld	r24, X+
    5ca6:	9d 91       	ld	r25, X+
    5ca8:	0d 90       	ld	r0, X+
    5caa:	bc 91       	ld	r27, X
    5cac:	a0 2d       	mov	r26, r0
    5cae:	8d 83       	std	Y+5, r24	; 0x05
    5cb0:	9e 83       	std	Y+6, r25	; 0x06
    5cb2:	af 83       	std	Y+7, r26	; 0x07
    5cb4:	b8 87       	std	Y+8, r27	; 0x08
G3 = (uint8_t)Current_state.gps.lon;
    5cb6:	d5 01       	movw	r26, r10
    5cb8:	5c 96       	adiw	r26, 0x1c	; 28
    5cba:	8d 91       	ld	r24, X+
    5cbc:	9d 91       	ld	r25, X+
    5cbe:	0d 90       	ld	r0, X+
    5cc0:	bc 91       	ld	r27, X
    5cc2:	a0 2d       	mov	r26, r0
    5cc4:	89 87       	std	Y+9, r24	; 0x09
    5cc6:	9a 87       	std	Y+10, r25	; 0x0a
    5cc8:	ab 87       	std	Y+11, r26	; 0x0b
    5cca:	bc 87       	std	Y+12, r27	; 0x0c
G4 = (uint8_t)((Current_state.gps.lon)>>8);
    5ccc:	d5 01       	movw	r26, r10
    5cce:	5c 96       	adiw	r26, 0x1c	; 28
    5cd0:	8d 91       	ld	r24, X+
    5cd2:	9d 91       	ld	r25, X+
    5cd4:	0d 90       	ld	r0, X+
    5cd6:	bc 91       	ld	r27, X
    5cd8:	a0 2d       	mov	r26, r0
    5cda:	8d 87       	std	Y+13, r24	; 0x0d
    5cdc:	9e 87       	std	Y+14, r25	; 0x0e
    5cde:	af 87       	std	Y+15, r26	; 0x0f
    5ce0:	b8 8b       	std	Y+16, r27	; 0x10
G5 = Current_state.gps.seconds;
    5ce2:	f5 01       	movw	r30, r10
    5ce4:	96 a0       	ldd	r9, Z+38	; 0x26
G6 = Current_state.gps.minutes;
    5ce6:	c5 a0       	ldd	r12, Z+37	; 0x25
G7 = Current_state.gps.hours;
    5ce8:	d4 a0       	ldd	r13, Z+36	; 0x24
G8 = Current_state.gps.date;
    5cea:	e7 a0       	ldd	r14, Z+39	; 0x27
G9 = (uint8_t)(q_o[0]*256);
    5cec:	20 e0       	ldi	r18, 0x00	; 0
    5cee:	30 e0       	ldi	r19, 0x00	; 0
    5cf0:	40 e8       	ldi	r20, 0x80	; 128
    5cf2:	53 e4       	ldi	r21, 0x43	; 67
    5cf4:	a8 e8       	ldi	r26, 0x88	; 136
    5cf6:	b4 e0       	ldi	r27, 0x04	; 4
    5cf8:	6d 91       	ld	r22, X+
    5cfa:	7d 91       	ld	r23, X+
    5cfc:	8d 91       	ld	r24, X+
    5cfe:	9c 91       	ld	r25, X
    5d00:	9c d6       	rcall	.+3384   	; 0x6a3a <__mulsf3>
    5d02:	ea d4       	rcall	.+2516   	; 0x66d8 <__fixunssfsi>
    5d04:	f6 2e       	mov	r15, r22
G10 = (uint8_t)(q_o[1]*256);
    5d06:	20 e0       	ldi	r18, 0x00	; 0
    5d08:	30 e0       	ldi	r19, 0x00	; 0
    5d0a:	40 e8       	ldi	r20, 0x80	; 128
    5d0c:	53 e4       	ldi	r21, 0x43	; 67
    5d0e:	60 91 8c 04 	lds	r22, 0x048C
    5d12:	70 91 8d 04 	lds	r23, 0x048D
    5d16:	80 91 8e 04 	lds	r24, 0x048E
    5d1a:	90 91 8f 04 	lds	r25, 0x048F
    5d1e:	8d d6       	rcall	.+3354   	; 0x6a3a <__mulsf3>
    5d20:	db d4       	rcall	.+2486   	; 0x66d8 <__fixunssfsi>
    5d22:	06 2f       	mov	r16, r22
G11 = (uint8_t)(q_o[2]*256);
    5d24:	20 e0       	ldi	r18, 0x00	; 0
    5d26:	30 e0       	ldi	r19, 0x00	; 0
    5d28:	40 e8       	ldi	r20, 0x80	; 128
    5d2a:	53 e4       	ldi	r21, 0x43	; 67
    5d2c:	60 91 90 04 	lds	r22, 0x0490
    5d30:	70 91 91 04 	lds	r23, 0x0491
    5d34:	80 91 92 04 	lds	r24, 0x0492
    5d38:	90 91 93 04 	lds	r25, 0x0493
    5d3c:	7e d6       	rcall	.+3324   	; 0x6a3a <__mulsf3>
    5d3e:	cc d4       	rcall	.+2456   	; 0x66d8 <__fixunssfsi>
    5d40:	16 2f       	mov	r17, r22
G12 = (uint8_t)(q_o[3]*256);
    5d42:	20 e0       	ldi	r18, 0x00	; 0
    5d44:	30 e0       	ldi	r19, 0x00	; 0
    5d46:	40 e8       	ldi	r20, 0x80	; 128
    5d48:	53 e4       	ldi	r21, 0x43	; 67
    5d4a:	60 91 94 04 	lds	r22, 0x0494
    5d4e:	70 91 95 04 	lds	r23, 0x0495
    5d52:	80 91 96 04 	lds	r24, 0x0496
    5d56:	90 91 97 04 	lds	r25, 0x0497
    5d5a:	6f d6       	rcall	.+3294   	; 0x6a3a <__mulsf3>
    5d5c:	bd d4       	rcall	.+2426   	; 0x66d8 <__fixunssfsi>
}
wdt_disable();
_delay_ms(10);
////////////////////////////////////////////////////////
uint8_t G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,G11,G12;
G1 = (uint8_t)Current_state.gps.lat;
    5d5e:	29 81       	ldd	r18, Y+1	; 0x01
    5d60:	f3 01       	movw	r30, r6
    5d62:	20 83       	st	Z, r18
G2 = (uint8_t)((Current_state.gps.lat)>>8);
    5d64:	8e 81       	ldd	r24, Y+6	; 0x06
    5d66:	81 83       	std	Z+1, r24	; 0x01
G3 = (uint8_t)Current_state.gps.lon;
    5d68:	99 85       	ldd	r25, Y+9	; 0x09
    5d6a:	92 83       	std	Z+2, r25	; 0x02
G4 = (uint8_t)((Current_state.gps.lon)>>8);
    5d6c:	ae 85       	ldd	r26, Y+14	; 0x0e
    5d6e:	a3 83       	std	Z+3, r26	; 0x03

GPS_Data[0] = G1;
GPS_Data[1] = G2;
GPS_Data[2] = G3;
GPS_Data[3] = G4;
GPS_Data[4] = G5;
    5d70:	94 82       	std	Z+4, r9	; 0x04
GPS_Data[5] = G6;
    5d72:	c5 82       	std	Z+5, r12	; 0x05
GPS_Data[6] = G7;
    5d74:	d6 82       	std	Z+6, r13	; 0x06
GPS_Data[7] = G8;
    5d76:	e7 82       	std	Z+7, r14	; 0x07
GPS_Data[8] = G9;
    5d78:	f0 86       	std	Z+8, r15	; 0x08
GPS_Data[9] = G10;
    5d7a:	01 87       	std	Z+9, r16	; 0x09
GPS_Data[10] = G11;
    5d7c:	12 87       	std	Z+10, r17	; 0x0a
GPS_Data[11] = G12;
    5d7e:	63 87       	std	Z+11, r22	; 0x0b
//////////////////////////////////////////

if((flag_india == 1)||(flag_france == 1)) //Check for Circles
    5d80:	80 91 80 04 	lds	r24, 0x0480
    5d84:	81 30       	cpi	r24, 0x01	; 1
    5d86:	29 f0       	breq	.+10     	; 0x5d92 <main+0x2b6>
    5d88:	80 91 7f 04 	lds	r24, 0x047F
    5d8c:	81 30       	cpi	r24, 0x01	; 1
    5d8e:	09 f0       	breq	.+2      	; 0x5d92 <main+0x2b6>
    5d90:	51 c0       	rjmp	.+162    	; 0x5e34 <main+0x358>
{
	
	if(FirstTimeOuter ==0)
    5d92:	80 91 85 04 	lds	r24, 0x0485
    5d96:	81 11       	cpse	r24, r1
    5d98:	0e c0       	rjmp	.+28     	; 0x5db6 <main+0x2da>
	{
		
	FirstTimeInner = 0;
    5d9a:	10 92 84 04 	sts	0x0484, r1
	FirstTimeNormal = 0;
    5d9e:	10 92 83 04 	sts	0x0483, r1
	write_data |= (1<<4);
	write_data &= ~(1<<1);
    5da2:	80 91 25 01 	lds	r24, 0x0125
    5da6:	8d 7f       	andi	r24, 0xFD	; 253
    5da8:	80 61       	ori	r24, 0x10	; 16
    5daa:	80 93 25 01 	sts	0x0125, r24
	FirstTimeOuter = 1;
    5dae:	81 e0       	ldi	r24, 0x01	; 1
    5db0:	80 93 85 04 	sts	0x0485, r24
    5db4:	39 c0       	rjmp	.+114    	; 0x5e28 <main+0x34c>
	}
	else if(FirstTimeOuter == 1)
    5db6:	81 30       	cpi	r24, 0x01	; 1
    5db8:	f9 f4       	brne	.+62     	; 0x5df8 <main+0x31c>
	{
		
		if(countu ==0)
    5dba:	80 91 81 04 	lds	r24, 0x0481
    5dbe:	81 11       	cpse	r24, r1
    5dc0:	17 c0       	rjmp	.+46     	; 0x5df0 <main+0x314>
    5dc2:	83 e0       	ldi	r24, 0x03	; 3
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	49 89       	ldd	r20, Y+17	; 0x11
    5dc8:	5a 89       	ldd	r21, Y+18	; 0x12
		{
		
		for(int i = 0; i<3; i++)
		{
			SPDR = 0xB1;//Tell slave it's time to start downlink
    5dca:	b1 eb       	ldi	r27, 0xB1	; 177
    5dcc:	bf b9       	out	0x0f, r27	; 15
			while(!(SPSR & (1<<SPIF) ));
    5dce:	77 9b       	sbis	0x0e, 7	; 14
    5dd0:	fe cf       	rjmp	.-4      	; 0x5dce <main+0x2f2>
			PORTA = 0xFF;
    5dd2:	8b ba       	out	0x1b, r8	; 27
    5dd4:	ef ec       	ldi	r30, 0xCF	; 207
    5dd6:	f7 e0       	ldi	r31, 0x07	; 7
    5dd8:	31 97       	sbiw	r30, 0x01	; 1
    5dda:	f1 f7       	brne	.-4      	; 0x5dd8 <main+0x2fc>
    5ddc:	00 c0       	rjmp	.+0      	; 0x5dde <main+0x302>
    5dde:	00 00       	nop
    5de0:	01 97       	sbiw	r24, 0x01	; 1
	{
		
		if(countu ==0)
		{
		
		for(int i = 0; i<3; i++)
    5de2:	99 f7       	brne	.-26     	; 0x5dca <main+0x2ee>
    5de4:	5a 8b       	std	Y+18, r21	; 0x12
    5de6:	49 8b       	std	Y+17, r20	; 0x11
			SPDR = 0xB1;//Tell slave it's time to start downlink
			while(!(SPSR & (1<<SPIF) ));
			PORTA = 0xFF;
			_delay_ms(1);
		}
		FirstTimeOuter =2;
    5de8:	82 e0       	ldi	r24, 0x02	; 2
    5dea:	80 93 85 04 	sts	0x0485, r24
    5dee:	1c c0       	rjmp	.+56     	; 0x5e28 <main+0x34c>
		}
		else if(countu == 1)
    5df0:	81 30       	cpi	r24, 0x01	; 1
    5df2:	d1 f4       	brne	.+52     	; 0x5e28 <main+0x34c>
		{
			
			SendHM();
    5df4:	5f de       	rcall	.-834    	; 0x5ab4 <SendHM>
    5df6:	18 c0       	rjmp	.+48     	; 0x5e28 <main+0x34c>
		
	}
	else
	{
		
		SendHM();// add an if for sending gps data based on flag
    5df8:	5d de       	rcall	.-838    	; 0x5ab4 <SendHM>
		if(countu ==0)
    5dfa:	80 91 81 04 	lds	r24, 0x0481
    5dfe:	81 11       	cpse	r24, r1
    5e00:	13 c0       	rjmp	.+38     	; 0x5e28 <main+0x34c>
    5e02:	f3 01       	movw	r30, r6
    5e04:	29 89       	ldd	r18, Y+17	; 0x11
    5e06:	3a 89       	ldd	r19, Y+18	; 0x12
		{
			
			for (uint8_t i =0;i<12;i++) 
			{
				SPDR = GPS_Data[i];
    5e08:	81 91       	ld	r24, Z+
    5e0a:	8f b9       	out	0x0f, r24	; 15
				while(!(SPSR & (1<<SPIF) ));
    5e0c:	77 9b       	sbis	0x0e, 7	; 14
    5e0e:	fe cf       	rjmp	.-4      	; 0x5e0c <main+0x330>
				PORTA = 0xFF;
    5e10:	8b ba       	out	0x1b, r8	; 27
    5e12:	8f ec       	ldi	r24, 0xCF	; 207
    5e14:	97 e0       	ldi	r25, 0x07	; 7
    5e16:	01 97       	sbiw	r24, 0x01	; 1
    5e18:	f1 f7       	brne	.-4      	; 0x5e16 <main+0x33a>
    5e1a:	00 c0       	rjmp	.+0      	; 0x5e1c <main+0x340>
    5e1c:	00 00       	nop
		
		SendHM();// add an if for sending gps data based on flag
		if(countu ==0)
		{
			
			for (uint8_t i =0;i<12;i++) 
    5e1e:	e2 15       	cp	r30, r2
    5e20:	f3 05       	cpc	r31, r3
    5e22:	91 f7       	brne	.-28     	; 0x5e08 <main+0x32c>
    5e24:	3a 8b       	std	Y+18, r19	; 0x12
    5e26:	29 8b       	std	Y+17, r18	; 0x11
				PORTA = 0xFF;
				_delay_ms(1);
			}   
		}
	}
	countd=countd+2;
    5e28:	80 91 82 04 	lds	r24, 0x0482
    5e2c:	8e 5f       	subi	r24, 0xFE	; 254
    5e2e:	80 93 82 04 	sts	0x0482, r24
    5e32:	9b c0       	rjmp	.+310    	; 0x5f6a <main+0x48e>
}
else if(flag_mumbai ==1) //Check for Circles
    5e34:	80 91 7e 04 	lds	r24, 0x047E
    5e38:	81 30       	cpi	r24, 0x01	; 1
    5e3a:	09 f0       	breq	.+2      	; 0x5e3e <main+0x362>
    5e3c:	51 c0       	rjmp	.+162    	; 0x5ee0 <main+0x404>
{
	
	if(FirstTimeInner ==0)
    5e3e:	80 91 84 04 	lds	r24, 0x0484
    5e42:	81 11       	cpse	r24, r1
    5e44:	0e c0       	rjmp	.+28     	; 0x5e62 <main+0x386>
	{
		
		FirstTimeOuter = 0;
    5e46:	10 92 85 04 	sts	0x0485, r1
		FirstTimeNormal = 0;
    5e4a:	10 92 83 04 	sts	0x0483, r1
		write_data |= (1<<4);// if uplink on this is negated below
		write_data &= ~(1<<1);
    5e4e:	80 91 25 01 	lds	r24, 0x0125
    5e52:	8d 7f       	andi	r24, 0xFD	; 253
    5e54:	80 61       	ori	r24, 0x10	; 16
    5e56:	80 93 25 01 	sts	0x0125, r24
		FirstTimeInner = 1;
    5e5a:	81 e0       	ldi	r24, 0x01	; 1
    5e5c:	80 93 84 04 	sts	0x0484, r24
    5e60:	39 c0       	rjmp	.+114    	; 0x5ed4 <main+0x3f8>
		
	}
	else if(FirstTimeInner == 1)
    5e62:	81 30       	cpi	r24, 0x01	; 1
    5e64:	f9 f4       	brne	.+62     	; 0x5ea4 <main+0x3c8>
	{
		
		if(countu ==0)
    5e66:	80 91 81 04 	lds	r24, 0x0481
    5e6a:	81 11       	cpse	r24, r1
    5e6c:	17 c0       	rjmp	.+46     	; 0x5e9c <main+0x3c0>
    5e6e:	83 e0       	ldi	r24, 0x03	; 3
    5e70:	90 e0       	ldi	r25, 0x00	; 0
		{
			
		for(int i = 0; i<3; i++)
		{
			SPDR = 0xF1;//Tell slave it's time to start downlink
    5e72:	21 ef       	ldi	r18, 0xF1	; 241
    5e74:	49 89       	ldd	r20, Y+17	; 0x11
    5e76:	5a 89       	ldd	r21, Y+18	; 0x12
    5e78:	2f b9       	out	0x0f, r18	; 15
			while(!(SPSR & (1<<SPIF) ));
    5e7a:	77 9b       	sbis	0x0e, 7	; 14
    5e7c:	fe cf       	rjmp	.-4      	; 0x5e7a <main+0x39e>
			PORTA = 0xFF;
    5e7e:	8b ba       	out	0x1b, r8	; 27
    5e80:	af ec       	ldi	r26, 0xCF	; 207
    5e82:	b7 e0       	ldi	r27, 0x07	; 7
    5e84:	11 97       	sbiw	r26, 0x01	; 1
    5e86:	f1 f7       	brne	.-4      	; 0x5e84 <main+0x3a8>
    5e88:	00 c0       	rjmp	.+0      	; 0x5e8a <main+0x3ae>
    5e8a:	00 00       	nop
    5e8c:	01 97       	sbiw	r24, 0x01	; 1
	{
		
		if(countu ==0)
		{
			
		for(int i = 0; i<3; i++)
    5e8e:	a1 f7       	brne	.-24     	; 0x5e78 <main+0x39c>
    5e90:	5a 8b       	std	Y+18, r21	; 0x12
    5e92:	49 8b       	std	Y+17, r20	; 0x11
			SPDR = 0xF1;//Tell slave it's time to start downlink
			while(!(SPSR & (1<<SPIF) ));
			PORTA = 0xFF;
			_delay_ms(1);
		}
		FirstTimeInner =2;	
    5e94:	82 e0       	ldi	r24, 0x02	; 2
    5e96:	80 93 84 04 	sts	0x0484, r24
    5e9a:	1c c0       	rjmp	.+56     	; 0x5ed4 <main+0x3f8>
		}
		
		else if(countu == 1)
    5e9c:	81 30       	cpi	r24, 0x01	; 1
    5e9e:	d1 f4       	brne	.+52     	; 0x5ed4 <main+0x3f8>
		{
			
			SendHM();
    5ea0:	09 de       	rcall	.-1006   	; 0x5ab4 <SendHM>
    5ea2:	18 c0       	rjmp	.+48     	; 0x5ed4 <main+0x3f8>
		
	}
	else
	{
		
		SendHM();
    5ea4:	07 de       	rcall	.-1010   	; 0x5ab4 <SendHM>
		if(countu ==0)
    5ea6:	80 91 81 04 	lds	r24, 0x0481
    5eaa:	81 11       	cpse	r24, r1
    5eac:	13 c0       	rjmp	.+38     	; 0x5ed4 <main+0x3f8>
    5eae:	f3 01       	movw	r30, r6
    5eb0:	29 89       	ldd	r18, Y+17	; 0x11
    5eb2:	3a 89       	ldd	r19, Y+18	; 0x12
		{
			
		for (uint8_t i =0;i<12;i++)
		{
			SPDR = GPS_Data[i];
    5eb4:	81 91       	ld	r24, Z+
    5eb6:	8f b9       	out	0x0f, r24	; 15
			while(!(SPSR & (1<<SPIF) ));
    5eb8:	77 9b       	sbis	0x0e, 7	; 14
    5eba:	fe cf       	rjmp	.-4      	; 0x5eb8 <main+0x3dc>
			PORTA = 0xFF;
    5ebc:	8b ba       	out	0x1b, r8	; 27
    5ebe:	8f ec       	ldi	r24, 0xCF	; 207
    5ec0:	97 e0       	ldi	r25, 0x07	; 7
    5ec2:	01 97       	sbiw	r24, 0x01	; 1
    5ec4:	f1 f7       	brne	.-4      	; 0x5ec2 <main+0x3e6>
    5ec6:	00 c0       	rjmp	.+0      	; 0x5ec8 <main+0x3ec>
    5ec8:	00 00       	nop
		
		SendHM();
		if(countu ==0)
		{
			
		for (uint8_t i =0;i<12;i++)
    5eca:	e2 15       	cp	r30, r2
    5ecc:	f3 05       	cpc	r31, r3
    5ece:	91 f7       	brne	.-28     	; 0x5eb4 <main+0x3d8>
    5ed0:	3a 8b       	std	Y+18, r19	; 0x12
    5ed2:	29 8b       	std	Y+17, r18	; 0x11
			PORTA = 0xFF;
			_delay_ms(1);
		}
		}
	}
	countd=countd+2;
    5ed4:	80 91 82 04 	lds	r24, 0x0482
    5ed8:	8e 5f       	subi	r24, 0xFE	; 254
    5eda:	80 93 82 04 	sts	0x0482, r24
    5ede:	45 c0       	rjmp	.+138    	; 0x5f6a <main+0x48e>
}
else
{

	countd = 0;
    5ee0:	10 92 82 04 	sts	0x0482, r1
	countu = 0;
    5ee4:	10 92 81 04 	sts	0x0481, r1
	if(FirstTimeNormal == 0)
    5ee8:	80 91 83 04 	lds	r24, 0x0483
    5eec:	81 11       	cpse	r24, r1
    5eee:	16 c0       	rjmp	.+44     	; 0x5f1c <main+0x440>
    5ef0:	83 e0       	ldi	r24, 0x03	; 3
    5ef2:	90 e0       	ldi	r25, 0x00	; 0
    5ef4:	49 89       	ldd	r20, Y+17	; 0x11
    5ef6:	5a 89       	ldd	r21, Y+18	; 0x12
	{
		for(int i =0; i<3; i++){
			SPDR = 0xD1;//Tell slave it's time to go back to normal mode
    5ef8:	a1 ed       	ldi	r26, 0xD1	; 209
    5efa:	af b9       	out	0x0f, r26	; 15
			while(!(SPSR & (1<<SPIF) ));
    5efc:	77 9b       	sbis	0x0e, 7	; 14
    5efe:	fe cf       	rjmp	.-4      	; 0x5efc <main+0x420>
			PORTA = 0xFF;
    5f00:	8b ba       	out	0x1b, r8	; 27
    5f02:	ef ec       	ldi	r30, 0xCF	; 207
    5f04:	f7 e0       	ldi	r31, 0x07	; 7
    5f06:	31 97       	sbiw	r30, 0x01	; 1
    5f08:	f1 f7       	brne	.-4      	; 0x5f06 <main+0x42a>
    5f0a:	00 c0       	rjmp	.+0      	; 0x5f0c <main+0x430>
    5f0c:	00 00       	nop
    5f0e:	01 97       	sbiw	r24, 0x01	; 1

	countd = 0;
	countu = 0;
	if(FirstTimeNormal == 0)
	{
		for(int i =0; i<3; i++){
    5f10:	99 f7       	brne	.-26     	; 0x5ef8 <main+0x41c>
    5f12:	5a 8b       	std	Y+18, r21	; 0x12
    5f14:	49 8b       	std	Y+17, r20	; 0x11
			SPDR = 0xD1;//Tell slave it's time to go back to normal mode
			while(!(SPSR & (1<<SPIF) ));
			PORTA = 0xFF;
			_delay_ms(1);}
			FirstTimeNormal = 1;
    5f16:	81 e0       	ldi	r24, 0x01	; 1
    5f18:	80 93 83 04 	sts	0x0483, r24
	}
	
	if(UniversalCycles%10==0){SendHM();}// In normal mode, HM in EEPROM every 20 sec, otherwise, every 2 sec
    5f1c:	40 91 21 01 	lds	r20, 0x0121
    5f20:	50 91 22 01 	lds	r21, 0x0122
    5f24:	9a 01       	movw	r18, r20
    5f26:	ad ec       	ldi	r26, 0xCD	; 205
    5f28:	bc ec       	ldi	r27, 0xCC	; 204
    5f2a:	91 d7       	rcall	.+3874   	; 0x6e4e <__umulhisi3>
    5f2c:	96 95       	lsr	r25
    5f2e:	87 95       	ror	r24
    5f30:	96 95       	lsr	r25
    5f32:	87 95       	ror	r24
    5f34:	96 95       	lsr	r25
    5f36:	87 95       	ror	r24
    5f38:	9c 01       	movw	r18, r24
    5f3a:	22 0f       	add	r18, r18
    5f3c:	33 1f       	adc	r19, r19
    5f3e:	88 0f       	add	r24, r24
    5f40:	99 1f       	adc	r25, r25
    5f42:	88 0f       	add	r24, r24
    5f44:	99 1f       	adc	r25, r25
    5f46:	88 0f       	add	r24, r24
    5f48:	99 1f       	adc	r25, r25
    5f4a:	82 0f       	add	r24, r18
    5f4c:	93 1f       	adc	r25, r19
    5f4e:	48 17       	cp	r20, r24
    5f50:	59 07       	cpc	r21, r25
    5f52:	09 f4       	brne	.+2      	; 0x5f56 <main+0x47a>
    5f54:	af dd       	rcall	.-1186   	; 0x5ab4 <SendHM>
	write_data &= ~(1<<4);
    5f56:	80 91 25 01 	lds	r24, 0x0125
    5f5a:	8f 7e       	andi	r24, 0xEF	; 239
	write_data |= (1<<1); 
    5f5c:	82 60       	ori	r24, 0x02	; 2
    5f5e:	80 93 25 01 	sts	0x0125, r24
	FirstTimeInner = 0;
    5f62:	10 92 84 04 	sts	0x0484, r1
	FirstTimeOuter = 0;
    5f66:	10 92 85 04 	sts	0x0485, r1
}

if ((countd >120)&&(countd <=150))
    5f6a:	90 91 82 04 	lds	r25, 0x0482
    5f6e:	87 e8       	ldi	r24, 0x87	; 135
    5f70:	89 0f       	add	r24, r25
    5f72:	8e 31       	cpi	r24, 0x1E	; 30
    5f74:	f0 f4       	brcc	.+60     	; 0x5fb2 <main+0x4d6>
{
	
	write_data &= ~(1<<4); //switch off downlink
    5f76:	80 91 25 01 	lds	r24, 0x0125
    5f7a:	8f 7e       	andi	r24, 0xEF	; 239
	write_data |= (1<<1); // switch on uplink
    5f7c:	82 60       	ori	r24, 0x02	; 2
    5f7e:	80 93 25 01 	sts	0x0125, r24
	if (countd == 122)
    5f82:	9a 37       	cpi	r25, 0x7A	; 122
    5f84:	99 f4       	brne	.+38     	; 0x5fac <main+0x4d0>
    5f86:	83 e0       	ldi	r24, 0x03	; 3
    5f88:	90 e0       	ldi	r25, 0x00	; 0
    5f8a:	49 89       	ldd	r20, Y+17	; 0x11
    5f8c:	5a 89       	ldd	r21, Y+18	; 0x12
	{
	for(int i =0; i<3; i++)
	{
		SPDR = 0xD1;//Tell slave it's time to go back to normal mode
    5f8e:	f1 ed       	ldi	r31, 0xD1	; 209
    5f90:	ff b9       	out	0x0f, r31	; 15
		while(!(SPSR & (1<<SPIF) ));
    5f92:	77 9b       	sbis	0x0e, 7	; 14
    5f94:	fe cf       	rjmp	.-4      	; 0x5f92 <main+0x4b6>
		PORTA = 0xFF;
    5f96:	8b ba       	out	0x1b, r8	; 27
    5f98:	af ec       	ldi	r26, 0xCF	; 207
    5f9a:	b7 e0       	ldi	r27, 0x07	; 7
    5f9c:	11 97       	sbiw	r26, 0x01	; 1
    5f9e:	f1 f7       	brne	.-4      	; 0x5f9c <main+0x4c0>
    5fa0:	00 c0       	rjmp	.+0      	; 0x5fa2 <main+0x4c6>
    5fa2:	00 00       	nop
    5fa4:	01 97       	sbiw	r24, 0x01	; 1
	
	write_data &= ~(1<<4); //switch off downlink
	write_data |= (1<<1); // switch on uplink
	if (countd == 122)
	{
	for(int i =0; i<3; i++)
    5fa6:	99 f7       	brne	.-26     	; 0x5f8e <main+0x4b2>
    5fa8:	5a 8b       	std	Y+18, r21	; 0x12
    5faa:	49 8b       	std	Y+17, r20	; 0x11
		while(!(SPSR & (1<<SPIF) ));
		PORTA = 0xFF;
		_delay_ms(1);
	}//send normal mode commands d1
	}
	countu = 1;//set a flag 
    5fac:	81 e0       	ldi	r24, 0x01	; 1
    5fae:	80 93 81 04 	sts	0x0481, r24
}
if (countd >150)
    5fb2:	80 91 82 04 	lds	r24, 0x0482
    5fb6:	87 39       	cpi	r24, 0x97	; 151
    5fb8:	70 f0       	brcs	.+28     	; 0x5fd6 <main+0x4fa>
{

	countd=0;
    5fba:	10 92 82 04 	sts	0x0482, r1
	countu=0;
    5fbe:	10 92 81 04 	sts	0x0481, r1
	write_data &= ~(1<<1); 
    5fc2:	80 91 25 01 	lds	r24, 0x0125
    5fc6:	8d 7f       	andi	r24, 0xFD	; 253
	write_data |= (1<<4);
    5fc8:	80 61       	ori	r24, 0x10	; 16
    5fca:	80 93 25 01 	sts	0x0125, r24
	FirstTimeOuter = 0;
    5fce:	10 92 85 04 	sts	0x0485, r1
	FirstTimeInner = 0;
    5fd2:	10 92 84 04 	sts	0x0484, r1
		
}

	
		PORTB |= (1<<PB0);
    5fd6:	c0 9a       	sbi	0x18, 0	; 24
		PORTB &= ~(1<<PB5);
    5fd8:	c5 98       	cbi	0x18, 5	; 24
     	
     	if(counter1 == 0) //OC Check for Beacon
    5fda:	80 91 86 04 	lds	r24, 0x0486
    5fde:	90 91 87 04 	lds	r25, 0x0487
    5fe2:	89 2b       	or	r24, r25
    5fe4:	79 f4       	brne	.+30     	; 0x6004 <main+0x528>
     	{
	     	if((HM_Data[6]&(0x80)) == 0)
    5fe6:	80 91 3f 05 	lds	r24, 0x053F
    5fea:	88 23       	and	r24, r24
    5fec:	4c f1       	brlt	.+82     	; 0x6040 <main+0x564>
	     	{
		     	counter1 = 1;
    5fee:	81 e0       	ldi	r24, 0x01	; 1
    5ff0:	90 e0       	ldi	r25, 0x00	; 0
    5ff2:	90 93 87 04 	sts	0x0487, r25
    5ff6:	80 93 86 04 	sts	0x0486, r24
		     	write_data &= ~(1<<7);
    5ffa:	80 91 25 01 	lds	r24, 0x0125
    5ffe:	8f 77       	andi	r24, 0x7F	; 127
    6000:	80 93 25 01 	sts	0x0125, r24
		     	
	     	}
     	}
     	
     	if((counter1 > 0) && (counter1 < 7))
    6004:	80 91 86 04 	lds	r24, 0x0486
    6008:	90 91 87 04 	lds	r25, 0x0487
    600c:	9c 01       	movw	r18, r24
    600e:	21 50       	subi	r18, 0x01	; 1
    6010:	31 09       	sbc	r19, r1
    6012:	26 30       	cpi	r18, 0x06	; 6
    6014:	31 05       	cpc	r19, r1
    6016:	28 f4       	brcc	.+10     	; 0x6022 <main+0x546>
     	{
	     	counter1 = counter1+1;
    6018:	01 96       	adiw	r24, 0x01	; 1
    601a:	90 93 87 04 	sts	0x0487, r25
    601e:	80 93 86 04 	sts	0x0486, r24
     	}
     	
     	if(counter1 == 7)
    6022:	80 91 86 04 	lds	r24, 0x0486
    6026:	90 91 87 04 	lds	r25, 0x0487
    602a:	07 97       	sbiw	r24, 0x07	; 7
    602c:	49 f4       	brne	.+18     	; 0x6040 <main+0x564>
     	{
	     	counter1 = 0;
    602e:	10 92 87 04 	sts	0x0487, r1
    6032:	10 92 86 04 	sts	0x0486, r1
	     	write_data |= (1<<7);
    6036:	80 91 25 01 	lds	r24, 0x0125
    603a:	80 68       	ori	r24, 0x80	; 128
    603c:	80 93 25 01 	sts	0x0125, r24
		 
		
		 
		 
		 
			 if((HM_Data[6]&(0x20)) == 0) //OC check for GPS
    6040:	80 91 3f 05 	lds	r24, 0x053F
    6044:	85 fd       	sbrc	r24, 5
    6046:	04 c0       	rjmp	.+8      	; 0x6050 <main+0x574>
			 {
				Current_state.gps.gps_OC = 1;
    6048:	81 e0       	ldi	r24, 0x01	; 1
    604a:	f5 01       	movw	r30, r10
    604c:	85 a7       	std	Z+45, r24	; 0x2d
    604e:	03 c0       	rjmp	.+6      	; 0x6056 <main+0x57a>
			}
			else
			{
				Current_state.gps.gps_OC = 0;
    6050:	d5 01       	movw	r26, r10
    6052:	9d 96       	adiw	r26, 0x2d	; 45
    6054:	1c 92       	st	X, r1
__attribute__ ((__always_inline__))
void wdt_enable (const uint8_t value)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
		__asm__ __volatile__ (
    6056:	9f e0       	ldi	r25, 0x0F	; 15
    6058:	88 e1       	ldi	r24, 0x18	; 24
    605a:	0f b6       	in	r0, 0x3f	; 63
    605c:	f8 94       	cli
    605e:	a8 95       	wdr
    6060:	81 bd       	out	0x21, r24	; 33
    6062:	0f be       	out	0x3f, r0	; 63
    6064:	91 bd       	out	0x21, r25	; 33
			}


	wdt_enable(WDTO_2S);
	wdt_reset();
    6066:	a8 95       	wdr

	control();
    6068:	0e 94 2e 08 	call	0x105c	; 0x105c <control>
void wdt_disable (void)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    606c:	0f b6       	in	r0, 0x3f	; 63
    606e:	f8 94       	cli
    6070:	a8 95       	wdr
    6072:	81 b5       	in	r24, 0x21	; 33
    6074:	88 61       	ori	r24, 0x18	; 24
    6076:	81 bd       	out	0x21, r24	; 33
    6078:	11 bc       	out	0x21, r1	; 33
    607a:	0f be       	out	0x3f, r0	; 63
	wdt_disable();
	transmit_UART0('a');
    607c:	81 e6       	ldi	r24, 0x61	; 97
    607e:	a3 dc       	rcall	.-1722   	; 0x59c6 <transmit_UART0>
    6080:	09 89       	ldd	r16, Y+17	; 0x11
    6082:	1a 89       	ldd	r17, Y+18	; 0x12
    6084:	73 01       	movw	r14, r6
	for (int i=0;i<12;i++)
	{
		transmit_UART0(GPS_Data[i]);
    6086:	f7 01       	movw	r30, r14
    6088:	81 91       	ld	r24, Z+
    608a:	7f 01       	movw	r14, r30
    608c:	9c dc       	rcall	.-1736   	; 0x59c6 <transmit_UART0>
	wdt_reset();

	control();
	wdt_disable();
	transmit_UART0('a');
	for (int i=0;i<12;i++)
    608e:	e2 14       	cp	r14, r2
    6090:	f3 04       	cpc	r15, r3
    6092:	c9 f7       	brne	.-14     	; 0x6086 <main+0x5aa>
    6094:	1a 8b       	std	Y+18, r17	; 0x12
    6096:	09 8b       	std	Y+17, r16	; 0x11
	{
		transmit_UART0(GPS_Data[i]);
	}
	transmit_UART0('a');
    6098:	81 e6       	ldi	r24, 0x61	; 97
    609a:	95 dc       	rcall	.-1750   	; 0x59c6 <transmit_UART0>
    609c:	09 89       	ldd	r16, Y+17	; 0x11
    609e:	1a 89       	ldd	r17, Y+18	; 0x12
	//transmit_UART0(flag_india);
	//transmit_UART0(flag_mumbai);
	//transmit_UART0(flag_france);
	for (int i = 0; i<7;i++)
	{
		transmit_UART0(HM_Data[i]);
    60a0:	d8 01       	movw	r26, r16
    60a2:	8d 91       	ld	r24, X+
    60a4:	8d 01       	movw	r16, r26
    60a6:	8f dc       	rcall	.-1762   	; 0x59c6 <transmit_UART0>
	//int w = 2;Current_state.gps.lat = 168;Current_state.gps.lon = 96;
	//flag_india = (int8_t)(Current_state.gps.lat);//(pow((Current_state.gps.lat - 22.5833),2) + cos(Current_state.gps.lat*3.141592/180)*pow((Current_state.gps.lon - 82.7666),2))*255/70000;
	//transmit_UART0(flag_india);
	//transmit_UART0(flag_mumbai);
	//transmit_UART0(flag_france);
	for (int i = 0; i<7;i++)
    60a8:	04 15       	cp	r16, r4
    60aa:	15 05       	cpc	r17, r5
    60ac:	c9 f7       	brne	.-14     	; 0x60a0 <main+0x5c4>
	{
		transmit_UART0(HM_Data[i]);
	}
	
	light_main = light_cal();	
    60ae:	0e 94 80 24 	call	0x4900	; 0x4900 <light_cal>
    60b2:	80 93 13 01 	sts	0x0113, r24
	 if((HM_Data[6]&(0x40)) == 0) // OC Check for Torquer
    60b6:	80 91 3f 05 	lds	r24, 0x053F
    60ba:	86 ff       	sbrs	r24, 6
	 {
		 reset_PWM();
    60bc:	0e 94 ae 20 	call	0x415c	; 0x415c <reset_PWM>
      * @ref comm
      */
      //comm();
      
      ///* * Increment the Timer
      Time += FRAME_TIME;
    60c0:	20 91 31 05 	lds	r18, 0x0531
    60c4:	30 91 32 05 	lds	r19, 0x0532
    60c8:	40 91 33 05 	lds	r20, 0x0533
    60cc:	50 91 34 05 	lds	r21, 0x0534
    60d0:	60 91 35 05 	lds	r22, 0x0535
    60d4:	70 91 36 05 	lds	r23, 0x0536
    60d8:	80 91 37 05 	lds	r24, 0x0537
    60dc:	90 91 38 05 	lds	r25, 0x0538
    60e0:	a2 e0       	ldi	r26, 0x02	; 2
    60e2:	e6 d6       	rcall	.+3532   	; 0x6eb0 <__adddi3_s8>
    60e4:	20 93 31 05 	sts	0x0531, r18
    60e8:	30 93 32 05 	sts	0x0532, r19
    60ec:	40 93 33 05 	sts	0x0533, r20
    60f0:	50 93 34 05 	sts	0x0534, r21
    60f4:	60 93 35 05 	sts	0x0535, r22
    60f8:	70 93 36 05 	sts	0x0536, r23
    60fc:	80 93 37 05 	sts	0x0537, r24
    6100:	90 93 38 05 	sts	0x0538, r25
	  // for india outer circle
	double a = ((double)Current_state.gps.lat/100.0) - 22.5833;
    6104:	f5 01       	movw	r30, r10
    6106:	60 8d       	ldd	r22, Z+24	; 0x18
    6108:	71 8d       	ldd	r23, Z+25	; 0x19
    610a:	82 8d       	ldd	r24, Z+26	; 0x1a
    610c:	93 8d       	ldd	r25, Z+27	; 0x1b
    610e:	12 d3       	rcall	.+1572   	; 0x6734 <__floatsisf>
    6110:	20 e0       	ldi	r18, 0x00	; 0
    6112:	30 e0       	ldi	r19, 0x00	; 0
    6114:	48 ec       	ldi	r20, 0xC8	; 200
    6116:	52 e4       	ldi	r21, 0x42	; 66
    6118:	72 d2       	rcall	.+1252   	; 0x65fe <__divsf3>
    611a:	29 e9       	ldi	r18, 0x99	; 153
    611c:	3a ea       	ldi	r19, 0xAA	; 170
    611e:	44 eb       	ldi	r20, 0xB4	; 180
    6120:	51 e4       	ldi	r21, 0x41	; 65
    6122:	88 d1       	rcall	.+784    	; 0x6434 <__subsf3>
    6124:	69 87       	std	Y+9, r22	; 0x09
    6126:	7a 87       	std	Y+10, r23	; 0x0a
    6128:	8b 87       	std	Y+11, r24	; 0x0b
    612a:	9c 87       	std	Y+12, r25	; 0x0c
	double b = ((double)Current_state.gps.lon/100.0) - 82.7666;
    612c:	d5 01       	movw	r26, r10
    612e:	5c 96       	adiw	r26, 0x1c	; 28
    6130:	6d 91       	ld	r22, X+
    6132:	7d 91       	ld	r23, X+
    6134:	8d 91       	ld	r24, X+
    6136:	9c 91       	ld	r25, X
    6138:	5f 97       	sbiw	r26, 0x1f	; 31
    613a:	fc d2       	rcall	.+1528   	; 0x6734 <__floatsisf>
    613c:	20 e0       	ldi	r18, 0x00	; 0
    613e:	30 e0       	ldi	r19, 0x00	; 0
    6140:	48 ec       	ldi	r20, 0xC8	; 200
    6142:	52 e4       	ldi	r21, 0x42	; 66
    6144:	5c d2       	rcall	.+1208   	; 0x65fe <__divsf3>
    6146:	20 e8       	ldi	r18, 0x80	; 128
    6148:	38 e8       	ldi	r19, 0x88	; 136
    614a:	45 ea       	ldi	r20, 0xA5	; 165
    614c:	52 e4       	ldi	r21, 0x42	; 66
    614e:	72 d1       	rcall	.+740    	; 0x6434 <__subsf3>
    6150:	6d 87       	std	Y+13, r22	; 0x0d
    6152:	7e 87       	std	Y+14, r23	; 0x0e
    6154:	8f 87       	std	Y+15, r24	; 0x0f
    6156:	98 8b       	std	Y+16, r25	; 0x10
	double c = ((double)Current_state.gps.lat/100.0)*3.141592/180;
    6158:	f5 01       	movw	r30, r10
    615a:	60 8d       	ldd	r22, Z+24	; 0x18
    615c:	71 8d       	ldd	r23, Z+25	; 0x19
    615e:	82 8d       	ldd	r24, Z+26	; 0x1a
    6160:	93 8d       	ldd	r25, Z+27	; 0x1b
    6162:	e8 d2       	rcall	.+1488   	; 0x6734 <__floatsisf>
    6164:	20 e0       	ldi	r18, 0x00	; 0
    6166:	30 e0       	ldi	r19, 0x00	; 0
    6168:	48 ec       	ldi	r20, 0xC8	; 200
    616a:	52 e4       	ldi	r21, 0x42	; 66
    616c:	48 d2       	rcall	.+1168   	; 0x65fe <__divsf3>
    616e:	28 ed       	ldi	r18, 0xD8	; 216
    6170:	3f e0       	ldi	r19, 0x0F	; 15
    6172:	49 e4       	ldi	r20, 0x49	; 73
    6174:	50 e4       	ldi	r21, 0x40	; 64
    6176:	61 d4       	rcall	.+2242   	; 0x6a3a <__mulsf3>
    6178:	20 e0       	ldi	r18, 0x00	; 0
    617a:	30 e0       	ldi	r19, 0x00	; 0
    617c:	44 e3       	ldi	r20, 0x34	; 52
    617e:	53 e4       	ldi	r21, 0x43	; 67
    6180:	3e d2       	rcall	.+1148   	; 0x65fe <__divsf3>
    6182:	6d 8b       	std	Y+21, r22	; 0x15
    6184:	7e 8b       	std	Y+22, r23	; 0x16
    6186:	8f 8b       	std	Y+23, r24	; 0x17
    6188:	98 8f       	std	Y+24, r25	; 0x18
	// for france
	double a1 = ((double)Current_state.gps.lat/100.0) - 48.8;
    618a:	d5 01       	movw	r26, r10
    618c:	58 96       	adiw	r26, 0x18	; 24
    618e:	cd 90       	ld	r12, X+
    6190:	dd 90       	ld	r13, X+
    6192:	ed 90       	ld	r14, X+
    6194:	fc 90       	ld	r15, X
    6196:	5b 97       	sbiw	r26, 0x1b	; 27
	double b1 = ((double)Current_state.gps.lon/100.0) - 2.33;
    6198:	5c 96       	adiw	r26, 0x1c	; 28
    619a:	8d 91       	ld	r24, X+
    619c:	9d 91       	ld	r25, X+
    619e:	0d 90       	ld	r0, X+
    61a0:	bc 91       	ld	r27, X
    61a2:	a0 2d       	mov	r26, r0
    61a4:	89 8f       	std	Y+25, r24	; 0x19
    61a6:	9a 8f       	std	Y+26, r25	; 0x1a
    61a8:	ab 8f       	std	Y+27, r26	; 0x1b
    61aa:	bc 8f       	std	Y+28, r27	; 0x1c
	double c1 = ((double)Current_state.gps.lat/100.0)*3.141592/180;
    61ac:	d5 01       	movw	r26, r10
    61ae:	58 96       	adiw	r26, 0x18	; 24
    61b0:	8d 91       	ld	r24, X+
    61b2:	9d 91       	ld	r25, X+
    61b4:	0d 90       	ld	r0, X+
    61b6:	bc 91       	ld	r27, X
    61b8:	a0 2d       	mov	r26, r0
    61ba:	8d 8f       	std	Y+29, r24	; 0x1d
    61bc:	9e 8f       	std	Y+30, r25	; 0x1e
    61be:	af 8f       	std	Y+31, r26	; 0x1f
    61c0:	b8 a3       	std	Y+32, r27	; 0x20
	// for india inner circle
	double a2 = ((double)Current_state.gps.lat/100.0) - 19.076;
    61c2:	f5 01       	movw	r30, r10
    61c4:	60 8d       	ldd	r22, Z+24	; 0x18
    61c6:	71 8d       	ldd	r23, Z+25	; 0x19
    61c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    61ca:	93 8d       	ldd	r25, Z+27	; 0x1b
    61cc:	b3 d2       	rcall	.+1382   	; 0x6734 <__floatsisf>
    61ce:	20 e0       	ldi	r18, 0x00	; 0
    61d0:	30 e0       	ldi	r19, 0x00	; 0
    61d2:	48 ec       	ldi	r20, 0xC8	; 200
    61d4:	52 e4       	ldi	r21, 0x42	; 66
    61d6:	13 d2       	rcall	.+1062   	; 0x65fe <__divsf3>
    61d8:	26 ea       	ldi	r18, 0xA6	; 166
    61da:	3b e9       	ldi	r19, 0x9B	; 155
    61dc:	48 e9       	ldi	r20, 0x98	; 152
    61de:	51 e4       	ldi	r21, 0x41	; 65
    61e0:	29 d1       	rcall	.+594    	; 0x6434 <__subsf3>
    61e2:	69 83       	std	Y+1, r22	; 0x01
    61e4:	7a 83       	std	Y+2, r23	; 0x02
    61e6:	8b 83       	std	Y+3, r24	; 0x03
    61e8:	9c 83       	std	Y+4, r25	; 0x04
	double b2 = ((double)Current_state.gps.lon/100.0) - 72.877;
    61ea:	d5 01       	movw	r26, r10
    61ec:	5c 96       	adiw	r26, 0x1c	; 28
    61ee:	6d 91       	ld	r22, X+
    61f0:	7d 91       	ld	r23, X+
    61f2:	8d 91       	ld	r24, X+
    61f4:	9c 91       	ld	r25, X
    61f6:	5f 97       	sbiw	r26, 0x1f	; 31
    61f8:	9d d2       	rcall	.+1338   	; 0x6734 <__floatsisf>
    61fa:	20 e0       	ldi	r18, 0x00	; 0
    61fc:	30 e0       	ldi	r19, 0x00	; 0
    61fe:	48 ec       	ldi	r20, 0xC8	; 200
    6200:	52 e4       	ldi	r21, 0x42	; 66
    6202:	fd d1       	rcall	.+1018   	; 0x65fe <__divsf3>
    6204:	26 e0       	ldi	r18, 0x06	; 6
    6206:	31 ec       	ldi	r19, 0xC1	; 193
    6208:	41 e9       	ldi	r20, 0x91	; 145
    620a:	52 e4       	ldi	r21, 0x42	; 66
    620c:	13 d1       	rcall	.+550    	; 0x6434 <__subsf3>
    620e:	6d 83       	std	Y+5, r22	; 0x05
    6210:	7e 83       	std	Y+6, r23	; 0x06
    6212:	8f 83       	std	Y+7, r24	; 0x07
    6214:	98 87       	std	Y+8, r25	; 0x08
	double c2 = ((double)Current_state.gps.lat/100.0)*3.141592/180;
    6216:	f5 01       	movw	r30, r10
    6218:	60 8d       	ldd	r22, Z+24	; 0x18
    621a:	71 8d       	ldd	r23, Z+25	; 0x19
    621c:	82 8d       	ldd	r24, Z+26	; 0x1a
    621e:	93 8d       	ldd	r25, Z+27	; 0x1b
    6220:	89 d2       	rcall	.+1298   	; 0x6734 <__floatsisf>
    6222:	20 e0       	ldi	r18, 0x00	; 0
    6224:	30 e0       	ldi	r19, 0x00	; 0
    6226:	48 ec       	ldi	r20, 0xC8	; 200
    6228:	52 e4       	ldi	r21, 0x42	; 66
    622a:	e9 d1       	rcall	.+978    	; 0x65fe <__divsf3>
    622c:	28 ed       	ldi	r18, 0xD8	; 216
    622e:	3f e0       	ldi	r19, 0x0F	; 15
    6230:	49 e4       	ldi	r20, 0x49	; 73
    6232:	50 e4       	ldi	r21, 0x40	; 64
    6234:	02 d4       	rcall	.+2052   	; 0x6a3a <__mulsf3>
    6236:	20 e0       	ldi	r18, 0x00	; 0
    6238:	30 e0       	ldi	r19, 0x00	; 0
    623a:	44 e3       	ldi	r20, 0x34	; 52
    623c:	53 e4       	ldi	r21, 0x43	; 67
    623e:	df d1       	rcall	.+958    	; 0x65fe <__divsf3>
		  // over mumbai
		if (((a2*a2 + cos(c2)*b2*b2) < 100) && (Mode == NOMINAL))//change it to nominal  ((HM_Data[1])>163)
    6240:	db d1       	rcall	.+950    	; 0x65f8 <cos>
    6242:	69 8b       	std	Y+17, r22	; 0x11
    6244:	7a 8b       	std	Y+18, r23	; 0x12
    6246:	8b 8b       	std	Y+19, r24	; 0x13
    6248:	9c 8b       	std	Y+20, r25	; 0x14
    624a:	29 81       	ldd	r18, Y+1	; 0x01
    624c:	3a 81       	ldd	r19, Y+2	; 0x02
    624e:	4b 81       	ldd	r20, Y+3	; 0x03
    6250:	5c 81       	ldd	r21, Y+4	; 0x04
    6252:	ca 01       	movw	r24, r20
    6254:	b9 01       	movw	r22, r18
    6256:	f1 d3       	rcall	.+2018   	; 0x6a3a <__mulsf3>
    6258:	69 83       	std	Y+1, r22	; 0x01
    625a:	7a 83       	std	Y+2, r23	; 0x02
    625c:	8b 83       	std	Y+3, r24	; 0x03
    625e:	9c 83       	std	Y+4, r25	; 0x04
    6260:	2d 81       	ldd	r18, Y+5	; 0x05
    6262:	3e 81       	ldd	r19, Y+6	; 0x06
    6264:	4f 81       	ldd	r20, Y+7	; 0x07
    6266:	58 85       	ldd	r21, Y+8	; 0x08
    6268:	69 89       	ldd	r22, Y+17	; 0x11
    626a:	7a 89       	ldd	r23, Y+18	; 0x12
    626c:	8b 89       	ldd	r24, Y+19	; 0x13
    626e:	9c 89       	ldd	r25, Y+20	; 0x14
    6270:	e4 d3       	rcall	.+1992   	; 0x6a3a <__mulsf3>
    6272:	2d 81       	ldd	r18, Y+5	; 0x05
    6274:	3e 81       	ldd	r19, Y+6	; 0x06
    6276:	4f 81       	ldd	r20, Y+7	; 0x07
    6278:	58 85       	ldd	r21, Y+8	; 0x08
    627a:	df d3       	rcall	.+1982   	; 0x6a3a <__mulsf3>
    627c:	9b 01       	movw	r18, r22
    627e:	ac 01       	movw	r20, r24
    6280:	69 81       	ldd	r22, Y+1	; 0x01
    6282:	7a 81       	ldd	r23, Y+2	; 0x02
    6284:	8b 81       	ldd	r24, Y+3	; 0x03
    6286:	9c 81       	ldd	r25, Y+4	; 0x04
    6288:	d6 d0       	rcall	.+428    	; 0x6436 <__addsf3>
    628a:	20 e0       	ldi	r18, 0x00	; 0
    628c:	30 e0       	ldi	r19, 0x00	; 0
    628e:	48 ec       	ldi	r20, 0xC8	; 200
    6290:	52 e4       	ldi	r21, 0x42	; 66
    6292:	ae d1       	rcall	.+860    	; 0x65f0 <__cmpsf2>
    6294:	88 23       	and	r24, r24
    6296:	64 f4       	brge	.+24     	; 0x62b0 <main+0x7d4>
    6298:	80 91 26 01 	lds	r24, 0x0126
    629c:	81 30       	cpi	r24, 0x01	; 1
    629e:	09 f0       	breq	.+2      	; 0x62a2 <main+0x7c6>
    62a0:	43 c0       	rjmp	.+134    	; 0x6328 <main+0x84c>
		{
			flag_mumbai = 1;
    62a2:	80 93 7e 04 	sts	0x047E, r24
			flag_india = 0;
    62a6:	10 92 80 04 	sts	0x0480, r1
			flag_france = 0;
    62aa:	10 92 7f 04 	sts	0x047F, r1
    62ae:	a9 c0       	rjmp	.+338    	; 0x6402 <main+0x926>
		}  
		//over india outer
      else if (((a*a + cos(c)*b*b) < 625) && (Mode == NOMINAL))//change it to nominal && ((HM_Data[1])>163) 
    62b0:	6d 89       	ldd	r22, Y+21	; 0x15
    62b2:	7e 89       	ldd	r23, Y+22	; 0x16
    62b4:	8f 89       	ldd	r24, Y+23	; 0x17
    62b6:	98 8d       	ldd	r25, Y+24	; 0x18
    62b8:	9f d1       	rcall	.+830    	; 0x65f8 <cos>
    62ba:	69 83       	std	Y+1, r22	; 0x01
    62bc:	7a 83       	std	Y+2, r23	; 0x02
    62be:	8b 83       	std	Y+3, r24	; 0x03
    62c0:	9c 83       	std	Y+4, r25	; 0x04
    62c2:	29 85       	ldd	r18, Y+9	; 0x09
    62c4:	3a 85       	ldd	r19, Y+10	; 0x0a
    62c6:	4b 85       	ldd	r20, Y+11	; 0x0b
    62c8:	5c 85       	ldd	r21, Y+12	; 0x0c
    62ca:	ca 01       	movw	r24, r20
    62cc:	b9 01       	movw	r22, r18
    62ce:	b5 d3       	rcall	.+1898   	; 0x6a3a <__mulsf3>
    62d0:	6d 83       	std	Y+5, r22	; 0x05
    62d2:	7e 83       	std	Y+6, r23	; 0x06
    62d4:	8f 83       	std	Y+7, r24	; 0x07
    62d6:	98 87       	std	Y+8, r25	; 0x08
    62d8:	2d 85       	ldd	r18, Y+13	; 0x0d
    62da:	3e 85       	ldd	r19, Y+14	; 0x0e
    62dc:	4f 85       	ldd	r20, Y+15	; 0x0f
    62de:	58 89       	ldd	r21, Y+16	; 0x10
    62e0:	69 81       	ldd	r22, Y+1	; 0x01
    62e2:	7a 81       	ldd	r23, Y+2	; 0x02
    62e4:	8b 81       	ldd	r24, Y+3	; 0x03
    62e6:	9c 81       	ldd	r25, Y+4	; 0x04
    62e8:	a8 d3       	rcall	.+1872   	; 0x6a3a <__mulsf3>
    62ea:	2d 85       	ldd	r18, Y+13	; 0x0d
    62ec:	3e 85       	ldd	r19, Y+14	; 0x0e
    62ee:	4f 85       	ldd	r20, Y+15	; 0x0f
    62f0:	58 89       	ldd	r21, Y+16	; 0x10
    62f2:	a3 d3       	rcall	.+1862   	; 0x6a3a <__mulsf3>
    62f4:	9b 01       	movw	r18, r22
    62f6:	ac 01       	movw	r20, r24
    62f8:	6d 81       	ldd	r22, Y+5	; 0x05
    62fa:	7e 81       	ldd	r23, Y+6	; 0x06
    62fc:	8f 81       	ldd	r24, Y+7	; 0x07
    62fe:	98 85       	ldd	r25, Y+8	; 0x08
    6300:	9a d0       	rcall	.+308    	; 0x6436 <__addsf3>
    6302:	20 e0       	ldi	r18, 0x00	; 0
    6304:	30 e4       	ldi	r19, 0x40	; 64
    6306:	4c e1       	ldi	r20, 0x1C	; 28
    6308:	54 e4       	ldi	r21, 0x44	; 68
    630a:	72 d1       	rcall	.+740    	; 0x65f0 <__cmpsf2>
    630c:	88 23       	and	r24, r24
    630e:	64 f4       	brge	.+24     	; 0x6328 <main+0x84c>
    6310:	80 91 26 01 	lds	r24, 0x0126
    6314:	81 30       	cpi	r24, 0x01	; 1
    6316:	09 f0       	breq	.+2      	; 0x631a <main+0x83e>
    6318:	6e c0       	rjmp	.+220    	; 0x63f6 <main+0x91a>
	  {
      flag_mumbai = 0;
    631a:	10 92 7e 04 	sts	0x047E, r1
      flag_india = 1;
    631e:	80 93 80 04 	sts	0x0480, r24
	  flag_france = 0;
    6322:	10 92 7f 04 	sts	0x047F, r1
    6326:	6d c0       	rjmp	.+218    	; 0x6402 <main+0x926>
	double a = ((double)Current_state.gps.lat/100.0) - 22.5833;
	double b = ((double)Current_state.gps.lon/100.0) - 82.7666;
	double c = ((double)Current_state.gps.lat/100.0)*3.141592/180;
	// for france
	double a1 = ((double)Current_state.gps.lat/100.0) - 48.8;
	double b1 = ((double)Current_state.gps.lon/100.0) - 2.33;
    6328:	69 8d       	ldd	r22, Y+25	; 0x19
    632a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    632c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    632e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6330:	01 d2       	rcall	.+1026   	; 0x6734 <__floatsisf>
    6332:	20 e0       	ldi	r18, 0x00	; 0
    6334:	30 e0       	ldi	r19, 0x00	; 0
    6336:	48 ec       	ldi	r20, 0xC8	; 200
    6338:	52 e4       	ldi	r21, 0x42	; 66
    633a:	61 d1       	rcall	.+706    	; 0x65fe <__divsf3>
    633c:	28 eb       	ldi	r18, 0xB8	; 184
    633e:	3e e1       	ldi	r19, 0x1E	; 30
    6340:	45 e1       	ldi	r20, 0x15	; 21
    6342:	50 e4       	ldi	r21, 0x40	; 64
    6344:	77 d0       	rcall	.+238    	; 0x6434 <__subsf3>
    6346:	69 83       	std	Y+1, r22	; 0x01
    6348:	7a 83       	std	Y+2, r23	; 0x02
    634a:	8b 83       	std	Y+3, r24	; 0x03
    634c:	9c 83       	std	Y+4, r25	; 0x04
	  // for india outer circle
	double a = ((double)Current_state.gps.lat/100.0) - 22.5833;
	double b = ((double)Current_state.gps.lon/100.0) - 82.7666;
	double c = ((double)Current_state.gps.lat/100.0)*3.141592/180;
	// for france
	double a1 = ((double)Current_state.gps.lat/100.0) - 48.8;
    634e:	c7 01       	movw	r24, r14
    6350:	b6 01       	movw	r22, r12
    6352:	f0 d1       	rcall	.+992    	; 0x6734 <__floatsisf>
    6354:	20 e0       	ldi	r18, 0x00	; 0
    6356:	30 e0       	ldi	r19, 0x00	; 0
    6358:	48 ec       	ldi	r20, 0xC8	; 200
    635a:	52 e4       	ldi	r21, 0x42	; 66
    635c:	50 d1       	rcall	.+672    	; 0x65fe <__divsf3>
    635e:	23 e3       	ldi	r18, 0x33	; 51
    6360:	33 e3       	ldi	r19, 0x33	; 51
    6362:	43 e4       	ldi	r20, 0x43	; 67
    6364:	52 e4       	ldi	r21, 0x42	; 66
    6366:	66 d0       	rcall	.+204    	; 0x6434 <__subsf3>
    6368:	6b 01       	movw	r12, r22
    636a:	7c 01       	movw	r14, r24
	double b1 = ((double)Current_state.gps.lon/100.0) - 2.33;
	double c1 = ((double)Current_state.gps.lat/100.0)*3.141592/180;
    636c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    636e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    6370:	8f 8d       	ldd	r24, Y+31	; 0x1f
    6372:	98 a1       	ldd	r25, Y+32	; 0x20
    6374:	df d1       	rcall	.+958    	; 0x6734 <__floatsisf>
    6376:	20 e0       	ldi	r18, 0x00	; 0
    6378:	30 e0       	ldi	r19, 0x00	; 0
    637a:	48 ec       	ldi	r20, 0xC8	; 200
    637c:	52 e4       	ldi	r21, 0x42	; 66
    637e:	3f d1       	rcall	.+638    	; 0x65fe <__divsf3>
    6380:	28 ed       	ldi	r18, 0xD8	; 216
    6382:	3f e0       	ldi	r19, 0x0F	; 15
    6384:	49 e4       	ldi	r20, 0x49	; 73
    6386:	50 e4       	ldi	r21, 0x40	; 64
    6388:	58 d3       	rcall	.+1712   	; 0x6a3a <__mulsf3>
    638a:	20 e0       	ldi	r18, 0x00	; 0
    638c:	30 e0       	ldi	r19, 0x00	; 0
    638e:	44 e3       	ldi	r20, 0x34	; 52
    6390:	53 e4       	ldi	r21, 0x43	; 67
    6392:	35 d1       	rcall	.+618    	; 0x65fe <__divsf3>
      flag_mumbai = 0;
      flag_india = 1;
	  flag_france = 0;
	  }
	  //over france
      else if (((a1*a1 + cos(c1)*b1*b1) < 100)  && (Mode == NOMINAL))//&& ((HM_Data[1])>163)
    6394:	31 d1       	rcall	.+610    	; 0x65f8 <cos>
    6396:	6d 83       	std	Y+5, r22	; 0x05
    6398:	7e 83       	std	Y+6, r23	; 0x06
    639a:	8f 83       	std	Y+7, r24	; 0x07
    639c:	98 87       	std	Y+8, r25	; 0x08
    639e:	a7 01       	movw	r20, r14
    63a0:	96 01       	movw	r18, r12
    63a2:	c7 01       	movw	r24, r14
    63a4:	b6 01       	movw	r22, r12
    63a6:	49 d3       	rcall	.+1682   	; 0x6a3a <__mulsf3>
    63a8:	6b 01       	movw	r12, r22
    63aa:	7c 01       	movw	r14, r24
    63ac:	29 81       	ldd	r18, Y+1	; 0x01
    63ae:	3a 81       	ldd	r19, Y+2	; 0x02
    63b0:	4b 81       	ldd	r20, Y+3	; 0x03
    63b2:	5c 81       	ldd	r21, Y+4	; 0x04
    63b4:	6d 81       	ldd	r22, Y+5	; 0x05
    63b6:	7e 81       	ldd	r23, Y+6	; 0x06
    63b8:	8f 81       	ldd	r24, Y+7	; 0x07
    63ba:	98 85       	ldd	r25, Y+8	; 0x08
    63bc:	3e d3       	rcall	.+1660   	; 0x6a3a <__mulsf3>
    63be:	29 81       	ldd	r18, Y+1	; 0x01
    63c0:	3a 81       	ldd	r19, Y+2	; 0x02
    63c2:	4b 81       	ldd	r20, Y+3	; 0x03
    63c4:	5c 81       	ldd	r21, Y+4	; 0x04
    63c6:	39 d3       	rcall	.+1650   	; 0x6a3a <__mulsf3>
    63c8:	9b 01       	movw	r18, r22
    63ca:	ac 01       	movw	r20, r24
    63cc:	c7 01       	movw	r24, r14
    63ce:	b6 01       	movw	r22, r12
    63d0:	32 d0       	rcall	.+100    	; 0x6436 <__addsf3>
    63d2:	20 e0       	ldi	r18, 0x00	; 0
    63d4:	30 e0       	ldi	r19, 0x00	; 0
    63d6:	48 ec       	ldi	r20, 0xC8	; 200
    63d8:	52 e4       	ldi	r21, 0x42	; 66
    63da:	0a d1       	rcall	.+532    	; 0x65f0 <__cmpsf2>
    63dc:	88 23       	and	r24, r24
    63de:	5c f4       	brge	.+22     	; 0x63f6 <main+0x91a>
    63e0:	80 91 26 01 	lds	r24, 0x0126
    63e4:	81 30       	cpi	r24, 0x01	; 1
    63e6:	39 f4       	brne	.+14     	; 0x63f6 <main+0x91a>
      {
	  flag_mumbai = 0;
    63e8:	10 92 7e 04 	sts	0x047E, r1
      flag_france = 1;
    63ec:	80 93 7f 04 	sts	0x047F, r24
	  flag_india = 0;
    63f0:	10 92 80 04 	sts	0x0480, r1
    63f4:	06 c0       	rjmp	.+12     	; 0x6402 <main+0x926>
	  }
	  // normal mode no downlink
      else
	  {
      flag_france = 0;
    63f6:	10 92 7f 04 	sts	0x047F, r1
	  flag_india = 0;
    63fa:	10 92 80 04 	sts	0x0480, r1
	  flag_mumbai = 0;
    63fe:	10 92 7e 04 	sts	0x047E, r1
		   Current_state.gps.lon = 0;
		   transmit_UART0('N');
	   }
      */
      //_delay_ms(200);
	  UniversalCycles = UniversalCycles+1;
    6402:	80 91 21 01 	lds	r24, 0x0121
    6406:	90 91 22 01 	lds	r25, 0x0122
    640a:	01 96       	adiw	r24, 0x01	; 1
    640c:	90 93 22 01 	sts	0x0122, r25
    6410:	80 93 21 01 	sts	0x0121, r24
    //}
	timer_wait_reset();
    6414:	c2 da       	rcall	.-2684   	; 0x599a <timer_wait_reset>
	//wdt_disable();
  }
    6416:	bf cb       	rjmp	.-2178   	; 0x5b96 <main+0xba>

00006418 <acos>:
    6418:	9f 93       	push	r25
    641a:	9f 77       	andi	r25, 0x7F	; 127
    641c:	04 d2       	rcall	.+1032   	; 0x6826 <__fp_arccos>
    641e:	0f 90       	pop	r0
    6420:	00 20       	and	r0, r0
    6422:	3a f4       	brpl	.+14     	; 0x6432 <acos+0x1a>
    6424:	90 58       	subi	r25, 0x80	; 128
    6426:	a2 ea       	ldi	r26, 0xA2	; 162
    6428:	2a ed       	ldi	r18, 0xDA	; 218
    642a:	3f e0       	ldi	r19, 0x0F	; 15
    642c:	49 e4       	ldi	r20, 0x49	; 73
    642e:	50 e4       	ldi	r21, 0x40	; 64
    6430:	13 d0       	rcall	.+38     	; 0x6458 <__addsf3x>
    6432:	ad c2       	rjmp	.+1370   	; 0x698e <__fp_round>

00006434 <__subsf3>:
    6434:	50 58       	subi	r21, 0x80	; 128

00006436 <__addsf3>:
    6436:	bb 27       	eor	r27, r27
    6438:	aa 27       	eor	r26, r26
    643a:	0e d0       	rcall	.+28     	; 0x6458 <__addsf3x>
    643c:	a8 c2       	rjmp	.+1360   	; 0x698e <__fp_round>
    643e:	71 d2       	rcall	.+1250   	; 0x6922 <__fp_pscA>
    6440:	30 f0       	brcs	.+12     	; 0x644e <__addsf3+0x18>
    6442:	76 d2       	rcall	.+1260   	; 0x6930 <__fp_pscB>
    6444:	20 f0       	brcs	.+8      	; 0x644e <__addsf3+0x18>
    6446:	31 f4       	brne	.+12     	; 0x6454 <__addsf3+0x1e>
    6448:	9f 3f       	cpi	r25, 0xFF	; 255
    644a:	11 f4       	brne	.+4      	; 0x6450 <__addsf3+0x1a>
    644c:	1e f4       	brtc	.+6      	; 0x6454 <__addsf3+0x1e>
    644e:	30 c2       	rjmp	.+1120   	; 0x68b0 <__fp_nan>
    6450:	0e f4       	brtc	.+2      	; 0x6454 <__addsf3+0x1e>
    6452:	e0 95       	com	r30
    6454:	e7 fb       	bst	r30, 7
    6456:	26 c2       	rjmp	.+1100   	; 0x68a4 <__fp_inf>

00006458 <__addsf3x>:
    6458:	e9 2f       	mov	r30, r25
    645a:	bb d2       	rcall	.+1398   	; 0x69d2 <__fp_split3>
    645c:	80 f3       	brcs	.-32     	; 0x643e <__addsf3+0x8>
    645e:	ba 17       	cp	r27, r26
    6460:	62 07       	cpc	r22, r18
    6462:	73 07       	cpc	r23, r19
    6464:	84 07       	cpc	r24, r20
    6466:	95 07       	cpc	r25, r21
    6468:	18 f0       	brcs	.+6      	; 0x6470 <__addsf3x+0x18>
    646a:	71 f4       	brne	.+28     	; 0x6488 <__addsf3x+0x30>
    646c:	9e f5       	brtc	.+102    	; 0x64d4 <__addsf3x+0x7c>
    646e:	d3 c2       	rjmp	.+1446   	; 0x6a16 <__fp_zero>
    6470:	0e f4       	brtc	.+2      	; 0x6474 <__addsf3x+0x1c>
    6472:	e0 95       	com	r30
    6474:	0b 2e       	mov	r0, r27
    6476:	ba 2f       	mov	r27, r26
    6478:	a0 2d       	mov	r26, r0
    647a:	0b 01       	movw	r0, r22
    647c:	b9 01       	movw	r22, r18
    647e:	90 01       	movw	r18, r0
    6480:	0c 01       	movw	r0, r24
    6482:	ca 01       	movw	r24, r20
    6484:	a0 01       	movw	r20, r0
    6486:	11 24       	eor	r1, r1
    6488:	ff 27       	eor	r31, r31
    648a:	59 1b       	sub	r21, r25
    648c:	99 f0       	breq	.+38     	; 0x64b4 <__addsf3x+0x5c>
    648e:	59 3f       	cpi	r21, 0xF9	; 249
    6490:	50 f4       	brcc	.+20     	; 0x64a6 <__addsf3x+0x4e>
    6492:	50 3e       	cpi	r21, 0xE0	; 224
    6494:	68 f1       	brcs	.+90     	; 0x64f0 <__addsf3x+0x98>
    6496:	1a 16       	cp	r1, r26
    6498:	f0 40       	sbci	r31, 0x00	; 0
    649a:	a2 2f       	mov	r26, r18
    649c:	23 2f       	mov	r18, r19
    649e:	34 2f       	mov	r19, r20
    64a0:	44 27       	eor	r20, r20
    64a2:	58 5f       	subi	r21, 0xF8	; 248
    64a4:	f3 cf       	rjmp	.-26     	; 0x648c <__addsf3x+0x34>
    64a6:	46 95       	lsr	r20
    64a8:	37 95       	ror	r19
    64aa:	27 95       	ror	r18
    64ac:	a7 95       	ror	r26
    64ae:	f0 40       	sbci	r31, 0x00	; 0
    64b0:	53 95       	inc	r21
    64b2:	c9 f7       	brne	.-14     	; 0x64a6 <__addsf3x+0x4e>
    64b4:	7e f4       	brtc	.+30     	; 0x64d4 <__addsf3x+0x7c>
    64b6:	1f 16       	cp	r1, r31
    64b8:	ba 0b       	sbc	r27, r26
    64ba:	62 0b       	sbc	r22, r18
    64bc:	73 0b       	sbc	r23, r19
    64be:	84 0b       	sbc	r24, r20
    64c0:	ba f0       	brmi	.+46     	; 0x64f0 <__addsf3x+0x98>
    64c2:	91 50       	subi	r25, 0x01	; 1
    64c4:	a1 f0       	breq	.+40     	; 0x64ee <__addsf3x+0x96>
    64c6:	ff 0f       	add	r31, r31
    64c8:	bb 1f       	adc	r27, r27
    64ca:	66 1f       	adc	r22, r22
    64cc:	77 1f       	adc	r23, r23
    64ce:	88 1f       	adc	r24, r24
    64d0:	c2 f7       	brpl	.-16     	; 0x64c2 <__addsf3x+0x6a>
    64d2:	0e c0       	rjmp	.+28     	; 0x64f0 <__addsf3x+0x98>
    64d4:	ba 0f       	add	r27, r26
    64d6:	62 1f       	adc	r22, r18
    64d8:	73 1f       	adc	r23, r19
    64da:	84 1f       	adc	r24, r20
    64dc:	48 f4       	brcc	.+18     	; 0x64f0 <__addsf3x+0x98>
    64de:	87 95       	ror	r24
    64e0:	77 95       	ror	r23
    64e2:	67 95       	ror	r22
    64e4:	b7 95       	ror	r27
    64e6:	f7 95       	ror	r31
    64e8:	9e 3f       	cpi	r25, 0xFE	; 254
    64ea:	08 f0       	brcs	.+2      	; 0x64ee <__addsf3x+0x96>
    64ec:	b3 cf       	rjmp	.-154    	; 0x6454 <__addsf3+0x1e>
    64ee:	93 95       	inc	r25
    64f0:	88 0f       	add	r24, r24
    64f2:	08 f0       	brcs	.+2      	; 0x64f6 <__addsf3x+0x9e>
    64f4:	99 27       	eor	r25, r25
    64f6:	ee 0f       	add	r30, r30
    64f8:	97 95       	ror	r25
    64fa:	87 95       	ror	r24
    64fc:	08 95       	ret

000064fe <asin>:
    64fe:	9f 93       	push	r25
    6500:	9f 77       	andi	r25, 0x7F	; 127
    6502:	ee e3       	ldi	r30, 0x3E	; 62
    6504:	89 37       	cpi	r24, 0x79	; 121
    6506:	9e 07       	cpc	r25, r30
    6508:	20 f4       	brcc	.+8      	; 0x6512 <asin+0x14>
    650a:	e2 ea       	ldi	r30, 0xA2	; 162
    650c:	f0 e0       	ldi	r31, 0x00	; 0
    650e:	f8 d1       	rcall	.+1008   	; 0x6900 <__fp_powsodd>
    6510:	09 c0       	rjmp	.+18     	; 0x6524 <asin+0x26>
    6512:	89 d1       	rcall	.+786    	; 0x6826 <__fp_arccos>
    6514:	90 58       	subi	r25, 0x80	; 128
    6516:	a2 ea       	ldi	r26, 0xA2	; 162
    6518:	2a ed       	ldi	r18, 0xDA	; 218
    651a:	3f e0       	ldi	r19, 0x0F	; 15
    651c:	49 ec       	ldi	r20, 0xC9	; 201
    651e:	5f e3       	ldi	r21, 0x3F	; 63
    6520:	9b df       	rcall	.-202    	; 0x6458 <__addsf3x>
    6522:	35 d2       	rcall	.+1130   	; 0x698e <__fp_round>
    6524:	0f 90       	pop	r0
    6526:	07 fc       	sbrc	r0, 7
    6528:	90 58       	subi	r25, 0x80	; 128
    652a:	08 95       	ret
    652c:	fa d1       	rcall	.+1012   	; 0x6922 <__fp_pscA>
    652e:	58 f0       	brcs	.+22     	; 0x6546 <asin+0x48>
    6530:	80 e8       	ldi	r24, 0x80	; 128
    6532:	91 e0       	ldi	r25, 0x01	; 1
    6534:	09 f4       	brne	.+2      	; 0x6538 <asin+0x3a>
    6536:	9e ef       	ldi	r25, 0xFE	; 254
    6538:	fb d1       	rcall	.+1014   	; 0x6930 <__fp_pscB>
    653a:	28 f0       	brcs	.+10     	; 0x6546 <asin+0x48>
    653c:	40 e8       	ldi	r20, 0x80	; 128
    653e:	51 e0       	ldi	r21, 0x01	; 1
    6540:	59 f4       	brne	.+22     	; 0x6558 <atan2+0xe>
    6542:	5e ef       	ldi	r21, 0xFE	; 254
    6544:	09 c0       	rjmp	.+18     	; 0x6558 <atan2+0xe>
    6546:	b4 c1       	rjmp	.+872    	; 0x68b0 <__fp_nan>
    6548:	66 c2       	rjmp	.+1228   	; 0x6a16 <__fp_zero>

0000654a <atan2>:
    654a:	e9 2f       	mov	r30, r25
    654c:	e0 78       	andi	r30, 0x80	; 128
    654e:	41 d2       	rcall	.+1154   	; 0x69d2 <__fp_split3>
    6550:	68 f3       	brcs	.-38     	; 0x652c <asin+0x2e>
    6552:	09 2e       	mov	r0, r25
    6554:	05 2a       	or	r0, r21
    6556:	c1 f3       	breq	.-16     	; 0x6548 <asin+0x4a>
    6558:	26 17       	cp	r18, r22
    655a:	37 07       	cpc	r19, r23
    655c:	48 07       	cpc	r20, r24
    655e:	59 07       	cpc	r21, r25
    6560:	38 f0       	brcs	.+14     	; 0x6570 <atan2+0x26>
    6562:	0e 2e       	mov	r0, r30
    6564:	07 f8       	bld	r0, 7
    6566:	e0 25       	eor	r30, r0
    6568:	69 f0       	breq	.+26     	; 0x6584 <atan2+0x3a>
    656a:	e0 25       	eor	r30, r0
    656c:	e0 64       	ori	r30, 0x40	; 64
    656e:	0a c0       	rjmp	.+20     	; 0x6584 <atan2+0x3a>
    6570:	ef 63       	ori	r30, 0x3F	; 63
    6572:	07 f8       	bld	r0, 7
    6574:	00 94       	com	r0
    6576:	07 fa       	bst	r0, 7
    6578:	db 01       	movw	r26, r22
    657a:	b9 01       	movw	r22, r18
    657c:	9d 01       	movw	r18, r26
    657e:	dc 01       	movw	r26, r24
    6580:	ca 01       	movw	r24, r20
    6582:	ad 01       	movw	r20, r26
    6584:	ef 93       	push	r30
    6586:	4a d0       	rcall	.+148    	; 0x661c <__divsf3_pse>
    6588:	02 d2       	rcall	.+1028   	; 0x698e <__fp_round>
    658a:	0a d0       	rcall	.+20     	; 0x65a0 <atan>
    658c:	5f 91       	pop	r21
    658e:	55 23       	and	r21, r21
    6590:	31 f0       	breq	.+12     	; 0x659e <atan2+0x54>
    6592:	2b ed       	ldi	r18, 0xDB	; 219
    6594:	3f e0       	ldi	r19, 0x0F	; 15
    6596:	49 e4       	ldi	r20, 0x49	; 73
    6598:	50 fd       	sbrc	r21, 0
    659a:	49 ec       	ldi	r20, 0xC9	; 201
    659c:	4c cf       	rjmp	.-360    	; 0x6436 <__addsf3>
    659e:	08 95       	ret

000065a0 <atan>:
    65a0:	df 93       	push	r29
    65a2:	dd 27       	eor	r29, r29
    65a4:	b9 2f       	mov	r27, r25
    65a6:	bf 77       	andi	r27, 0x7F	; 127
    65a8:	40 e8       	ldi	r20, 0x80	; 128
    65aa:	5f e3       	ldi	r21, 0x3F	; 63
    65ac:	16 16       	cp	r1, r22
    65ae:	17 06       	cpc	r1, r23
    65b0:	48 07       	cpc	r20, r24
    65b2:	5b 07       	cpc	r21, r27
    65b4:	10 f4       	brcc	.+4      	; 0x65ba <atan+0x1a>
    65b6:	d9 2f       	mov	r29, r25
    65b8:	39 d2       	rcall	.+1138   	; 0x6a2c <inverse>
    65ba:	9f 93       	push	r25
    65bc:	8f 93       	push	r24
    65be:	7f 93       	push	r23
    65c0:	6f 93       	push	r22
    65c2:	32 d3       	rcall	.+1636   	; 0x6c28 <square>
    65c4:	e6 eb       	ldi	r30, 0xB6	; 182
    65c6:	f0 e0       	ldi	r31, 0x00	; 0
    65c8:	76 d1       	rcall	.+748    	; 0x68b6 <__fp_powser>
    65ca:	e1 d1       	rcall	.+962    	; 0x698e <__fp_round>
    65cc:	2f 91       	pop	r18
    65ce:	3f 91       	pop	r19
    65d0:	4f 91       	pop	r20
    65d2:	5f 91       	pop	r21
    65d4:	3e d2       	rcall	.+1148   	; 0x6a52 <__mulsf3x>
    65d6:	dd 23       	and	r29, r29
    65d8:	49 f0       	breq	.+18     	; 0x65ec <atan+0x4c>
    65da:	90 58       	subi	r25, 0x80	; 128
    65dc:	a2 ea       	ldi	r26, 0xA2	; 162
    65de:	2a ed       	ldi	r18, 0xDA	; 218
    65e0:	3f e0       	ldi	r19, 0x0F	; 15
    65e2:	49 ec       	ldi	r20, 0xC9	; 201
    65e4:	5f e3       	ldi	r21, 0x3F	; 63
    65e6:	d0 78       	andi	r29, 0x80	; 128
    65e8:	5d 27       	eor	r21, r29
    65ea:	36 df       	rcall	.-404    	; 0x6458 <__addsf3x>
    65ec:	df 91       	pop	r29
    65ee:	cf c1       	rjmp	.+926    	; 0x698e <__fp_round>

000065f0 <__cmpsf2>:
    65f0:	35 d1       	rcall	.+618    	; 0x685c <__fp_cmp>
    65f2:	08 f4       	brcc	.+2      	; 0x65f6 <__cmpsf2+0x6>
    65f4:	81 e0       	ldi	r24, 0x01	; 1
    65f6:	08 95       	ret

000065f8 <cos>:
    65f8:	a3 d1       	rcall	.+838    	; 0x6940 <__fp_rempio2>
    65fa:	e3 95       	inc	r30
    65fc:	d9 c1       	rjmp	.+946    	; 0x69b0 <__fp_sinus>

000065fe <__divsf3>:
    65fe:	0c d0       	rcall	.+24     	; 0x6618 <__divsf3x>
    6600:	c6 c1       	rjmp	.+908    	; 0x698e <__fp_round>
    6602:	96 d1       	rcall	.+812    	; 0x6930 <__fp_pscB>
    6604:	40 f0       	brcs	.+16     	; 0x6616 <__divsf3+0x18>
    6606:	8d d1       	rcall	.+794    	; 0x6922 <__fp_pscA>
    6608:	30 f0       	brcs	.+12     	; 0x6616 <__divsf3+0x18>
    660a:	21 f4       	brne	.+8      	; 0x6614 <__divsf3+0x16>
    660c:	5f 3f       	cpi	r21, 0xFF	; 255
    660e:	19 f0       	breq	.+6      	; 0x6616 <__divsf3+0x18>
    6610:	49 c1       	rjmp	.+658    	; 0x68a4 <__fp_inf>
    6612:	51 11       	cpse	r21, r1
    6614:	01 c2       	rjmp	.+1026   	; 0x6a18 <__fp_szero>
    6616:	4c c1       	rjmp	.+664    	; 0x68b0 <__fp_nan>

00006618 <__divsf3x>:
    6618:	dc d1       	rcall	.+952    	; 0x69d2 <__fp_split3>
    661a:	98 f3       	brcs	.-26     	; 0x6602 <__divsf3+0x4>

0000661c <__divsf3_pse>:
    661c:	99 23       	and	r25, r25
    661e:	c9 f3       	breq	.-14     	; 0x6612 <__divsf3+0x14>
    6620:	55 23       	and	r21, r21
    6622:	b1 f3       	breq	.-20     	; 0x6610 <__divsf3+0x12>
    6624:	95 1b       	sub	r25, r21
    6626:	55 0b       	sbc	r21, r21
    6628:	bb 27       	eor	r27, r27
    662a:	aa 27       	eor	r26, r26
    662c:	62 17       	cp	r22, r18
    662e:	73 07       	cpc	r23, r19
    6630:	84 07       	cpc	r24, r20
    6632:	38 f0       	brcs	.+14     	; 0x6642 <__divsf3_pse+0x26>
    6634:	9f 5f       	subi	r25, 0xFF	; 255
    6636:	5f 4f       	sbci	r21, 0xFF	; 255
    6638:	22 0f       	add	r18, r18
    663a:	33 1f       	adc	r19, r19
    663c:	44 1f       	adc	r20, r20
    663e:	aa 1f       	adc	r26, r26
    6640:	a9 f3       	breq	.-22     	; 0x662c <__divsf3_pse+0x10>
    6642:	33 d0       	rcall	.+102    	; 0x66aa <__divsf3_pse+0x8e>
    6644:	0e 2e       	mov	r0, r30
    6646:	3a f0       	brmi	.+14     	; 0x6656 <__divsf3_pse+0x3a>
    6648:	e0 e8       	ldi	r30, 0x80	; 128
    664a:	30 d0       	rcall	.+96     	; 0x66ac <__divsf3_pse+0x90>
    664c:	91 50       	subi	r25, 0x01	; 1
    664e:	50 40       	sbci	r21, 0x00	; 0
    6650:	e6 95       	lsr	r30
    6652:	00 1c       	adc	r0, r0
    6654:	ca f7       	brpl	.-14     	; 0x6648 <__divsf3_pse+0x2c>
    6656:	29 d0       	rcall	.+82     	; 0x66aa <__divsf3_pse+0x8e>
    6658:	fe 2f       	mov	r31, r30
    665a:	27 d0       	rcall	.+78     	; 0x66aa <__divsf3_pse+0x8e>
    665c:	66 0f       	add	r22, r22
    665e:	77 1f       	adc	r23, r23
    6660:	88 1f       	adc	r24, r24
    6662:	bb 1f       	adc	r27, r27
    6664:	26 17       	cp	r18, r22
    6666:	37 07       	cpc	r19, r23
    6668:	48 07       	cpc	r20, r24
    666a:	ab 07       	cpc	r26, r27
    666c:	b0 e8       	ldi	r27, 0x80	; 128
    666e:	09 f0       	breq	.+2      	; 0x6672 <__divsf3_pse+0x56>
    6670:	bb 0b       	sbc	r27, r27
    6672:	80 2d       	mov	r24, r0
    6674:	bf 01       	movw	r22, r30
    6676:	ff 27       	eor	r31, r31
    6678:	93 58       	subi	r25, 0x83	; 131
    667a:	5f 4f       	sbci	r21, 0xFF	; 255
    667c:	2a f0       	brmi	.+10     	; 0x6688 <__divsf3_pse+0x6c>
    667e:	9e 3f       	cpi	r25, 0xFE	; 254
    6680:	51 05       	cpc	r21, r1
    6682:	68 f0       	brcs	.+26     	; 0x669e <__divsf3_pse+0x82>
    6684:	0f c1       	rjmp	.+542    	; 0x68a4 <__fp_inf>
    6686:	c8 c1       	rjmp	.+912    	; 0x6a18 <__fp_szero>
    6688:	5f 3f       	cpi	r21, 0xFF	; 255
    668a:	ec f3       	brlt	.-6      	; 0x6686 <__divsf3_pse+0x6a>
    668c:	98 3e       	cpi	r25, 0xE8	; 232
    668e:	dc f3       	brlt	.-10     	; 0x6686 <__divsf3_pse+0x6a>
    6690:	86 95       	lsr	r24
    6692:	77 95       	ror	r23
    6694:	67 95       	ror	r22
    6696:	b7 95       	ror	r27
    6698:	f7 95       	ror	r31
    669a:	9f 5f       	subi	r25, 0xFF	; 255
    669c:	c9 f7       	brne	.-14     	; 0x6690 <__divsf3_pse+0x74>
    669e:	88 0f       	add	r24, r24
    66a0:	91 1d       	adc	r25, r1
    66a2:	96 95       	lsr	r25
    66a4:	87 95       	ror	r24
    66a6:	97 f9       	bld	r25, 7
    66a8:	08 95       	ret
    66aa:	e1 e0       	ldi	r30, 0x01	; 1
    66ac:	66 0f       	add	r22, r22
    66ae:	77 1f       	adc	r23, r23
    66b0:	88 1f       	adc	r24, r24
    66b2:	bb 1f       	adc	r27, r27
    66b4:	62 17       	cp	r22, r18
    66b6:	73 07       	cpc	r23, r19
    66b8:	84 07       	cpc	r24, r20
    66ba:	ba 07       	cpc	r27, r26
    66bc:	20 f0       	brcs	.+8      	; 0x66c6 <__divsf3_pse+0xaa>
    66be:	62 1b       	sub	r22, r18
    66c0:	73 0b       	sbc	r23, r19
    66c2:	84 0b       	sbc	r24, r20
    66c4:	ba 0b       	sbc	r27, r26
    66c6:	ee 1f       	adc	r30, r30
    66c8:	88 f7       	brcc	.-30     	; 0x66ac <__divsf3_pse+0x90>
    66ca:	e0 95       	com	r30
    66cc:	08 95       	ret

000066ce <__fixsfsi>:
    66ce:	04 d0       	rcall	.+8      	; 0x66d8 <__fixunssfsi>
    66d0:	68 94       	set
    66d2:	b1 11       	cpse	r27, r1
    66d4:	a1 c1       	rjmp	.+834    	; 0x6a18 <__fp_szero>
    66d6:	08 95       	ret

000066d8 <__fixunssfsi>:
    66d8:	84 d1       	rcall	.+776    	; 0x69e2 <__fp_splitA>
    66da:	88 f0       	brcs	.+34     	; 0x66fe <__fixunssfsi+0x26>
    66dc:	9f 57       	subi	r25, 0x7F	; 127
    66de:	90 f0       	brcs	.+36     	; 0x6704 <__fixunssfsi+0x2c>
    66e0:	b9 2f       	mov	r27, r25
    66e2:	99 27       	eor	r25, r25
    66e4:	b7 51       	subi	r27, 0x17	; 23
    66e6:	a0 f0       	brcs	.+40     	; 0x6710 <__fixunssfsi+0x38>
    66e8:	d1 f0       	breq	.+52     	; 0x671e <__fixunssfsi+0x46>
    66ea:	66 0f       	add	r22, r22
    66ec:	77 1f       	adc	r23, r23
    66ee:	88 1f       	adc	r24, r24
    66f0:	99 1f       	adc	r25, r25
    66f2:	1a f0       	brmi	.+6      	; 0x66fa <__fixunssfsi+0x22>
    66f4:	ba 95       	dec	r27
    66f6:	c9 f7       	brne	.-14     	; 0x66ea <__fixunssfsi+0x12>
    66f8:	12 c0       	rjmp	.+36     	; 0x671e <__fixunssfsi+0x46>
    66fa:	b1 30       	cpi	r27, 0x01	; 1
    66fc:	81 f0       	breq	.+32     	; 0x671e <__fixunssfsi+0x46>
    66fe:	8b d1       	rcall	.+790    	; 0x6a16 <__fp_zero>
    6700:	b1 e0       	ldi	r27, 0x01	; 1
    6702:	08 95       	ret
    6704:	88 c1       	rjmp	.+784    	; 0x6a16 <__fp_zero>
    6706:	67 2f       	mov	r22, r23
    6708:	78 2f       	mov	r23, r24
    670a:	88 27       	eor	r24, r24
    670c:	b8 5f       	subi	r27, 0xF8	; 248
    670e:	39 f0       	breq	.+14     	; 0x671e <__fixunssfsi+0x46>
    6710:	b9 3f       	cpi	r27, 0xF9	; 249
    6712:	cc f3       	brlt	.-14     	; 0x6706 <__fixunssfsi+0x2e>
    6714:	86 95       	lsr	r24
    6716:	77 95       	ror	r23
    6718:	67 95       	ror	r22
    671a:	b3 95       	inc	r27
    671c:	d9 f7       	brne	.-10     	; 0x6714 <__fixunssfsi+0x3c>
    671e:	3e f4       	brtc	.+14     	; 0x672e <__fixunssfsi+0x56>
    6720:	90 95       	com	r25
    6722:	80 95       	com	r24
    6724:	70 95       	com	r23
    6726:	61 95       	neg	r22
    6728:	7f 4f       	sbci	r23, 0xFF	; 255
    672a:	8f 4f       	sbci	r24, 0xFF	; 255
    672c:	9f 4f       	sbci	r25, 0xFF	; 255
    672e:	08 95       	ret

00006730 <__floatunsisf>:
    6730:	e8 94       	clt
    6732:	09 c0       	rjmp	.+18     	; 0x6746 <__floatsisf+0x12>

00006734 <__floatsisf>:
    6734:	97 fb       	bst	r25, 7
    6736:	3e f4       	brtc	.+14     	; 0x6746 <__floatsisf+0x12>
    6738:	90 95       	com	r25
    673a:	80 95       	com	r24
    673c:	70 95       	com	r23
    673e:	61 95       	neg	r22
    6740:	7f 4f       	sbci	r23, 0xFF	; 255
    6742:	8f 4f       	sbci	r24, 0xFF	; 255
    6744:	9f 4f       	sbci	r25, 0xFF	; 255
    6746:	99 23       	and	r25, r25
    6748:	a9 f0       	breq	.+42     	; 0x6774 <__floatsisf+0x40>
    674a:	f9 2f       	mov	r31, r25
    674c:	96 e9       	ldi	r25, 0x96	; 150
    674e:	bb 27       	eor	r27, r27
    6750:	93 95       	inc	r25
    6752:	f6 95       	lsr	r31
    6754:	87 95       	ror	r24
    6756:	77 95       	ror	r23
    6758:	67 95       	ror	r22
    675a:	b7 95       	ror	r27
    675c:	f1 11       	cpse	r31, r1
    675e:	f8 cf       	rjmp	.-16     	; 0x6750 <__floatsisf+0x1c>
    6760:	fa f4       	brpl	.+62     	; 0x67a0 <__floatsisf+0x6c>
    6762:	bb 0f       	add	r27, r27
    6764:	11 f4       	brne	.+4      	; 0x676a <__floatsisf+0x36>
    6766:	60 ff       	sbrs	r22, 0
    6768:	1b c0       	rjmp	.+54     	; 0x67a0 <__floatsisf+0x6c>
    676a:	6f 5f       	subi	r22, 0xFF	; 255
    676c:	7f 4f       	sbci	r23, 0xFF	; 255
    676e:	8f 4f       	sbci	r24, 0xFF	; 255
    6770:	9f 4f       	sbci	r25, 0xFF	; 255
    6772:	16 c0       	rjmp	.+44     	; 0x67a0 <__floatsisf+0x6c>
    6774:	88 23       	and	r24, r24
    6776:	11 f0       	breq	.+4      	; 0x677c <__floatsisf+0x48>
    6778:	96 e9       	ldi	r25, 0x96	; 150
    677a:	11 c0       	rjmp	.+34     	; 0x679e <__floatsisf+0x6a>
    677c:	77 23       	and	r23, r23
    677e:	21 f0       	breq	.+8      	; 0x6788 <__floatsisf+0x54>
    6780:	9e e8       	ldi	r25, 0x8E	; 142
    6782:	87 2f       	mov	r24, r23
    6784:	76 2f       	mov	r23, r22
    6786:	05 c0       	rjmp	.+10     	; 0x6792 <__floatsisf+0x5e>
    6788:	66 23       	and	r22, r22
    678a:	71 f0       	breq	.+28     	; 0x67a8 <__floatsisf+0x74>
    678c:	96 e8       	ldi	r25, 0x86	; 134
    678e:	86 2f       	mov	r24, r22
    6790:	70 e0       	ldi	r23, 0x00	; 0
    6792:	60 e0       	ldi	r22, 0x00	; 0
    6794:	2a f0       	brmi	.+10     	; 0x67a0 <__floatsisf+0x6c>
    6796:	9a 95       	dec	r25
    6798:	66 0f       	add	r22, r22
    679a:	77 1f       	adc	r23, r23
    679c:	88 1f       	adc	r24, r24
    679e:	da f7       	brpl	.-10     	; 0x6796 <__floatsisf+0x62>
    67a0:	88 0f       	add	r24, r24
    67a2:	96 95       	lsr	r25
    67a4:	87 95       	ror	r24
    67a6:	97 f9       	bld	r25, 7
    67a8:	08 95       	ret

000067aa <__floatundisf>:
    67aa:	e8 94       	clt

000067ac <__fp_di2sf>:
    67ac:	f9 2f       	mov	r31, r25
    67ae:	96 eb       	ldi	r25, 0xB6	; 182
    67b0:	ff 23       	and	r31, r31
    67b2:	81 f0       	breq	.+32     	; 0x67d4 <__fp_di2sf+0x28>
    67b4:	12 16       	cp	r1, r18
    67b6:	13 06       	cpc	r1, r19
    67b8:	14 06       	cpc	r1, r20
    67ba:	44 0b       	sbc	r20, r20
    67bc:	93 95       	inc	r25
    67be:	f6 95       	lsr	r31
    67c0:	87 95       	ror	r24
    67c2:	77 95       	ror	r23
    67c4:	67 95       	ror	r22
    67c6:	57 95       	ror	r21
    67c8:	40 40       	sbci	r20, 0x00	; 0
    67ca:	ff 23       	and	r31, r31
    67cc:	b9 f7       	brne	.-18     	; 0x67bc <__fp_di2sf+0x10>
    67ce:	1b c0       	rjmp	.+54     	; 0x6806 <__fp_di2sf+0x5a>
    67d0:	99 27       	eor	r25, r25
    67d2:	08 95       	ret
    67d4:	88 23       	and	r24, r24
    67d6:	51 f4       	brne	.+20     	; 0x67ec <__fp_di2sf+0x40>
    67d8:	98 50       	subi	r25, 0x08	; 8
    67da:	d2 f7       	brpl	.-12     	; 0x67d0 <__fp_di2sf+0x24>
    67dc:	87 2b       	or	r24, r23
    67de:	76 2f       	mov	r23, r22
    67e0:	65 2f       	mov	r22, r21
    67e2:	54 2f       	mov	r21, r20
    67e4:	43 2f       	mov	r20, r19
    67e6:	32 2f       	mov	r19, r18
    67e8:	20 e0       	ldi	r18, 0x00	; 0
    67ea:	b1 f3       	breq	.-20     	; 0x67d8 <__fp_di2sf+0x2c>
    67ec:	12 16       	cp	r1, r18
    67ee:	13 06       	cpc	r1, r19
    67f0:	14 06       	cpc	r1, r20
    67f2:	44 0b       	sbc	r20, r20
    67f4:	88 23       	and	r24, r24
    67f6:	3a f0       	brmi	.+14     	; 0x6806 <__fp_di2sf+0x5a>
    67f8:	9a 95       	dec	r25
    67fa:	44 0f       	add	r20, r20
    67fc:	55 1f       	adc	r21, r21
    67fe:	66 1f       	adc	r22, r22
    6800:	77 1f       	adc	r23, r23
    6802:	88 1f       	adc	r24, r24
    6804:	ca f7       	brpl	.-14     	; 0x67f8 <__fp_di2sf+0x4c>
    6806:	55 23       	and	r21, r21
    6808:	4a f4       	brpl	.+18     	; 0x681c <__fp_di2sf+0x70>
    680a:	44 0f       	add	r20, r20
    680c:	55 1f       	adc	r21, r21
    680e:	11 f4       	brne	.+4      	; 0x6814 <__fp_di2sf+0x68>
    6810:	60 ff       	sbrs	r22, 0
    6812:	04 c0       	rjmp	.+8      	; 0x681c <__fp_di2sf+0x70>
    6814:	6f 5f       	subi	r22, 0xFF	; 255
    6816:	7f 4f       	sbci	r23, 0xFF	; 255
    6818:	8f 4f       	sbci	r24, 0xFF	; 255
    681a:	9f 4f       	sbci	r25, 0xFF	; 255
    681c:	88 0f       	add	r24, r24
    681e:	96 95       	lsr	r25
    6820:	87 95       	ror	r24
    6822:	97 f9       	bld	r25, 7
    6824:	08 95       	ret

00006826 <__fp_arccos>:
    6826:	df 93       	push	r29
    6828:	cf 93       	push	r28
    682a:	1f 93       	push	r17
    682c:	0f 93       	push	r16
    682e:	8b 01       	movw	r16, r22
    6830:	ec 01       	movw	r28, r24
    6832:	e3 ee       	ldi	r30, 0xE3	; 227
    6834:	f0 e0       	ldi	r31, 0x00	; 0
    6836:	3f d0       	rcall	.+126    	; 0x68b6 <__fp_powser>
    6838:	aa d0       	rcall	.+340    	; 0x698e <__fp_round>
    683a:	98 01       	movw	r18, r16
    683c:	ae 01       	movw	r20, r28
    683e:	8b 01       	movw	r16, r22
    6840:	ec 01       	movw	r28, r24
    6842:	60 e0       	ldi	r22, 0x00	; 0
    6844:	70 e0       	ldi	r23, 0x00	; 0
    6846:	80 e8       	ldi	r24, 0x80	; 128
    6848:	9f e3       	ldi	r25, 0x3F	; 63
    684a:	f4 dd       	rcall	.-1048   	; 0x6434 <__subsf3>
    684c:	af d1       	rcall	.+862    	; 0x6bac <sqrt>
    684e:	98 01       	movw	r18, r16
    6850:	ae 01       	movw	r20, r28
    6852:	0f 91       	pop	r16
    6854:	1f 91       	pop	r17
    6856:	cf 91       	pop	r28
    6858:	df 91       	pop	r29
    685a:	fb c0       	rjmp	.+502    	; 0x6a52 <__mulsf3x>

0000685c <__fp_cmp>:
    685c:	99 0f       	add	r25, r25
    685e:	00 08       	sbc	r0, r0
    6860:	55 0f       	add	r21, r21
    6862:	aa 0b       	sbc	r26, r26
    6864:	e0 e8       	ldi	r30, 0x80	; 128
    6866:	fe ef       	ldi	r31, 0xFE	; 254
    6868:	16 16       	cp	r1, r22
    686a:	17 06       	cpc	r1, r23
    686c:	e8 07       	cpc	r30, r24
    686e:	f9 07       	cpc	r31, r25
    6870:	c0 f0       	brcs	.+48     	; 0x68a2 <__fp_cmp+0x46>
    6872:	12 16       	cp	r1, r18
    6874:	13 06       	cpc	r1, r19
    6876:	e4 07       	cpc	r30, r20
    6878:	f5 07       	cpc	r31, r21
    687a:	98 f0       	brcs	.+38     	; 0x68a2 <__fp_cmp+0x46>
    687c:	62 1b       	sub	r22, r18
    687e:	73 0b       	sbc	r23, r19
    6880:	84 0b       	sbc	r24, r20
    6882:	95 0b       	sbc	r25, r21
    6884:	39 f4       	brne	.+14     	; 0x6894 <__fp_cmp+0x38>
    6886:	0a 26       	eor	r0, r26
    6888:	61 f0       	breq	.+24     	; 0x68a2 <__fp_cmp+0x46>
    688a:	23 2b       	or	r18, r19
    688c:	24 2b       	or	r18, r20
    688e:	25 2b       	or	r18, r21
    6890:	21 f4       	brne	.+8      	; 0x689a <__fp_cmp+0x3e>
    6892:	08 95       	ret
    6894:	0a 26       	eor	r0, r26
    6896:	09 f4       	brne	.+2      	; 0x689a <__fp_cmp+0x3e>
    6898:	a1 40       	sbci	r26, 0x01	; 1
    689a:	a6 95       	lsr	r26
    689c:	8f ef       	ldi	r24, 0xFF	; 255
    689e:	81 1d       	adc	r24, r1
    68a0:	81 1d       	adc	r24, r1
    68a2:	08 95       	ret

000068a4 <__fp_inf>:
    68a4:	97 f9       	bld	r25, 7
    68a6:	9f 67       	ori	r25, 0x7F	; 127
    68a8:	80 e8       	ldi	r24, 0x80	; 128
    68aa:	70 e0       	ldi	r23, 0x00	; 0
    68ac:	60 e0       	ldi	r22, 0x00	; 0
    68ae:	08 95       	ret

000068b0 <__fp_nan>:
    68b0:	9f ef       	ldi	r25, 0xFF	; 255
    68b2:	80 ec       	ldi	r24, 0xC0	; 192
    68b4:	08 95       	ret

000068b6 <__fp_powser>:
    68b6:	df 93       	push	r29
    68b8:	cf 93       	push	r28
    68ba:	1f 93       	push	r17
    68bc:	0f 93       	push	r16
    68be:	ff 92       	push	r15
    68c0:	ef 92       	push	r14
    68c2:	df 92       	push	r13
    68c4:	7b 01       	movw	r14, r22
    68c6:	8c 01       	movw	r16, r24
    68c8:	68 94       	set
    68ca:	05 c0       	rjmp	.+10     	; 0x68d6 <__fp_powser+0x20>
    68cc:	da 2e       	mov	r13, r26
    68ce:	ef 01       	movw	r28, r30
    68d0:	c0 d0       	rcall	.+384    	; 0x6a52 <__mulsf3x>
    68d2:	fe 01       	movw	r30, r28
    68d4:	e8 94       	clt
    68d6:	a5 91       	lpm	r26, Z+
    68d8:	25 91       	lpm	r18, Z+
    68da:	35 91       	lpm	r19, Z+
    68dc:	45 91       	lpm	r20, Z+
    68de:	55 91       	lpm	r21, Z+
    68e0:	ae f3       	brts	.-22     	; 0x68cc <__fp_powser+0x16>
    68e2:	ef 01       	movw	r28, r30
    68e4:	b9 dd       	rcall	.-1166   	; 0x6458 <__addsf3x>
    68e6:	fe 01       	movw	r30, r28
    68e8:	97 01       	movw	r18, r14
    68ea:	a8 01       	movw	r20, r16
    68ec:	da 94       	dec	r13
    68ee:	79 f7       	brne	.-34     	; 0x68ce <__fp_powser+0x18>
    68f0:	df 90       	pop	r13
    68f2:	ef 90       	pop	r14
    68f4:	ff 90       	pop	r15
    68f6:	0f 91       	pop	r16
    68f8:	1f 91       	pop	r17
    68fa:	cf 91       	pop	r28
    68fc:	df 91       	pop	r29
    68fe:	08 95       	ret

00006900 <__fp_powsodd>:
    6900:	9f 93       	push	r25
    6902:	8f 93       	push	r24
    6904:	7f 93       	push	r23
    6906:	6f 93       	push	r22
    6908:	ff 93       	push	r31
    690a:	ef 93       	push	r30
    690c:	9b 01       	movw	r18, r22
    690e:	ac 01       	movw	r20, r24
    6910:	94 d0       	rcall	.+296    	; 0x6a3a <__mulsf3>
    6912:	ef 91       	pop	r30
    6914:	ff 91       	pop	r31
    6916:	cf df       	rcall	.-98     	; 0x68b6 <__fp_powser>
    6918:	2f 91       	pop	r18
    691a:	3f 91       	pop	r19
    691c:	4f 91       	pop	r20
    691e:	5f 91       	pop	r21
    6920:	8c c0       	rjmp	.+280    	; 0x6a3a <__mulsf3>

00006922 <__fp_pscA>:
    6922:	00 24       	eor	r0, r0
    6924:	0a 94       	dec	r0
    6926:	16 16       	cp	r1, r22
    6928:	17 06       	cpc	r1, r23
    692a:	18 06       	cpc	r1, r24
    692c:	09 06       	cpc	r0, r25
    692e:	08 95       	ret

00006930 <__fp_pscB>:
    6930:	00 24       	eor	r0, r0
    6932:	0a 94       	dec	r0
    6934:	12 16       	cp	r1, r18
    6936:	13 06       	cpc	r1, r19
    6938:	14 06       	cpc	r1, r20
    693a:	05 06       	cpc	r0, r21
    693c:	08 95       	ret
    693e:	b8 cf       	rjmp	.-144    	; 0x68b0 <__fp_nan>

00006940 <__fp_rempio2>:
    6940:	50 d0       	rcall	.+160    	; 0x69e2 <__fp_splitA>
    6942:	e8 f3       	brcs	.-6      	; 0x693e <__fp_pscB+0xe>
    6944:	e8 94       	clt
    6946:	e0 e0       	ldi	r30, 0x00	; 0
    6948:	bb 27       	eor	r27, r27
    694a:	9f 57       	subi	r25, 0x7F	; 127
    694c:	f0 f0       	brcs	.+60     	; 0x698a <__fp_rempio2+0x4a>
    694e:	2a ed       	ldi	r18, 0xDA	; 218
    6950:	3f e0       	ldi	r19, 0x0F	; 15
    6952:	49 ec       	ldi	r20, 0xC9	; 201
    6954:	06 c0       	rjmp	.+12     	; 0x6962 <__fp_rempio2+0x22>
    6956:	ee 0f       	add	r30, r30
    6958:	bb 0f       	add	r27, r27
    695a:	66 1f       	adc	r22, r22
    695c:	77 1f       	adc	r23, r23
    695e:	88 1f       	adc	r24, r24
    6960:	28 f0       	brcs	.+10     	; 0x696c <__fp_rempio2+0x2c>
    6962:	b2 3a       	cpi	r27, 0xA2	; 162
    6964:	62 07       	cpc	r22, r18
    6966:	73 07       	cpc	r23, r19
    6968:	84 07       	cpc	r24, r20
    696a:	28 f0       	brcs	.+10     	; 0x6976 <__fp_rempio2+0x36>
    696c:	b2 5a       	subi	r27, 0xA2	; 162
    696e:	62 0b       	sbc	r22, r18
    6970:	73 0b       	sbc	r23, r19
    6972:	84 0b       	sbc	r24, r20
    6974:	e3 95       	inc	r30
    6976:	9a 95       	dec	r25
    6978:	72 f7       	brpl	.-36     	; 0x6956 <__fp_rempio2+0x16>
    697a:	80 38       	cpi	r24, 0x80	; 128
    697c:	30 f4       	brcc	.+12     	; 0x698a <__fp_rempio2+0x4a>
    697e:	9a 95       	dec	r25
    6980:	bb 0f       	add	r27, r27
    6982:	66 1f       	adc	r22, r22
    6984:	77 1f       	adc	r23, r23
    6986:	88 1f       	adc	r24, r24
    6988:	d2 f7       	brpl	.-12     	; 0x697e <__fp_rempio2+0x3e>
    698a:	90 48       	sbci	r25, 0x80	; 128
    698c:	83 c1       	rjmp	.+774    	; 0x6c94 <__fp_mpack_finite>

0000698e <__fp_round>:
    698e:	09 2e       	mov	r0, r25
    6990:	03 94       	inc	r0
    6992:	00 0c       	add	r0, r0
    6994:	11 f4       	brne	.+4      	; 0x699a <__fp_round+0xc>
    6996:	88 23       	and	r24, r24
    6998:	52 f0       	brmi	.+20     	; 0x69ae <__fp_round+0x20>
    699a:	bb 0f       	add	r27, r27
    699c:	40 f4       	brcc	.+16     	; 0x69ae <__fp_round+0x20>
    699e:	bf 2b       	or	r27, r31
    69a0:	11 f4       	brne	.+4      	; 0x69a6 <__fp_round+0x18>
    69a2:	60 ff       	sbrs	r22, 0
    69a4:	04 c0       	rjmp	.+8      	; 0x69ae <__fp_round+0x20>
    69a6:	6f 5f       	subi	r22, 0xFF	; 255
    69a8:	7f 4f       	sbci	r23, 0xFF	; 255
    69aa:	8f 4f       	sbci	r24, 0xFF	; 255
    69ac:	9f 4f       	sbci	r25, 0xFF	; 255
    69ae:	08 95       	ret

000069b0 <__fp_sinus>:
    69b0:	ef 93       	push	r30
    69b2:	e0 ff       	sbrs	r30, 0
    69b4:	06 c0       	rjmp	.+12     	; 0x69c2 <__fp_sinus+0x12>
    69b6:	a2 ea       	ldi	r26, 0xA2	; 162
    69b8:	2a ed       	ldi	r18, 0xDA	; 218
    69ba:	3f e0       	ldi	r19, 0x0F	; 15
    69bc:	49 ec       	ldi	r20, 0xC9	; 201
    69be:	5f eb       	ldi	r21, 0xBF	; 191
    69c0:	4b dd       	rcall	.-1386   	; 0x6458 <__addsf3x>
    69c2:	e5 df       	rcall	.-54     	; 0x698e <__fp_round>
    69c4:	0f 90       	pop	r0
    69c6:	03 94       	inc	r0
    69c8:	01 fc       	sbrc	r0, 1
    69ca:	90 58       	subi	r25, 0x80	; 128
    69cc:	eb e0       	ldi	r30, 0x0B	; 11
    69ce:	f1 e0       	ldi	r31, 0x01	; 1
    69d0:	97 cf       	rjmp	.-210    	; 0x6900 <__fp_powsodd>

000069d2 <__fp_split3>:
    69d2:	57 fd       	sbrc	r21, 7
    69d4:	90 58       	subi	r25, 0x80	; 128
    69d6:	44 0f       	add	r20, r20
    69d8:	55 1f       	adc	r21, r21
    69da:	59 f0       	breq	.+22     	; 0x69f2 <__fp_splitA+0x10>
    69dc:	5f 3f       	cpi	r21, 0xFF	; 255
    69de:	71 f0       	breq	.+28     	; 0x69fc <__fp_splitA+0x1a>
    69e0:	47 95       	ror	r20

000069e2 <__fp_splitA>:
    69e2:	88 0f       	add	r24, r24
    69e4:	97 fb       	bst	r25, 7
    69e6:	99 1f       	adc	r25, r25
    69e8:	61 f0       	breq	.+24     	; 0x6a02 <__fp_splitA+0x20>
    69ea:	9f 3f       	cpi	r25, 0xFF	; 255
    69ec:	79 f0       	breq	.+30     	; 0x6a0c <__fp_splitA+0x2a>
    69ee:	87 95       	ror	r24
    69f0:	08 95       	ret
    69f2:	12 16       	cp	r1, r18
    69f4:	13 06       	cpc	r1, r19
    69f6:	14 06       	cpc	r1, r20
    69f8:	55 1f       	adc	r21, r21
    69fa:	f2 cf       	rjmp	.-28     	; 0x69e0 <__fp_split3+0xe>
    69fc:	46 95       	lsr	r20
    69fe:	f1 df       	rcall	.-30     	; 0x69e2 <__fp_splitA>
    6a00:	08 c0       	rjmp	.+16     	; 0x6a12 <__fp_splitA+0x30>
    6a02:	16 16       	cp	r1, r22
    6a04:	17 06       	cpc	r1, r23
    6a06:	18 06       	cpc	r1, r24
    6a08:	99 1f       	adc	r25, r25
    6a0a:	f1 cf       	rjmp	.-30     	; 0x69ee <__fp_splitA+0xc>
    6a0c:	86 95       	lsr	r24
    6a0e:	71 05       	cpc	r23, r1
    6a10:	61 05       	cpc	r22, r1
    6a12:	08 94       	sec
    6a14:	08 95       	ret

00006a16 <__fp_zero>:
    6a16:	e8 94       	clt

00006a18 <__fp_szero>:
    6a18:	bb 27       	eor	r27, r27
    6a1a:	66 27       	eor	r22, r22
    6a1c:	77 27       	eor	r23, r23
    6a1e:	cb 01       	movw	r24, r22
    6a20:	97 f9       	bld	r25, 7
    6a22:	08 95       	ret

00006a24 <__gesf2>:
    6a24:	1b df       	rcall	.-458    	; 0x685c <__fp_cmp>
    6a26:	08 f4       	brcc	.+2      	; 0x6a2a <__gesf2+0x6>
    6a28:	8f ef       	ldi	r24, 0xFF	; 255
    6a2a:	08 95       	ret

00006a2c <inverse>:
    6a2c:	9b 01       	movw	r18, r22
    6a2e:	ac 01       	movw	r20, r24
    6a30:	60 e0       	ldi	r22, 0x00	; 0
    6a32:	70 e0       	ldi	r23, 0x00	; 0
    6a34:	80 e8       	ldi	r24, 0x80	; 128
    6a36:	9f e3       	ldi	r25, 0x3F	; 63
    6a38:	e2 cd       	rjmp	.-1084   	; 0x65fe <__divsf3>

00006a3a <__mulsf3>:
    6a3a:	0b d0       	rcall	.+22     	; 0x6a52 <__mulsf3x>
    6a3c:	a8 cf       	rjmp	.-176    	; 0x698e <__fp_round>
    6a3e:	71 df       	rcall	.-286    	; 0x6922 <__fp_pscA>
    6a40:	28 f0       	brcs	.+10     	; 0x6a4c <__mulsf3+0x12>
    6a42:	76 df       	rcall	.-276    	; 0x6930 <__fp_pscB>
    6a44:	18 f0       	brcs	.+6      	; 0x6a4c <__mulsf3+0x12>
    6a46:	95 23       	and	r25, r21
    6a48:	09 f0       	breq	.+2      	; 0x6a4c <__mulsf3+0x12>
    6a4a:	2c cf       	rjmp	.-424    	; 0x68a4 <__fp_inf>
    6a4c:	31 cf       	rjmp	.-414    	; 0x68b0 <__fp_nan>
    6a4e:	11 24       	eor	r1, r1
    6a50:	e3 cf       	rjmp	.-58     	; 0x6a18 <__fp_szero>

00006a52 <__mulsf3x>:
    6a52:	bf df       	rcall	.-130    	; 0x69d2 <__fp_split3>
    6a54:	a0 f3       	brcs	.-24     	; 0x6a3e <__mulsf3+0x4>

00006a56 <__mulsf3_pse>:
    6a56:	95 9f       	mul	r25, r21
    6a58:	d1 f3       	breq	.-12     	; 0x6a4e <__mulsf3+0x14>
    6a5a:	95 0f       	add	r25, r21
    6a5c:	50 e0       	ldi	r21, 0x00	; 0
    6a5e:	55 1f       	adc	r21, r21
    6a60:	62 9f       	mul	r22, r18
    6a62:	f0 01       	movw	r30, r0
    6a64:	72 9f       	mul	r23, r18
    6a66:	bb 27       	eor	r27, r27
    6a68:	f0 0d       	add	r31, r0
    6a6a:	b1 1d       	adc	r27, r1
    6a6c:	63 9f       	mul	r22, r19
    6a6e:	aa 27       	eor	r26, r26
    6a70:	f0 0d       	add	r31, r0
    6a72:	b1 1d       	adc	r27, r1
    6a74:	aa 1f       	adc	r26, r26
    6a76:	64 9f       	mul	r22, r20
    6a78:	66 27       	eor	r22, r22
    6a7a:	b0 0d       	add	r27, r0
    6a7c:	a1 1d       	adc	r26, r1
    6a7e:	66 1f       	adc	r22, r22
    6a80:	82 9f       	mul	r24, r18
    6a82:	22 27       	eor	r18, r18
    6a84:	b0 0d       	add	r27, r0
    6a86:	a1 1d       	adc	r26, r1
    6a88:	62 1f       	adc	r22, r18
    6a8a:	73 9f       	mul	r23, r19
    6a8c:	b0 0d       	add	r27, r0
    6a8e:	a1 1d       	adc	r26, r1
    6a90:	62 1f       	adc	r22, r18
    6a92:	83 9f       	mul	r24, r19
    6a94:	a0 0d       	add	r26, r0
    6a96:	61 1d       	adc	r22, r1
    6a98:	22 1f       	adc	r18, r18
    6a9a:	74 9f       	mul	r23, r20
    6a9c:	33 27       	eor	r19, r19
    6a9e:	a0 0d       	add	r26, r0
    6aa0:	61 1d       	adc	r22, r1
    6aa2:	23 1f       	adc	r18, r19
    6aa4:	84 9f       	mul	r24, r20
    6aa6:	60 0d       	add	r22, r0
    6aa8:	21 1d       	adc	r18, r1
    6aaa:	82 2f       	mov	r24, r18
    6aac:	76 2f       	mov	r23, r22
    6aae:	6a 2f       	mov	r22, r26
    6ab0:	11 24       	eor	r1, r1
    6ab2:	9f 57       	subi	r25, 0x7F	; 127
    6ab4:	50 40       	sbci	r21, 0x00	; 0
    6ab6:	8a f0       	brmi	.+34     	; 0x6ada <__mulsf3_pse+0x84>
    6ab8:	e1 f0       	breq	.+56     	; 0x6af2 <__mulsf3_pse+0x9c>
    6aba:	88 23       	and	r24, r24
    6abc:	4a f0       	brmi	.+18     	; 0x6ad0 <__mulsf3_pse+0x7a>
    6abe:	ee 0f       	add	r30, r30
    6ac0:	ff 1f       	adc	r31, r31
    6ac2:	bb 1f       	adc	r27, r27
    6ac4:	66 1f       	adc	r22, r22
    6ac6:	77 1f       	adc	r23, r23
    6ac8:	88 1f       	adc	r24, r24
    6aca:	91 50       	subi	r25, 0x01	; 1
    6acc:	50 40       	sbci	r21, 0x00	; 0
    6ace:	a9 f7       	brne	.-22     	; 0x6aba <__mulsf3_pse+0x64>
    6ad0:	9e 3f       	cpi	r25, 0xFE	; 254
    6ad2:	51 05       	cpc	r21, r1
    6ad4:	70 f0       	brcs	.+28     	; 0x6af2 <__mulsf3_pse+0x9c>
    6ad6:	e6 ce       	rjmp	.-564    	; 0x68a4 <__fp_inf>
    6ad8:	9f cf       	rjmp	.-194    	; 0x6a18 <__fp_szero>
    6ada:	5f 3f       	cpi	r21, 0xFF	; 255
    6adc:	ec f3       	brlt	.-6      	; 0x6ad8 <__mulsf3_pse+0x82>
    6ade:	98 3e       	cpi	r25, 0xE8	; 232
    6ae0:	dc f3       	brlt	.-10     	; 0x6ad8 <__mulsf3_pse+0x82>
    6ae2:	86 95       	lsr	r24
    6ae4:	77 95       	ror	r23
    6ae6:	67 95       	ror	r22
    6ae8:	b7 95       	ror	r27
    6aea:	f7 95       	ror	r31
    6aec:	e7 95       	ror	r30
    6aee:	9f 5f       	subi	r25, 0xFF	; 255
    6af0:	c1 f7       	brne	.-16     	; 0x6ae2 <__mulsf3_pse+0x8c>
    6af2:	fe 2b       	or	r31, r30
    6af4:	88 0f       	add	r24, r24
    6af6:	91 1d       	adc	r25, r1
    6af8:	96 95       	lsr	r25
    6afa:	87 95       	ror	r24
    6afc:	97 f9       	bld	r25, 7
    6afe:	08 95       	ret

00006b00 <pow>:
    6b00:	fa 01       	movw	r30, r20
    6b02:	ee 0f       	add	r30, r30
    6b04:	ff 1f       	adc	r31, r31
    6b06:	30 96       	adiw	r30, 0x00	; 0
    6b08:	21 05       	cpc	r18, r1
    6b0a:	31 05       	cpc	r19, r1
    6b0c:	99 f1       	breq	.+102    	; 0x6b74 <pow+0x74>
    6b0e:	61 15       	cp	r22, r1
    6b10:	71 05       	cpc	r23, r1
    6b12:	61 f4       	brne	.+24     	; 0x6b2c <pow+0x2c>
    6b14:	80 38       	cpi	r24, 0x80	; 128
    6b16:	bf e3       	ldi	r27, 0x3F	; 63
    6b18:	9b 07       	cpc	r25, r27
    6b1a:	49 f1       	breq	.+82     	; 0x6b6e <pow+0x6e>
    6b1c:	68 94       	set
    6b1e:	90 38       	cpi	r25, 0x80	; 128
    6b20:	81 05       	cpc	r24, r1
    6b22:	61 f0       	breq	.+24     	; 0x6b3c <pow+0x3c>
    6b24:	80 38       	cpi	r24, 0x80	; 128
    6b26:	bf ef       	ldi	r27, 0xFF	; 255
    6b28:	9b 07       	cpc	r25, r27
    6b2a:	41 f0       	breq	.+16     	; 0x6b3c <pow+0x3c>
    6b2c:	99 23       	and	r25, r25
    6b2e:	42 f5       	brpl	.+80     	; 0x6b80 <pow+0x80>
    6b30:	ff 3f       	cpi	r31, 0xFF	; 255
    6b32:	e1 05       	cpc	r30, r1
    6b34:	31 05       	cpc	r19, r1
    6b36:	21 05       	cpc	r18, r1
    6b38:	11 f1       	breq	.+68     	; 0x6b7e <pow+0x7e>
    6b3a:	e8 94       	clt
    6b3c:	08 94       	sec
    6b3e:	e7 95       	ror	r30
    6b40:	d9 01       	movw	r26, r18
    6b42:	aa 23       	and	r26, r26
    6b44:	29 f4       	brne	.+10     	; 0x6b50 <pow+0x50>
    6b46:	ab 2f       	mov	r26, r27
    6b48:	be 2f       	mov	r27, r30
    6b4a:	f8 5f       	subi	r31, 0xF8	; 248
    6b4c:	d0 f3       	brcs	.-12     	; 0x6b42 <pow+0x42>
    6b4e:	10 c0       	rjmp	.+32     	; 0x6b70 <pow+0x70>
    6b50:	ff 5f       	subi	r31, 0xFF	; 255
    6b52:	70 f4       	brcc	.+28     	; 0x6b70 <pow+0x70>
    6b54:	a6 95       	lsr	r26
    6b56:	e0 f7       	brcc	.-8      	; 0x6b50 <pow+0x50>
    6b58:	f7 39       	cpi	r31, 0x97	; 151
    6b5a:	50 f0       	brcs	.+20     	; 0x6b70 <pow+0x70>
    6b5c:	19 f0       	breq	.+6      	; 0x6b64 <pow+0x64>
    6b5e:	ff 3a       	cpi	r31, 0xAF	; 175
    6b60:	38 f4       	brcc	.+14     	; 0x6b70 <pow+0x70>
    6b62:	9f 77       	andi	r25, 0x7F	; 127
    6b64:	9f 93       	push	r25
    6b66:	0c d0       	rcall	.+24     	; 0x6b80 <pow+0x80>
    6b68:	0f 90       	pop	r0
    6b6a:	07 fc       	sbrc	r0, 7
    6b6c:	90 58       	subi	r25, 0x80	; 128
    6b6e:	08 95       	ret
    6b70:	3e f0       	brts	.+14     	; 0x6b80 <pow+0x80>
    6b72:	9e ce       	rjmp	.-708    	; 0x68b0 <__fp_nan>
    6b74:	60 e0       	ldi	r22, 0x00	; 0
    6b76:	70 e0       	ldi	r23, 0x00	; 0
    6b78:	80 e8       	ldi	r24, 0x80	; 128
    6b7a:	9f e3       	ldi	r25, 0x3F	; 63
    6b7c:	08 95       	ret
    6b7e:	4f e7       	ldi	r20, 0x7F	; 127
    6b80:	9f 77       	andi	r25, 0x7F	; 127
    6b82:	5f 93       	push	r21
    6b84:	4f 93       	push	r20
    6b86:	3f 93       	push	r19
    6b88:	2f 93       	push	r18
    6b8a:	d2 d0       	rcall	.+420    	; 0x6d30 <log>
    6b8c:	2f 91       	pop	r18
    6b8e:	3f 91       	pop	r19
    6b90:	4f 91       	pop	r20
    6b92:	5f 91       	pop	r21
    6b94:	52 df       	rcall	.-348    	; 0x6a3a <__mulsf3>
    6b96:	50 c0       	rjmp	.+160    	; 0x6c38 <exp>

00006b98 <sin>:
    6b98:	9f 93       	push	r25
    6b9a:	d2 de       	rcall	.-604    	; 0x6940 <__fp_rempio2>
    6b9c:	0f 90       	pop	r0
    6b9e:	07 fc       	sbrc	r0, 7
    6ba0:	ee 5f       	subi	r30, 0xFE	; 254
    6ba2:	06 cf       	rjmp	.-500    	; 0x69b0 <__fp_sinus>
    6ba4:	11 f4       	brne	.+4      	; 0x6baa <sin+0x12>
    6ba6:	0e f4       	brtc	.+2      	; 0x6baa <sin+0x12>
    6ba8:	83 ce       	rjmp	.-762    	; 0x68b0 <__fp_nan>
    6baa:	72 c0       	rjmp	.+228    	; 0x6c90 <__fp_mpack>

00006bac <sqrt>:
    6bac:	1a df       	rcall	.-460    	; 0x69e2 <__fp_splitA>
    6bae:	d0 f3       	brcs	.-12     	; 0x6ba4 <sin+0xc>
    6bb0:	99 23       	and	r25, r25
    6bb2:	d9 f3       	breq	.-10     	; 0x6baa <sin+0x12>
    6bb4:	ce f3       	brts	.-14     	; 0x6ba8 <sin+0x10>
    6bb6:	9f 57       	subi	r25, 0x7F	; 127
    6bb8:	55 0b       	sbc	r21, r21
    6bba:	87 ff       	sbrs	r24, 7
    6bbc:	77 d0       	rcall	.+238    	; 0x6cac <__fp_norm2>
    6bbe:	00 24       	eor	r0, r0
    6bc0:	a0 e6       	ldi	r26, 0x60	; 96
    6bc2:	40 ea       	ldi	r20, 0xA0	; 160
    6bc4:	90 01       	movw	r18, r0
    6bc6:	80 58       	subi	r24, 0x80	; 128
    6bc8:	56 95       	lsr	r21
    6bca:	97 95       	ror	r25
    6bcc:	28 f4       	brcc	.+10     	; 0x6bd8 <sqrt+0x2c>
    6bce:	80 5c       	subi	r24, 0xC0	; 192
    6bd0:	66 0f       	add	r22, r22
    6bd2:	77 1f       	adc	r23, r23
    6bd4:	88 1f       	adc	r24, r24
    6bd6:	20 f0       	brcs	.+8      	; 0x6be0 <sqrt+0x34>
    6bd8:	26 17       	cp	r18, r22
    6bda:	37 07       	cpc	r19, r23
    6bdc:	48 07       	cpc	r20, r24
    6bde:	30 f4       	brcc	.+12     	; 0x6bec <sqrt+0x40>
    6be0:	62 1b       	sub	r22, r18
    6be2:	73 0b       	sbc	r23, r19
    6be4:	84 0b       	sbc	r24, r20
    6be6:	20 29       	or	r18, r0
    6be8:	31 29       	or	r19, r1
    6bea:	4a 2b       	or	r20, r26
    6bec:	a6 95       	lsr	r26
    6bee:	17 94       	ror	r1
    6bf0:	07 94       	ror	r0
    6bf2:	20 25       	eor	r18, r0
    6bf4:	31 25       	eor	r19, r1
    6bf6:	4a 27       	eor	r20, r26
    6bf8:	58 f7       	brcc	.-42     	; 0x6bd0 <sqrt+0x24>
    6bfa:	66 0f       	add	r22, r22
    6bfc:	77 1f       	adc	r23, r23
    6bfe:	88 1f       	adc	r24, r24
    6c00:	20 f0       	brcs	.+8      	; 0x6c0a <sqrt+0x5e>
    6c02:	26 17       	cp	r18, r22
    6c04:	37 07       	cpc	r19, r23
    6c06:	48 07       	cpc	r20, r24
    6c08:	30 f4       	brcc	.+12     	; 0x6c16 <sqrt+0x6a>
    6c0a:	62 0b       	sbc	r22, r18
    6c0c:	73 0b       	sbc	r23, r19
    6c0e:	84 0b       	sbc	r24, r20
    6c10:	20 0d       	add	r18, r0
    6c12:	31 1d       	adc	r19, r1
    6c14:	41 1d       	adc	r20, r1
    6c16:	a0 95       	com	r26
    6c18:	81 f7       	brne	.-32     	; 0x6bfa <sqrt+0x4e>
    6c1a:	b9 01       	movw	r22, r18
    6c1c:	84 2f       	mov	r24, r20
    6c1e:	91 58       	subi	r25, 0x81	; 129
    6c20:	88 0f       	add	r24, r24
    6c22:	96 95       	lsr	r25
    6c24:	87 95       	ror	r24
    6c26:	08 95       	ret

00006c28 <square>:
    6c28:	9b 01       	movw	r18, r22
    6c2a:	ac 01       	movw	r20, r24
    6c2c:	06 cf       	rjmp	.-500    	; 0x6a3a <__mulsf3>
    6c2e:	19 f4       	brne	.+6      	; 0x6c36 <square+0xe>
    6c30:	0e f0       	brts	.+2      	; 0x6c34 <square+0xc>
    6c32:	38 ce       	rjmp	.-912    	; 0x68a4 <__fp_inf>
    6c34:	f0 ce       	rjmp	.-544    	; 0x6a16 <__fp_zero>
    6c36:	3c ce       	rjmp	.-904    	; 0x68b0 <__fp_nan>

00006c38 <exp>:
    6c38:	d4 de       	rcall	.-600    	; 0x69e2 <__fp_splitA>
    6c3a:	c8 f3       	brcs	.-14     	; 0x6c2e <square+0x6>
    6c3c:	96 38       	cpi	r25, 0x86	; 134
    6c3e:	c0 f7       	brcc	.-16     	; 0x6c30 <square+0x8>
    6c40:	07 f8       	bld	r0, 7
    6c42:	0f 92       	push	r0
    6c44:	e8 94       	clt
    6c46:	2b e3       	ldi	r18, 0x3B	; 59
    6c48:	3a ea       	ldi	r19, 0xAA	; 170
    6c4a:	48 eb       	ldi	r20, 0xB8	; 184
    6c4c:	5f e7       	ldi	r21, 0x7F	; 127
    6c4e:	03 df       	rcall	.-506    	; 0x6a56 <__mulsf3_pse>
    6c50:	0f 92       	push	r0
    6c52:	0f 92       	push	r0
    6c54:	0f 92       	push	r0
    6c56:	4d b7       	in	r20, 0x3d	; 61
    6c58:	5e b7       	in	r21, 0x3e	; 62
    6c5a:	0f 92       	push	r0
    6c5c:	a9 d0       	rcall	.+338    	; 0x6db0 <modf>
    6c5e:	e9 e2       	ldi	r30, 0x29	; 41
    6c60:	f1 e0       	ldi	r31, 0x01	; 1
    6c62:	29 de       	rcall	.-942    	; 0x68b6 <__fp_powser>
    6c64:	4f 91       	pop	r20
    6c66:	5f 91       	pop	r21
    6c68:	ef 91       	pop	r30
    6c6a:	ff 91       	pop	r31
    6c6c:	e5 95       	asr	r30
    6c6e:	ee 1f       	adc	r30, r30
    6c70:	ff 1f       	adc	r31, r31
    6c72:	49 f0       	breq	.+18     	; 0x6c86 <exp+0x4e>
    6c74:	fe 57       	subi	r31, 0x7E	; 126
    6c76:	e0 68       	ori	r30, 0x80	; 128
    6c78:	44 27       	eor	r20, r20
    6c7a:	ee 0f       	add	r30, r30
    6c7c:	44 1f       	adc	r20, r20
    6c7e:	fa 95       	dec	r31
    6c80:	e1 f7       	brne	.-8      	; 0x6c7a <exp+0x42>
    6c82:	41 95       	neg	r20
    6c84:	55 0b       	sbc	r21, r21
    6c86:	1b d0       	rcall	.+54     	; 0x6cbe <ldexp>
    6c88:	0f 90       	pop	r0
    6c8a:	07 fe       	sbrs	r0, 7
    6c8c:	cf ce       	rjmp	.-610    	; 0x6a2c <inverse>
    6c8e:	08 95       	ret

00006c90 <__fp_mpack>:
    6c90:	9f 3f       	cpi	r25, 0xFF	; 255
    6c92:	31 f0       	breq	.+12     	; 0x6ca0 <__fp_mpack_finite+0xc>

00006c94 <__fp_mpack_finite>:
    6c94:	91 50       	subi	r25, 0x01	; 1
    6c96:	20 f4       	brcc	.+8      	; 0x6ca0 <__fp_mpack_finite+0xc>
    6c98:	87 95       	ror	r24
    6c9a:	77 95       	ror	r23
    6c9c:	67 95       	ror	r22
    6c9e:	b7 95       	ror	r27
    6ca0:	88 0f       	add	r24, r24
    6ca2:	91 1d       	adc	r25, r1
    6ca4:	96 95       	lsr	r25
    6ca6:	87 95       	ror	r24
    6ca8:	97 f9       	bld	r25, 7
    6caa:	08 95       	ret

00006cac <__fp_norm2>:
    6cac:	91 50       	subi	r25, 0x01	; 1
    6cae:	50 40       	sbci	r21, 0x00	; 0
    6cb0:	66 0f       	add	r22, r22
    6cb2:	77 1f       	adc	r23, r23
    6cb4:	88 1f       	adc	r24, r24
    6cb6:	d2 f7       	brpl	.-12     	; 0x6cac <__fp_norm2>
    6cb8:	08 95       	ret
    6cba:	f4 cd       	rjmp	.-1048   	; 0x68a4 <__fp_inf>
    6cbc:	e9 cf       	rjmp	.-46     	; 0x6c90 <__fp_mpack>

00006cbe <ldexp>:
    6cbe:	91 de       	rcall	.-734    	; 0x69e2 <__fp_splitA>
    6cc0:	e8 f3       	brcs	.-6      	; 0x6cbc <__fp_norm2+0x10>
    6cc2:	99 23       	and	r25, r25
    6cc4:	d9 f3       	breq	.-10     	; 0x6cbc <__fp_norm2+0x10>
    6cc6:	94 0f       	add	r25, r20
    6cc8:	51 1d       	adc	r21, r1
    6cca:	bb f3       	brvs	.-18     	; 0x6cba <__fp_norm2+0xe>
    6ccc:	91 50       	subi	r25, 0x01	; 1
    6cce:	50 40       	sbci	r21, 0x00	; 0
    6cd0:	94 f0       	brlt	.+36     	; 0x6cf6 <ldexp+0x38>
    6cd2:	59 f0       	breq	.+22     	; 0x6cea <ldexp+0x2c>
    6cd4:	88 23       	and	r24, r24
    6cd6:	32 f0       	brmi	.+12     	; 0x6ce4 <ldexp+0x26>
    6cd8:	66 0f       	add	r22, r22
    6cda:	77 1f       	adc	r23, r23
    6cdc:	88 1f       	adc	r24, r24
    6cde:	91 50       	subi	r25, 0x01	; 1
    6ce0:	50 40       	sbci	r21, 0x00	; 0
    6ce2:	c1 f7       	brne	.-16     	; 0x6cd4 <ldexp+0x16>
    6ce4:	9e 3f       	cpi	r25, 0xFE	; 254
    6ce6:	51 05       	cpc	r21, r1
    6ce8:	44 f7       	brge	.-48     	; 0x6cba <__fp_norm2+0xe>
    6cea:	88 0f       	add	r24, r24
    6cec:	91 1d       	adc	r25, r1
    6cee:	96 95       	lsr	r25
    6cf0:	87 95       	ror	r24
    6cf2:	97 f9       	bld	r25, 7
    6cf4:	08 95       	ret
    6cf6:	5f 3f       	cpi	r21, 0xFF	; 255
    6cf8:	ac f0       	brlt	.+42     	; 0x6d24 <ldexp+0x66>
    6cfa:	98 3e       	cpi	r25, 0xE8	; 232
    6cfc:	9c f0       	brlt	.+38     	; 0x6d24 <ldexp+0x66>
    6cfe:	bb 27       	eor	r27, r27
    6d00:	86 95       	lsr	r24
    6d02:	77 95       	ror	r23
    6d04:	67 95       	ror	r22
    6d06:	b7 95       	ror	r27
    6d08:	08 f4       	brcc	.+2      	; 0x6d0c <ldexp+0x4e>
    6d0a:	b1 60       	ori	r27, 0x01	; 1
    6d0c:	93 95       	inc	r25
    6d0e:	c1 f7       	brne	.-16     	; 0x6d00 <ldexp+0x42>
    6d10:	bb 0f       	add	r27, r27
    6d12:	58 f7       	brcc	.-42     	; 0x6cea <ldexp+0x2c>
    6d14:	11 f4       	brne	.+4      	; 0x6d1a <ldexp+0x5c>
    6d16:	60 ff       	sbrs	r22, 0
    6d18:	e8 cf       	rjmp	.-48     	; 0x6cea <ldexp+0x2c>
    6d1a:	6f 5f       	subi	r22, 0xFF	; 255
    6d1c:	7f 4f       	sbci	r23, 0xFF	; 255
    6d1e:	8f 4f       	sbci	r24, 0xFF	; 255
    6d20:	9f 4f       	sbci	r25, 0xFF	; 255
    6d22:	e3 cf       	rjmp	.-58     	; 0x6cea <ldexp+0x2c>
    6d24:	79 ce       	rjmp	.-782    	; 0x6a18 <__fp_szero>
    6d26:	0e f0       	brts	.+2      	; 0x6d2a <ldexp+0x6c>
    6d28:	b3 cf       	rjmp	.-154    	; 0x6c90 <__fp_mpack>
    6d2a:	c2 cd       	rjmp	.-1148   	; 0x68b0 <__fp_nan>
    6d2c:	68 94       	set
    6d2e:	ba cd       	rjmp	.-1164   	; 0x68a4 <__fp_inf>

00006d30 <log>:
    6d30:	58 de       	rcall	.-848    	; 0x69e2 <__fp_splitA>
    6d32:	c8 f3       	brcs	.-14     	; 0x6d26 <ldexp+0x68>
    6d34:	99 23       	and	r25, r25
    6d36:	d1 f3       	breq	.-12     	; 0x6d2c <ldexp+0x6e>
    6d38:	c6 f3       	brts	.-16     	; 0x6d2a <ldexp+0x6c>
    6d3a:	df 93       	push	r29
    6d3c:	cf 93       	push	r28
    6d3e:	1f 93       	push	r17
    6d40:	0f 93       	push	r16
    6d42:	ff 92       	push	r15
    6d44:	c9 2f       	mov	r28, r25
    6d46:	dd 27       	eor	r29, r29
    6d48:	88 23       	and	r24, r24
    6d4a:	2a f0       	brmi	.+10     	; 0x6d56 <log+0x26>
    6d4c:	21 97       	sbiw	r28, 0x01	; 1
    6d4e:	66 0f       	add	r22, r22
    6d50:	77 1f       	adc	r23, r23
    6d52:	88 1f       	adc	r24, r24
    6d54:	da f7       	brpl	.-10     	; 0x6d4c <log+0x1c>
    6d56:	20 e0       	ldi	r18, 0x00	; 0
    6d58:	30 e0       	ldi	r19, 0x00	; 0
    6d5a:	40 e8       	ldi	r20, 0x80	; 128
    6d5c:	5f eb       	ldi	r21, 0xBF	; 191
    6d5e:	9f e3       	ldi	r25, 0x3F	; 63
    6d60:	88 39       	cpi	r24, 0x98	; 152
    6d62:	20 f0       	brcs	.+8      	; 0x6d6c <log+0x3c>
    6d64:	80 3e       	cpi	r24, 0xE0	; 224
    6d66:	30 f0       	brcs	.+12     	; 0x6d74 <log+0x44>
    6d68:	21 96       	adiw	r28, 0x01	; 1
    6d6a:	8f 77       	andi	r24, 0x7F	; 127
    6d6c:	64 db       	rcall	.-2360   	; 0x6436 <__addsf3>
    6d6e:	e1 e5       	ldi	r30, 0x51	; 81
    6d70:	f1 e0       	ldi	r31, 0x01	; 1
    6d72:	03 c0       	rjmp	.+6      	; 0x6d7a <log+0x4a>
    6d74:	60 db       	rcall	.-2368   	; 0x6436 <__addsf3>
    6d76:	ee e7       	ldi	r30, 0x7E	; 126
    6d78:	f1 e0       	ldi	r31, 0x01	; 1
    6d7a:	9d dd       	rcall	.-1222   	; 0x68b6 <__fp_powser>
    6d7c:	8b 01       	movw	r16, r22
    6d7e:	be 01       	movw	r22, r28
    6d80:	ec 01       	movw	r28, r24
    6d82:	fb 2e       	mov	r15, r27
    6d84:	6f 57       	subi	r22, 0x7F	; 127
    6d86:	71 09       	sbc	r23, r1
    6d88:	75 95       	asr	r23
    6d8a:	77 1f       	adc	r23, r23
    6d8c:	88 0b       	sbc	r24, r24
    6d8e:	99 0b       	sbc	r25, r25
    6d90:	d1 dc       	rcall	.-1630   	; 0x6734 <__floatsisf>
    6d92:	28 e1       	ldi	r18, 0x18	; 24
    6d94:	32 e7       	ldi	r19, 0x72	; 114
    6d96:	41 e3       	ldi	r20, 0x31	; 49
    6d98:	5f e3       	ldi	r21, 0x3F	; 63
    6d9a:	5b de       	rcall	.-842    	; 0x6a52 <__mulsf3x>
    6d9c:	af 2d       	mov	r26, r15
    6d9e:	98 01       	movw	r18, r16
    6da0:	ae 01       	movw	r20, r28
    6da2:	ff 90       	pop	r15
    6da4:	0f 91       	pop	r16
    6da6:	1f 91       	pop	r17
    6da8:	cf 91       	pop	r28
    6daa:	df 91       	pop	r29
    6dac:	55 db       	rcall	.-2390   	; 0x6458 <__addsf3x>
    6dae:	ef cd       	rjmp	.-1058   	; 0x698e <__fp_round>

00006db0 <modf>:
    6db0:	fa 01       	movw	r30, r20
    6db2:	dc 01       	movw	r26, r24
    6db4:	aa 0f       	add	r26, r26
    6db6:	bb 1f       	adc	r27, r27
    6db8:	9b 01       	movw	r18, r22
    6dba:	ac 01       	movw	r20, r24
    6dbc:	bf 57       	subi	r27, 0x7F	; 127
    6dbe:	28 f4       	brcc	.+10     	; 0x6dca <modf+0x1a>
    6dc0:	22 27       	eor	r18, r18
    6dc2:	33 27       	eor	r19, r19
    6dc4:	44 27       	eor	r20, r20
    6dc6:	50 78       	andi	r21, 0x80	; 128
    6dc8:	1f c0       	rjmp	.+62     	; 0x6e08 <modf+0x58>
    6dca:	b7 51       	subi	r27, 0x17	; 23
    6dcc:	88 f4       	brcc	.+34     	; 0x6df0 <modf+0x40>
    6dce:	ab 2f       	mov	r26, r27
    6dd0:	00 24       	eor	r0, r0
    6dd2:	46 95       	lsr	r20
    6dd4:	37 95       	ror	r19
    6dd6:	27 95       	ror	r18
    6dd8:	01 1c       	adc	r0, r1
    6dda:	a3 95       	inc	r26
    6ddc:	d2 f3       	brmi	.-12     	; 0x6dd2 <modf+0x22>
    6dde:	00 20       	and	r0, r0
    6de0:	69 f0       	breq	.+26     	; 0x6dfc <modf+0x4c>
    6de2:	22 0f       	add	r18, r18
    6de4:	33 1f       	adc	r19, r19
    6de6:	44 1f       	adc	r20, r20
    6de8:	b3 95       	inc	r27
    6dea:	da f3       	brmi	.-10     	; 0x6de2 <modf+0x32>
    6dec:	0d d0       	rcall	.+26     	; 0x6e08 <modf+0x58>
    6dee:	22 cb       	rjmp	.-2492   	; 0x6434 <__subsf3>
    6df0:	61 30       	cpi	r22, 0x01	; 1
    6df2:	71 05       	cpc	r23, r1
    6df4:	a0 e8       	ldi	r26, 0x80	; 128
    6df6:	8a 07       	cpc	r24, r26
    6df8:	b9 46       	sbci	r27, 0x69	; 105
    6dfa:	30 f4       	brcc	.+12     	; 0x6e08 <modf+0x58>
    6dfc:	9b 01       	movw	r18, r22
    6dfe:	ac 01       	movw	r20, r24
    6e00:	66 27       	eor	r22, r22
    6e02:	77 27       	eor	r23, r23
    6e04:	88 27       	eor	r24, r24
    6e06:	90 78       	andi	r25, 0x80	; 128
    6e08:	30 96       	adiw	r30, 0x00	; 0
    6e0a:	21 f0       	breq	.+8      	; 0x6e14 <modf+0x64>
    6e0c:	20 83       	st	Z, r18
    6e0e:	31 83       	std	Z+1, r19	; 0x01
    6e10:	42 83       	std	Z+2, r20	; 0x02
    6e12:	53 83       	std	Z+3, r21	; 0x03
    6e14:	08 95       	ret

00006e16 <__divmodhi4>:
    6e16:	97 fb       	bst	r25, 7
    6e18:	07 2e       	mov	r0, r23
    6e1a:	16 f4       	brtc	.+4      	; 0x6e20 <__divmodhi4+0xa>
    6e1c:	00 94       	com	r0
    6e1e:	06 d0       	rcall	.+12     	; 0x6e2c <__divmodhi4_neg1>
    6e20:	77 fd       	sbrc	r23, 7
    6e22:	08 d0       	rcall	.+16     	; 0x6e34 <__divmodhi4_neg2>
    6e24:	63 d0       	rcall	.+198    	; 0x6eec <__udivmodhi4>
    6e26:	07 fc       	sbrc	r0, 7
    6e28:	05 d0       	rcall	.+10     	; 0x6e34 <__divmodhi4_neg2>
    6e2a:	3e f4       	brtc	.+14     	; 0x6e3a <__divmodhi4_exit>

00006e2c <__divmodhi4_neg1>:
    6e2c:	90 95       	com	r25
    6e2e:	81 95       	neg	r24
    6e30:	9f 4f       	sbci	r25, 0xFF	; 255
    6e32:	08 95       	ret

00006e34 <__divmodhi4_neg2>:
    6e34:	70 95       	com	r23
    6e36:	61 95       	neg	r22
    6e38:	7f 4f       	sbci	r23, 0xFF	; 255

00006e3a <__divmodhi4_exit>:
    6e3a:	08 95       	ret

00006e3c <__tablejump2__>:
    6e3c:	ee 0f       	add	r30, r30
    6e3e:	ff 1f       	adc	r31, r31
    6e40:	00 24       	eor	r0, r0
    6e42:	00 1c       	adc	r0, r0
    6e44:	0b be       	out	0x3b, r0	; 59
    6e46:	07 90       	elpm	r0, Z+
    6e48:	f6 91       	elpm	r31, Z
    6e4a:	e0 2d       	mov	r30, r0
    6e4c:	09 94       	ijmp

00006e4e <__umulhisi3>:
    6e4e:	a2 9f       	mul	r26, r18
    6e50:	b0 01       	movw	r22, r0
    6e52:	b3 9f       	mul	r27, r19
    6e54:	c0 01       	movw	r24, r0
    6e56:	a3 9f       	mul	r26, r19
    6e58:	70 0d       	add	r23, r0
    6e5a:	81 1d       	adc	r24, r1
    6e5c:	11 24       	eor	r1, r1
    6e5e:	91 1d       	adc	r25, r1
    6e60:	b2 9f       	mul	r27, r18
    6e62:	70 0d       	add	r23, r0
    6e64:	81 1d       	adc	r24, r1
    6e66:	11 24       	eor	r1, r1
    6e68:	91 1d       	adc	r25, r1
    6e6a:	08 95       	ret

00006e6c <__ashldi3>:
    6e6c:	0f 93       	push	r16
    6e6e:	08 30       	cpi	r16, 0x08	; 8
    6e70:	90 f0       	brcs	.+36     	; 0x6e96 <__ashldi3+0x2a>
    6e72:	98 2f       	mov	r25, r24
    6e74:	87 2f       	mov	r24, r23
    6e76:	76 2f       	mov	r23, r22
    6e78:	65 2f       	mov	r22, r21
    6e7a:	54 2f       	mov	r21, r20
    6e7c:	43 2f       	mov	r20, r19
    6e7e:	32 2f       	mov	r19, r18
    6e80:	22 27       	eor	r18, r18
    6e82:	08 50       	subi	r16, 0x08	; 8
    6e84:	f4 cf       	rjmp	.-24     	; 0x6e6e <__ashldi3+0x2>
    6e86:	22 0f       	add	r18, r18
    6e88:	33 1f       	adc	r19, r19
    6e8a:	44 1f       	adc	r20, r20
    6e8c:	55 1f       	adc	r21, r21
    6e8e:	66 1f       	adc	r22, r22
    6e90:	77 1f       	adc	r23, r23
    6e92:	88 1f       	adc	r24, r24
    6e94:	99 1f       	adc	r25, r25
    6e96:	0a 95       	dec	r16
    6e98:	b2 f7       	brpl	.-20     	; 0x6e86 <__ashldi3+0x1a>
    6e9a:	0f 91       	pop	r16
    6e9c:	08 95       	ret

00006e9e <__adddi3>:
    6e9e:	2a 0d       	add	r18, r10
    6ea0:	3b 1d       	adc	r19, r11
    6ea2:	4c 1d       	adc	r20, r12
    6ea4:	5d 1d       	adc	r21, r13
    6ea6:	6e 1d       	adc	r22, r14
    6ea8:	7f 1d       	adc	r23, r15
    6eaa:	80 1f       	adc	r24, r16
    6eac:	91 1f       	adc	r25, r17
    6eae:	08 95       	ret

00006eb0 <__adddi3_s8>:
    6eb0:	00 24       	eor	r0, r0
    6eb2:	a7 fd       	sbrc	r26, 7
    6eb4:	00 94       	com	r0
    6eb6:	2a 0f       	add	r18, r26
    6eb8:	30 1d       	adc	r19, r0
    6eba:	40 1d       	adc	r20, r0
    6ebc:	50 1d       	adc	r21, r0
    6ebe:	60 1d       	adc	r22, r0
    6ec0:	70 1d       	adc	r23, r0
    6ec2:	80 1d       	adc	r24, r0
    6ec4:	90 1d       	adc	r25, r0
    6ec6:	08 95       	ret

00006ec8 <__subdi3>:
    6ec8:	2a 19       	sub	r18, r10
    6eca:	3b 09       	sbc	r19, r11
    6ecc:	4c 09       	sbc	r20, r12
    6ece:	5d 09       	sbc	r21, r13
    6ed0:	6e 09       	sbc	r22, r14
    6ed2:	7f 09       	sbc	r23, r15
    6ed4:	80 0b       	sbc	r24, r16
    6ed6:	91 0b       	sbc	r25, r17
    6ed8:	08 95       	ret

00006eda <__cmpdi2>:
    6eda:	2a 15       	cp	r18, r10
    6edc:	3b 05       	cpc	r19, r11
    6ede:	4c 05       	cpc	r20, r12
    6ee0:	5d 05       	cpc	r21, r13
    6ee2:	6e 05       	cpc	r22, r14
    6ee4:	7f 05       	cpc	r23, r15
    6ee6:	80 07       	cpc	r24, r16
    6ee8:	91 07       	cpc	r25, r17
    6eea:	08 95       	ret

00006eec <__udivmodhi4>:
    6eec:	aa 1b       	sub	r26, r26
    6eee:	bb 1b       	sub	r27, r27
    6ef0:	51 e1       	ldi	r21, 0x11	; 17
    6ef2:	07 c0       	rjmp	.+14     	; 0x6f02 <__udivmodhi4_ep>

00006ef4 <__udivmodhi4_loop>:
    6ef4:	aa 1f       	adc	r26, r26
    6ef6:	bb 1f       	adc	r27, r27
    6ef8:	a6 17       	cp	r26, r22
    6efa:	b7 07       	cpc	r27, r23
    6efc:	10 f0       	brcs	.+4      	; 0x6f02 <__udivmodhi4_ep>
    6efe:	a6 1b       	sub	r26, r22
    6f00:	b7 0b       	sbc	r27, r23

00006f02 <__udivmodhi4_ep>:
    6f02:	88 1f       	adc	r24, r24
    6f04:	99 1f       	adc	r25, r25
    6f06:	5a 95       	dec	r21
    6f08:	a9 f7       	brne	.-22     	; 0x6ef4 <__udivmodhi4_loop>
    6f0a:	80 95       	com	r24
    6f0c:	90 95       	com	r25
    6f0e:	bc 01       	movw	r22, r24
    6f10:	cd 01       	movw	r24, r26
    6f12:	08 95       	ret

00006f14 <_exit>:
    6f14:	f8 94       	cli

00006f16 <__stop_program>:
    6f16:	ff cf       	rjmp	.-2      	; 0x6f16 <__stop_program>
