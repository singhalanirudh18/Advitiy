
OBCm--MAG--FT2017--Anirudh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00000e3a  00000ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  0080018c  0080018c  00000f5a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001667  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b55  00000000  00000000  0000279b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b05  00000000  00000000  000032f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  00003df8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f4  00000000  00000000  000040ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a0f  00000000  00000000  000046e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  000050ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	dd c0       	rjmp	.+442    	; 0x204 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	ee c1       	rjmp	.+988    	; 0x456 <__vector_30>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e3       	ldi	r30, 0x3A	; 58
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 38       	cpi	r26, 0x8C	; 140
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e8       	ldi	r26, 0x8C	; 140
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 3a       	cpi	r26, 0xA7	; 167
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e d2       	rcall	.+1052   	; 0x4e0 <main>
  c4:	b8 c6       	rjmp	.+3440   	; 0xe36 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <led_test_m_config>:
#include "led_tests.h"
#include "uart.h"
#include <avr/io.h>

void led_test_m_config(void)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
	DDRA=0x0F;
  cc:	cf e0       	ldi	r28, 0x0F	; 15
  ce:	ca bb       	out	0x1a, r28	; 26
	
	transmit_string_UART0("_a_");
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	91 e0       	ldi	r25, 0x01	; 1
  d4:	6e d2       	rcall	.+1244   	; 0x5b2 <transmit_string_UART0>
		
	PORTA = 0x0F;
  d6:	cb bb       	out	0x1b, r28	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d8:	2f ef       	ldi	r18, 0xFF	; 255
  da:	81 ee       	ldi	r24, 0xE1	; 225
  dc:	94 e0       	ldi	r25, 0x04	; 4
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <led_test_m_config+0x16>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <led_test_m_config+0x20>
  e8:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
  ea:	d0 ef       	ldi	r29, 0xF0	; 240
  ec:	db bb       	out	0x1b, r29	; 27
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	81 ee       	ldi	r24, 0xE1	; 225
  f2:	94 e0       	ldi	r25, 0x04	; 4
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <led_test_m_config+0x2c>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <led_test_m_config+0x36>
  fe:	00 00       	nop
	_delay_ms(200);

	transmit_string_UART0("_b_");
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	56 d2       	rcall	.+1196   	; 0x5b2 <transmit_string_UART0>
		
	PORTA = 0x0F;
 106:	cb bb       	out	0x1b, r28	; 27
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	81 ee       	ldi	r24, 0xE1	; 225
 10c:	94 e0       	ldi	r25, 0x04	; 4
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <led_test_m_config+0x46>
 116:	00 c0       	rjmp	.+0      	; 0x118 <led_test_m_config+0x50>
 118:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 11a:	db bb       	out	0x1b, r29	; 27
 11c:	2f ef       	ldi	r18, 0xFF	; 255
 11e:	81 ee       	ldi	r24, 0xE1	; 225
 120:	94 e0       	ldi	r25, 0x04	; 4
 122:	21 50       	subi	r18, 0x01	; 1
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <led_test_m_config+0x5a>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <led_test_m_config+0x64>
	_delay_ms(200);
	
	transmit_string_UART0("_c_");
 12c:	00 00       	nop
 12e:	8a e0       	ldi	r24, 0x0A	; 10
 130:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 132:	3f d2       	rcall	.+1150   	; 0x5b2 <transmit_string_UART0>
 134:	cb bb       	out	0x1b, r28	; 27
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	81 ee       	ldi	r24, 0xE1	; 225
 13a:	94 e0       	ldi	r25, 0x04	; 4
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <led_test_m_config+0x74>
 144:	00 c0       	rjmp	.+0      	; 0x146 <led_test_m_config+0x7e>
	_delay_ms(200);
	PORTA = 0xF0;
 146:	00 00       	nop
 148:	db bb       	out	0x1b, r29	; 27
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	81 ee       	ldi	r24, 0xE1	; 225
 14e:	94 e0       	ldi	r25, 0x04	; 4
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <led_test_m_config+0x88>
	_delay_ms(200);
	
	transmit_string_UART0("_d_");
 158:	00 c0       	rjmp	.+0      	; 0x15a <led_test_m_config+0x92>
 15a:	00 00       	nop
 15c:	8e e0       	ldi	r24, 0x0E	; 14
 15e:	91 e0       	ldi	r25, 0x01	; 1
	
	PORTA = 0x0F;
 160:	28 d2       	rcall	.+1104   	; 0x5b2 <transmit_string_UART0>
 162:	cb bb       	out	0x1b, r28	; 27
 164:	2f ef       	ldi	r18, 0xFF	; 255
 166:	81 ee       	ldi	r24, 0xE1	; 225
 168:	94 e0       	ldi	r25, 0x04	; 4
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	80 40       	sbci	r24, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <led_test_m_config+0xa2>
 172:	00 c0       	rjmp	.+0      	; 0x174 <led_test_m_config+0xac>
	_delay_ms(200);
	PORTA = 0xF0;
 174:	00 00       	nop
 176:	db bb       	out	0x1b, r29	; 27
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	81 ee       	ldi	r24, 0xE1	; 225
 17c:	94 e0       	ldi	r25, 0x04	; 4
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <led_test_m_config+0xb6>
 186:	00 c0       	rjmp	.+0      	; 0x188 <led_test_m_config+0xc0>
	_delay_ms(200);
	
	PORTA = 0x00; 
 188:	00 00       	nop
 18a:	1b ba       	out	0x1b, r1	; 27
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	81 ee       	ldi	r24, 0xE1	; 225
 190:	94 e0       	ldi	r25, 0x04	; 4
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <led_test_m_config+0xca>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <led_test_m_config+0xd4>
	_delay_ms(200);
	
}
 19c:	00 00       	nop
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <mag_ASCII>:
int Bz,By,Bx;
float BX,BY,BZ;
int n=0;
int hex = 1;
void mag_ASCII(){
	transmit_string_UART1("*00A\r");
 1a4:	82 e3       	ldi	r24, 0x32	; 50
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	ee c1       	rjmp	.+988    	; 0x586 <transmit_string_UART1>
 1aa:	08 95       	ret

000001ac <mag_Binary>:
	//transmit_string_UART1("<cr>");
	//transmit_string_UART0("*AOK");
}
void mag_Binary(){
	transmit_string_UART1("*00B\r");
 1ac:	88 e3       	ldi	r24, 0x38	; 56
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	ea c1       	rjmp	.+980    	; 0x586 <transmit_string_UART1>
 1b2:	08 95       	ret

000001b4 <mag_serial_number>:
	//transmit_string_UART0("*BOK");
}
void mag_serial_number(){
	transmit_string_UART1("*00#\r");
 1b4:	8e e3       	ldi	r24, 0x3E	; 62
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	e6 c1       	rjmp	.+972    	; 0x586 <transmit_string_UART1>
 1ba:	08 95       	ret

000001bc <mag_poll>:
	//transmit_string_UART0("SOK");
}
void mag_poll(){
	n=0;
 1bc:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <__data_end+0x1>
 1c0:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <__data_end>
	transmit_string_UART1("*00P\r");
 1c4:	84 e4       	ldi	r24, 0x44	; 68
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	de c1       	rjmp	.+956    	; 0x586 <transmit_string_UART1>
 1ca:	08 95       	ret

000001cc <mag_continous>:
	//transmit_string_UART0("MOK");
}
void mag_continous(){
	transmit_string_UART1("*00C\r");
 1cc:	8a e4       	ldi	r24, 0x4A	; 74
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	da c1       	rjmp	.+948    	; 0x586 <transmit_string_UART1>
 1d2:	08 95       	ret

000001d4 <mag_BaudRate9600>:
	//transmit_string_UART0("COK");
}
void mag_BaudRate9600(){
	//transmit_string_UART1("*99WE\r");
	transmit_string_UART1("*99!BR=S\r");
 1d4:	80 e5       	ldi	r24, 0x50	; 80
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	d6 c1       	rjmp	.+940    	; 0x586 <transmit_string_UART1>
 1da:	08 95       	ret

000001dc <mag_global_WE>:
	//transmit_string_UART0("9600OK");
}
void mag_global_WE(){
	transmit_string_UART1("*99WE\r");
 1dc:	8a e5       	ldi	r24, 0x5A	; 90
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	d2 c1       	rjmp	.+932    	; 0x586 <transmit_string_UART1>
 1e2:	08 95       	ret

000001e4 <mag_write_enable>:
	//transmit_string_UART1("*99!BR=S\r");
	//transmit_string_UART0("9600OK");
}
void mag_write_enable(){
	transmit_string_UART1("*00WE\r");
 1e4:	81 e6       	ldi	r24, 0x61	; 97
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	ce c1       	rjmp	.+924    	; 0x586 <transmit_string_UART1>
 1ea:	08 95       	ret

000001ec <mag_zero_on>:
	//transmit_string_UART0("9600OK");
}

void mag_zero_on(){
	//transmit_string_UART1("*00WE\r");
	transmit_string_UART1("*00ZN\r");
 1ec:	88 e6       	ldi	r24, 0x68	; 104
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	ca c1       	rjmp	.+916    	; 0x586 <transmit_string_UART1>
 1f2:	08 95       	ret

000001f4 <mag_zero_off>:
	//transmit_string_UART0("9600OK");
};

void mag_zero_off(){
	//transmit_string_UART1("*00WE\r");
	transmit_string_UART1("*00ZF\r");
 1f4:	8f e6       	ldi	r24, 0x6F	; 111
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	c6 c1       	rjmp	.+908    	; 0x586 <transmit_string_UART1>
 1fa:	08 95       	ret

000001fc <mag_zero_toggle>:
	//transmit_string_UART0("9600OK");
};

void mag_zero_toggle(){
	//transmit_string_UART1("*00WE\r");
	transmit_string_UART1("*00ZR\r");
 1fc:	86 e7       	ldi	r24, 0x76	; 118
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	c2 c1       	rjmp	.+900    	; 0x586 <transmit_string_UART1>
 202:	08 95       	ret

00000204 <__vector_18>:
	//transmit_string_UART0("9600OK");
};

ISR(USART0_RX_vect)
{
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	0b b6       	in	r0, 0x3b	; 59
 210:	0f 92       	push	r0
 212:	2f 93       	push	r18
 214:	3f 93       	push	r19
 216:	4f 93       	push	r20
 218:	5f 93       	push	r21
 21a:	6f 93       	push	r22
 21c:	7f 93       	push	r23
 21e:	8f 93       	push	r24
 220:	9f 93       	push	r25
 222:	af 93       	push	r26
 224:	bf 93       	push	r27
 226:	ef 93       	push	r30
 228:	ff 93       	push	r31
	//gpsinfo = UDR0;
	//transmit_UART0(gpsinfo);
	char c = UDR0;
 22a:	8c b1       	in	r24, 0x0c	; 12
	//transmit_UART0(c);
	if(c=='a') {mag_ASCII();
 22c:	81 36       	cpi	r24, 0x61	; 97
 22e:	31 f4       	brne	.+12     	; 0x23c <__vector_18+0x38>
		hex =0;}
 230:	b9 df       	rcall	.-142    	; 0x1a4 <mag_ASCII>
 232:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
 236:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	else if(c=='w') mag_write_enable();
 23a:	2d c0       	rjmp	.+90     	; 0x296 <__vector_18+0x92>
 23c:	87 37       	cpi	r24, 0x77	; 119
 23e:	11 f4       	brne	.+4      	; 0x244 <__vector_18+0x40>
	else if(c=='9') mag_BaudRate9600();
 240:	d1 df       	rcall	.-94     	; 0x1e4 <mag_write_enable>
 242:	29 c0       	rjmp	.+82     	; 0x296 <__vector_18+0x92>
 244:	89 33       	cpi	r24, 0x39	; 57
	else if(c=='b') {mag_Binary();
 246:	11 f4       	brne	.+4      	; 0x24c <__vector_18+0x48>
 248:	c5 df       	rcall	.-118    	; 0x1d4 <mag_BaudRate9600>
 24a:	25 c0       	rjmp	.+74     	; 0x296 <__vector_18+0x92>
 24c:	82 36       	cpi	r24, 0x62	; 98
		hex=1;}
 24e:	41 f4       	brne	.+16     	; 0x260 <__vector_18+0x5c>
 250:	ad df       	rcall	.-166    	; 0x1ac <mag_Binary>
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
	else if(c=='p') {
 25a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		mag_poll();
 25e:	1b c0       	rjmp	.+54     	; 0x296 <__vector_18+0x92>
		
	}
	else if(c=='c') mag_continous();
 260:	80 37       	cpi	r24, 0x70	; 112
 262:	11 f4       	brne	.+4      	; 0x268 <__vector_18+0x64>
 264:	ab df       	rcall	.-170    	; 0x1bc <mag_poll>
	else if(c=='s') mag_serial_number();
 266:	17 c0       	rjmp	.+46     	; 0x296 <__vector_18+0x92>
 268:	83 36       	cpi	r24, 0x63	; 99
 26a:	11 f4       	brne	.+4      	; 0x270 <__vector_18+0x6c>
	else if(c=='0') mag_zero_on();
 26c:	af df       	rcall	.-162    	; 0x1cc <mag_continous>
 26e:	13 c0       	rjmp	.+38     	; 0x296 <__vector_18+0x92>
 270:	83 37       	cpi	r24, 0x73	; 115
 272:	11 f4       	brne	.+4      	; 0x278 <__vector_18+0x74>
	else if(c=='1') mag_zero_off();
 274:	9f df       	rcall	.-194    	; 0x1b4 <mag_serial_number>
 276:	0f c0       	rjmp	.+30     	; 0x296 <__vector_18+0x92>
 278:	80 33       	cpi	r24, 0x30	; 48
	else if(c=='2') mag_zero_toggle();
 27a:	11 f4       	brne	.+4      	; 0x280 <__vector_18+0x7c>
 27c:	b7 df       	rcall	.-146    	; 0x1ec <mag_zero_on>
 27e:	0b c0       	rjmp	.+22     	; 0x296 <__vector_18+0x92>
 280:	81 33       	cpi	r24, 0x31	; 49
 282:	11 f4       	brne	.+4      	; 0x288 <__vector_18+0x84>
	else if (c=='g') mag_global_WE();
 284:	b7 df       	rcall	.-146    	; 0x1f4 <mag_zero_off>
 286:	07 c0       	rjmp	.+14     	; 0x296 <__vector_18+0x92>
 288:	82 33       	cpi	r24, 0x32	; 50
 28a:	11 f4       	brne	.+4      	; 0x290 <__vector_18+0x8c>
	if(i==3)
	{
		message_ID();
		i=1;
	}*/
}
 28c:	b7 df       	rcall	.-146    	; 0x1fc <mag_zero_toggle>
 28e:	03 c0       	rjmp	.+6      	; 0x296 <__vector_18+0x92>
 290:	87 36       	cpi	r24, 0x67	; 103
 292:	09 f4       	brne	.+2      	; 0x296 <__vector_18+0x92>
 294:	a3 df       	rcall	.-186    	; 0x1dc <mag_global_WE>
 296:	ff 91       	pop	r31
 298:	ef 91       	pop	r30
 29a:	bf 91       	pop	r27
 29c:	af 91       	pop	r26
 29e:	9f 91       	pop	r25
 2a0:	8f 91       	pop	r24
 2a2:	7f 91       	pop	r23
 2a4:	6f 91       	pop	r22
 2a6:	5f 91       	pop	r21
 2a8:	4f 91       	pop	r20
 2aa:	3f 91       	pop	r19
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0b be       	out	0x3b, r0	; 59
 2b2:	0f 90       	pop	r0
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	0f 90       	pop	r0
 2b8:	1f 90       	pop	r1
 2ba:	18 95       	reti

000002bc <mag_value>:

void mag_value(){
 2bc:	cf 92       	push	r12
 2be:	df 92       	push	r13
 2c0:	ef 92       	push	r14
 2c2:	ff 92       	push	r15
 2c4:	0f 93       	push	r16
 2c6:	1f 93       	push	r17
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	6e 97       	sbiw	r28, 0x1e	; 30
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
	
	int Bxh = B[0];
	int Bxl = B[1];
	int Byh = B[2];
 2dc:	e9 e9       	ldi	r30, 0x99	; 153
 2de:	f1 e0       	ldi	r31, 0x01	; 1
 2e0:	22 81       	ldd	r18, Z+2	; 0x02
 2e2:	30 e0       	ldi	r19, 0x00	; 0
	int Byl = B[3];
 2e4:	73 81       	ldd	r23, Z+3	; 0x03
	int Bzh = B[4];
 2e6:	44 81       	ldd	r20, Z+4	; 0x04
 2e8:	50 e0       	ldi	r21, 0x00	; 0
	int Bzl = B[5];
 2ea:	65 81       	ldd	r22, Z+5	; 0x05
	
	Bx = Bxh*16*16 + Bxl;
 2ec:	80 81       	ld	r24, Z
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	98 2f       	mov	r25, r24
 2f2:	88 27       	eor	r24, r24
 2f4:	e1 81       	ldd	r30, Z+1	; 0x01
 2f6:	8e 0f       	add	r24, r30
 2f8:	91 1d       	adc	r25, r1
 2fa:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <Bx+0x1>
 2fe:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <Bx>
	By = Byh*16*16 + Byl;
 302:	32 2f       	mov	r19, r18
 304:	22 27       	eor	r18, r18
 306:	27 0f       	add	r18, r23
 308:	31 1d       	adc	r19, r1
 30a:	30 93 98 01 	sts	0x0198, r19	; 0x800198 <By+0x1>
 30e:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <By>
	Bz = Bzh*16*16 + Bzl;
 312:	34 2f       	mov	r19, r20
 314:	22 27       	eor	r18, r18
 316:	26 0f       	add	r18, r22
 318:	31 1d       	adc	r19, r1
 31a:	30 93 a0 01 	sts	0x01A0, r19	; 0x8001a0 <Bz+0x1>
 31e:	20 93 9f 01 	sts	0x019F, r18	; 0x80019f <Bz>
	
	char bx[10];
	sprintf(bx, "%d", Bx);
 322:	9f 93       	push	r25
 324:	8f 93       	push	r24
 326:	0d e7       	ldi	r16, 0x7D	; 125
 328:	11 e0       	ldi	r17, 0x01	; 1
 32a:	1f 93       	push	r17
 32c:	0f 93       	push	r16
 32e:	ce 01       	movw	r24, r28
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	6c 01       	movw	r12, r24
 334:	9f 93       	push	r25
 336:	8f 93       	push	r24
 338:	a3 d2       	rcall	.+1350   	; 0x880 <sprintf>
	char by[10];
	sprintf(by, "%d", By);
 33a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <By+0x1>
 33e:	8f 93       	push	r24
 340:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <By>
 344:	8f 93       	push	r24
 346:	1f 93       	push	r17
 348:	0f 93       	push	r16
 34a:	7e 01       	movw	r14, r28
 34c:	9b e0       	ldi	r25, 0x0B	; 11
 34e:	e9 0e       	add	r14, r25
 350:	f1 1c       	adc	r15, r1
 352:	ff 92       	push	r15
 354:	ef 92       	push	r14
 356:	94 d2       	rcall	.+1320   	; 0x880 <sprintf>
	char bz[10];
	sprintf(bz, "%d", Bz);
 358:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <Bz+0x1>
 35c:	8f 93       	push	r24
 35e:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <Bz>
 362:	8f 93       	push	r24
 364:	1f 93       	push	r17
 366:	0f 93       	push	r16
 368:	8e 01       	movw	r16, r28
 36a:	0b 5e       	subi	r16, 0xEB	; 235
 36c:	1f 4f       	sbci	r17, 0xFF	; 255
 36e:	1f 93       	push	r17
 370:	0f 93       	push	r16
	transmit_string_UART0("( ");
 372:	86 d2       	rcall	.+1292   	; 0x880 <sprintf>
 374:	80 e8       	ldi	r24, 0x80	; 128
	transmit_string_UART0(bx);
 376:	91 e0       	ldi	r25, 0x01	; 1
	transmit_string_UART0(" , ");
 378:	1c d1       	rcall	.+568    	; 0x5b2 <transmit_string_UART0>
 37a:	c6 01       	movw	r24, r12
	transmit_string_UART0(by);
 37c:	1a d1       	rcall	.+564    	; 0x5b2 <transmit_string_UART0>
	transmit_string_UART0(" , ");
 37e:	83 e8       	ldi	r24, 0x83	; 131
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	17 d1       	rcall	.+558    	; 0x5b2 <transmit_string_UART0>
	transmit_string_UART0(bz);
 384:	c7 01       	movw	r24, r14
 386:	15 d1       	rcall	.+554    	; 0x5b2 <transmit_string_UART0>
 388:	83 e8       	ldi	r24, 0x83	; 131
	transmit_string_UART0(" ) ");
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	12 d1       	rcall	.+548    	; 0x5b2 <transmit_string_UART0>
 38e:	c8 01       	movw	r24, r16
	
	BX = (Bx/30000.0)*2.0;
 390:	10 d1       	rcall	.+544    	; 0x5b2 <transmit_string_UART0>
 392:	87 e8       	ldi	r24, 0x87	; 135
 394:	91 e0       	ldi	r25, 0x01	; 1
 396:	0d d1       	rcall	.+538    	; 0x5b2 <transmit_string_UART0>
 398:	60 91 a5 01 	lds	r22, 0x01A5	; 0x8001a5 <Bx>
 39c:	70 91 a6 01 	lds	r23, 0x01A6	; 0x8001a6 <Bx+0x1>
 3a0:	07 2e       	mov	r0, r23
 3a2:	00 0c       	add	r0, r0
 3a4:	88 0b       	sbc	r24, r24
 3a6:	99 0b       	sbc	r25, r25
 3a8:	df d1       	rcall	.+958    	; 0x768 <__floatsisf>
 3aa:	20 e0       	ldi	r18, 0x00	; 0
 3ac:	30 e6       	ldi	r19, 0x60	; 96
 3ae:	4a ee       	ldi	r20, 0xEA	; 234
 3b0:	56 e4       	ldi	r21, 0x46	; 70
 3b2:	70 d1       	rcall	.+736    	; 0x694 <__divsf3>
 3b4:	9b 01       	movw	r18, r22
 3b6:	ac 01       	movw	r20, r24
 3b8:	09 d1       	rcall	.+530    	; 0x5cc <__addsf3>
 3ba:	60 93 a1 01 	sts	0x01A1, r22	; 0x8001a1 <BX>
 3be:	70 93 a2 01 	sts	0x01A2, r23	; 0x8001a2 <BX+0x1>
	BY = (By/30000.0)*2.0;
 3c2:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <BX+0x2>
 3c6:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <BX+0x3>
 3ca:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <By>
 3ce:	70 91 98 01 	lds	r23, 0x0198	; 0x800198 <By+0x1>
 3d2:	07 2e       	mov	r0, r23
 3d4:	00 0c       	add	r0, r0
 3d6:	88 0b       	sbc	r24, r24
 3d8:	99 0b       	sbc	r25, r25
 3da:	c6 d1       	rcall	.+908    	; 0x768 <__floatsisf>
 3dc:	20 e0       	ldi	r18, 0x00	; 0
 3de:	30 e6       	ldi	r19, 0x60	; 96
 3e0:	4a ee       	ldi	r20, 0xEA	; 234
 3e2:	56 e4       	ldi	r21, 0x46	; 70
 3e4:	57 d1       	rcall	.+686    	; 0x694 <__divsf3>
 3e6:	9b 01       	movw	r18, r22
 3e8:	ac 01       	movw	r20, r24
 3ea:	f0 d0       	rcall	.+480    	; 0x5cc <__addsf3>
 3ec:	60 93 93 01 	sts	0x0193, r22	; 0x800193 <BY>
	BZ = (Bz/30000.0)*2.0;
 3f0:	70 93 94 01 	sts	0x0194, r23	; 0x800194 <BY+0x1>
 3f4:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <BY+0x2>
 3f8:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <BY+0x3>
 3fc:	60 91 9f 01 	lds	r22, 0x019F	; 0x80019f <Bz>
 400:	70 91 a0 01 	lds	r23, 0x01A0	; 0x8001a0 <Bz+0x1>
 404:	07 2e       	mov	r0, r23
 406:	00 0c       	add	r0, r0
 408:	88 0b       	sbc	r24, r24
 40a:	99 0b       	sbc	r25, r25
 40c:	ad d1       	rcall	.+858    	; 0x768 <__floatsisf>
 40e:	20 e0       	ldi	r18, 0x00	; 0
 410:	30 e6       	ldi	r19, 0x60	; 96
 412:	4a ee       	ldi	r20, 0xEA	; 234
 414:	56 e4       	ldi	r21, 0x46	; 70
 416:	3e d1       	rcall	.+636    	; 0x694 <__divsf3>
 418:	9b 01       	movw	r18, r22
 41a:	ac 01       	movw	r20, r24
 41c:	d7 d0       	rcall	.+430    	; 0x5cc <__addsf3>
 41e:	60 93 8e 01 	sts	0x018E, r22	; 0x80018e <BZ>
 422:	70 93 8f 01 	sts	0x018F, r23	; 0x80018f <BZ+0x1>
	
	
}
 426:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <BZ+0x2>
 42a:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <BZ+0x3>
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	de bf       	out	0x3e, r29	; 62
 434:	0f be       	out	0x3f, r0	; 63
 436:	cd bf       	out	0x3d, r28	; 61
 438:	6e 96       	adiw	r28, 0x1e	; 30
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	f8 94       	cli
 43e:	de bf       	out	0x3e, r29	; 62
 440:	0f be       	out	0x3f, r0	; 63
 442:	cd bf       	out	0x3d, r28	; 61
 444:	df 91       	pop	r29
 446:	cf 91       	pop	r28
 448:	1f 91       	pop	r17
 44a:	0f 91       	pop	r16
 44c:	ff 90       	pop	r15
 44e:	ef 90       	pop	r14
 450:	df 90       	pop	r13
 452:	cf 90       	pop	r12
 454:	08 95       	ret

00000456 <__vector_30>:
ISR(USART1_RX_vect)
{
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	0b b6       	in	r0, 0x3b	; 59
 462:	0f 92       	push	r0
 464:	2f 93       	push	r18
 466:	3f 93       	push	r19
 468:	4f 93       	push	r20
 46a:	5f 93       	push	r21
 46c:	6f 93       	push	r22
 46e:	7f 93       	push	r23
 470:	8f 93       	push	r24
 472:	9f 93       	push	r25
 474:	af 93       	push	r26
 476:	bf 93       	push	r27
 478:	ef 93       	push	r30
 47a:	ff 93       	push	r31
	maginfo = UDR1;
 47c:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 480:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <maginfo>
	//transmit_UART0('x');
	
	transmit_UART0(maginfo);
 484:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <maginfo>
 488:	7a d0       	rcall	.+244    	; 0x57e <transmit_UART0>
	if(hex== 1){
 48a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 48e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 492:	01 97       	sbiw	r24, 0x01	; 1
 494:	91 f4       	brne	.+36     	; 0x4ba <__vector_30+0x64>
	B[n]= maginfo;
 496:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
 49a:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
 49e:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <maginfo>
 4a2:	fc 01       	movw	r30, r24
 4a4:	e7 56       	subi	r30, 0x67	; 103
 4a6:	fe 4f       	sbci	r31, 0xFE	; 254
 4a8:	20 83       	st	Z, r18
	n++;
 4aa:	01 96       	adiw	r24, 0x01	; 1
 4ac:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
 4b0:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
	
	if (n==6) {
 4b4:	06 97       	sbiw	r24, 0x06	; 6
		mag_value();
 4b6:	09 f4       	brne	.+2      	; 0x4ba <__vector_30+0x64>
 4b8:	01 df       	rcall	.-510    	; 0x2bc <mag_value>
	if(i==3)
	{
		message_ID();
		i=1;
	}*/
}
 4ba:	ff 91       	pop	r31
 4bc:	ef 91       	pop	r30
 4be:	bf 91       	pop	r27
 4c0:	af 91       	pop	r26
 4c2:	9f 91       	pop	r25
 4c4:	8f 91       	pop	r24
 4c6:	7f 91       	pop	r23
 4c8:	6f 91       	pop	r22
 4ca:	5f 91       	pop	r21
 4cc:	4f 91       	pop	r20
 4ce:	3f 91       	pop	r19
 4d0:	2f 91       	pop	r18
 4d2:	0f 90       	pop	r0
 4d4:	0b be       	out	0x3b, r0	; 59
 4d6:	0f 90       	pop	r0
 4d8:	0f be       	out	0x3f, r0	; 63
 4da:	0f 90       	pop	r0
 4dc:	1f 90       	pop	r1
 4de:	18 95       	reti

000004e0 <main>:
int main(void)
{
	//Initializations 
	
	init_UART0();
	init_UART1();
 4e0:	21 d0       	rcall	.+66     	; 0x524 <init_UART0>
 4e2:	31 d0       	rcall	.+98     	; 0x546 <init_UART1>
 4e4:	2f ef       	ldi	r18, 0xFF	; 255
 4e6:	83 ed       	ldi	r24, 0xD3	; 211
 4e8:	90 e3       	ldi	r25, 0x30	; 48
 4ea:	21 50       	subi	r18, 0x01	; 1
 4ec:	80 40       	sbci	r24, 0x00	; 0
 4ee:	90 40       	sbci	r25, 0x00	; 0
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <main+0xa>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <main+0x14>
	for(int xx = 0;xx<3;xx++)
	{
	_delay_ms(2000);
	led_test_m_config();
 4f4:	00 00       	nop
 4f6:	e8 dd       	rcall	.-1072   	; 0xc8 <led_test_m_config>
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	83 ed       	ldi	r24, 0xD3	; 211
 4fc:	90 e3       	ldi	r25, 0x30	; 48
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	80 40       	sbci	r24, 0x00	; 0
 502:	90 40       	sbci	r25, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <main+0x1e>
 506:	00 c0       	rjmp	.+0      	; 0x508 <main+0x28>
 508:	00 00       	nop
 50a:	de dd       	rcall	.-1092   	; 0xc8 <led_test_m_config>
 50c:	2f ef       	ldi	r18, 0xFF	; 255
 50e:	83 ed       	ldi	r24, 0xD3	; 211
 510:	90 e3       	ldi	r25, 0x30	; 48
 512:	21 50       	subi	r18, 0x01	; 1
 514:	80 40       	sbci	r24, 0x00	; 0
 516:	90 40       	sbci	r25, 0x00	; 0
 518:	e1 f7       	brne	.-8      	; 0x512 <main+0x32>
 51a:	00 c0       	rjmp	.+0      	; 0x51c <main+0x3c>
 51c:	00 00       	nop
 51e:	d4 dd       	rcall	.-1112   	; 0xc8 <led_test_m_config>
	}
	//Interrupt
	sei();//global interrupt enable
 520:	78 94       	sei
 522:	ff cf       	rjmp	.-2      	; 0x522 <main+0x42>

00000524 <init_UART0>:

uint8_t receive_UART0(void)
{
  while ((UCSR0A & (1 << RXC0)) == 0);
  return UDR0;
}
 524:	1b b8       	out	0x0b, r1	; 11
 526:	1a b8       	out	0x0a, r1	; 10
 528:	e5 e9       	ldi	r30, 0x95	; 149
 52a:	f0 e0       	ldi	r31, 0x00	; 0
 52c:	10 82       	st	Z, r1
 52e:	59 9a       	sbi	0x0b, 1	; 11
 530:	8a b1       	in	r24, 0x0a	; 10
 532:	88 69       	ori	r24, 0x98	; 152
 534:	8a b9       	out	0x0a, r24	; 10
 536:	80 81       	ld	r24, Z
 538:	8e 60       	ori	r24, 0x0E	; 14
 53a:	80 83       	st	Z, r24
 53c:	87 e6       	ldi	r24, 0x67	; 103
 53e:	89 b9       	out	0x09, r24	; 9
 540:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 544:	08 95       	ret

00000546 <init_UART1>:
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	cb e9       	ldi	r28, 0x9B	; 155
 54c:	d0 e0       	ldi	r29, 0x00	; 0
 54e:	18 82       	st	Y, r1
 550:	aa e9       	ldi	r26, 0x9A	; 154
 552:	b0 e0       	ldi	r27, 0x00	; 0
 554:	1c 92       	st	X, r1
 556:	ed e9       	ldi	r30, 0x9D	; 157
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	10 82       	st	Z, r1
 55c:	88 81       	ld	r24, Y
 55e:	82 60       	ori	r24, 0x02	; 2
 560:	88 83       	st	Y, r24
 562:	8c 91       	ld	r24, X
 564:	88 69       	ori	r24, 0x98	; 152
 566:	8c 93       	st	X, r24
 568:	80 81       	ld	r24, Z
 56a:	8e 60       	ori	r24, 0x0E	; 14
 56c:	80 83       	st	Z, r24
 56e:	87 e6       	ldi	r24, 0x67	; 103
 570:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 574:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	08 95       	ret

0000057e <transmit_UART0>:
 57e:	5d 9b       	sbis	0x0b, 5	; 11
 580:	fe cf       	rjmp	.-4      	; 0x57e <transmit_UART0>
 582:	8c b9       	out	0x0c, r24	; 12
 584:	08 95       	ret

00000586 <transmit_string_UART1>:

void transmit_string_UART1(char *buffer)
{
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 58a:	fc 01       	movw	r30, r24
 58c:	20 81       	ld	r18, Z
 58e:	22 23       	and	r18, r18
 590:	69 f0       	breq	.+26     	; 0x5ac <transmit_string_UART1+0x26>
 592:	dc 01       	movw	r26, r24
 594:	11 96       	adiw	r26, 0x01	; 1
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR1A & (_BV(UDRE1))) );
 596:	eb e9       	ldi	r30, 0x9B	; 155
 598:	f0 e0       	ldi	r31, 0x00	; 0
    	///* Start transmission
    	UDR1 = buffer[i];
 59a:	cc e9       	ldi	r28, 0x9C	; 156
 59c:	d0 e0       	ldi	r29, 0x00	; 0
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR1A & (_BV(UDRE1))) );
 59e:	90 81       	ld	r25, Z
 5a0:	95 ff       	sbrs	r25, 5
 5a2:	fd cf       	rjmp	.-6      	; 0x59e <transmit_string_UART1+0x18>
    	///* Start transmission
    	UDR1 = buffer[i];
 5a4:	28 83       	st	Y, r18

void transmit_string_UART1(char *buffer)
{
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 5a6:	2d 91       	ld	r18, X+
 5a8:	21 11       	cpse	r18, r1
 5aa:	f9 cf       	rjmp	.-14     	; 0x59e <transmit_string_UART1+0x18>
    	while ( !(UCSR1A & (_BV(UDRE1))) );
    	///* Start transmission
    	UDR1 = buffer[i];
		i++;	
	}
}
 5ac:	df 91       	pop	r29
 5ae:	cf 91       	pop	r28
 5b0:	08 95       	ret

000005b2 <transmit_string_UART0>:


void transmit_string_UART0(char *buffer)
{
 5b2:	fc 01       	movw	r30, r24
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 5b4:	90 81       	ld	r25, Z
 5b6:	99 23       	and	r25, r25
 5b8:	39 f0       	breq	.+14     	; 0x5c8 <transmit_string_UART0+0x16>
 5ba:	31 96       	adiw	r30, 0x01	; 1
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR0A & (_BV(UDRE0))) );
 5bc:	5d 9b       	sbis	0x0b, 5	; 11
 5be:	fe cf       	rjmp	.-4      	; 0x5bc <transmit_string_UART0+0xa>
    	///* Start transmission
    	UDR0 = buffer[i];
 5c0:	9c b9       	out	0x0c, r25	; 12

void transmit_string_UART0(char *buffer)
{
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 5c2:	91 91       	ld	r25, Z+
 5c4:	91 11       	cpse	r25, r1
 5c6:	fa cf       	rjmp	.-12     	; 0x5bc <transmit_string_UART0+0xa>
 5c8:	08 95       	ret

000005ca <__subsf3>:
 5ca:	50 58       	subi	r21, 0x80	; 128

000005cc <__addsf3>:
 5cc:	bb 27       	eor	r27, r27
 5ce:	aa 27       	eor	r26, r26
 5d0:	0e d0       	rcall	.+28     	; 0x5ee <__addsf3x>
 5d2:	1c c1       	rjmp	.+568    	; 0x80c <__fp_round>
 5d4:	0d d1       	rcall	.+538    	; 0x7f0 <__fp_pscA>
 5d6:	30 f0       	brcs	.+12     	; 0x5e4 <__addsf3+0x18>
 5d8:	12 d1       	rcall	.+548    	; 0x7fe <__fp_pscB>
 5da:	20 f0       	brcs	.+8      	; 0x5e4 <__addsf3+0x18>
 5dc:	31 f4       	brne	.+12     	; 0x5ea <__addsf3+0x1e>
 5de:	9f 3f       	cpi	r25, 0xFF	; 255
 5e0:	11 f4       	brne	.+4      	; 0x5e6 <__addsf3+0x1a>
 5e2:	1e f4       	brtc	.+6      	; 0x5ea <__addsf3+0x1e>
 5e4:	02 c1       	rjmp	.+516    	; 0x7ea <__fp_nan>
 5e6:	0e f4       	brtc	.+2      	; 0x5ea <__addsf3+0x1e>
 5e8:	e0 95       	com	r30
 5ea:	e7 fb       	bst	r30, 7
 5ec:	f8 c0       	rjmp	.+496    	; 0x7de <__fp_inf>

000005ee <__addsf3x>:
 5ee:	e9 2f       	mov	r30, r25
 5f0:	1e d1       	rcall	.+572    	; 0x82e <__fp_split3>
 5f2:	80 f3       	brcs	.-32     	; 0x5d4 <__addsf3+0x8>
 5f4:	ba 17       	cp	r27, r26
 5f6:	62 07       	cpc	r22, r18
 5f8:	73 07       	cpc	r23, r19
 5fa:	84 07       	cpc	r24, r20
 5fc:	95 07       	cpc	r25, r21
 5fe:	18 f0       	brcs	.+6      	; 0x606 <__addsf3x+0x18>
 600:	71 f4       	brne	.+28     	; 0x61e <__addsf3x+0x30>
 602:	9e f5       	brtc	.+102    	; 0x66a <__addsf3x+0x7c>
 604:	36 c1       	rjmp	.+620    	; 0x872 <__fp_zero>
 606:	0e f4       	brtc	.+2      	; 0x60a <__addsf3x+0x1c>
 608:	e0 95       	com	r30
 60a:	0b 2e       	mov	r0, r27
 60c:	ba 2f       	mov	r27, r26
 60e:	a0 2d       	mov	r26, r0
 610:	0b 01       	movw	r0, r22
 612:	b9 01       	movw	r22, r18
 614:	90 01       	movw	r18, r0
 616:	0c 01       	movw	r0, r24
 618:	ca 01       	movw	r24, r20
 61a:	a0 01       	movw	r20, r0
 61c:	11 24       	eor	r1, r1
 61e:	ff 27       	eor	r31, r31
 620:	59 1b       	sub	r21, r25
 622:	99 f0       	breq	.+38     	; 0x64a <__addsf3x+0x5c>
 624:	59 3f       	cpi	r21, 0xF9	; 249
 626:	50 f4       	brcc	.+20     	; 0x63c <__addsf3x+0x4e>
 628:	50 3e       	cpi	r21, 0xE0	; 224
 62a:	68 f1       	brcs	.+90     	; 0x686 <__addsf3x+0x98>
 62c:	1a 16       	cp	r1, r26
 62e:	f0 40       	sbci	r31, 0x00	; 0
 630:	a2 2f       	mov	r26, r18
 632:	23 2f       	mov	r18, r19
 634:	34 2f       	mov	r19, r20
 636:	44 27       	eor	r20, r20
 638:	58 5f       	subi	r21, 0xF8	; 248
 63a:	f3 cf       	rjmp	.-26     	; 0x622 <__addsf3x+0x34>
 63c:	46 95       	lsr	r20
 63e:	37 95       	ror	r19
 640:	27 95       	ror	r18
 642:	a7 95       	ror	r26
 644:	f0 40       	sbci	r31, 0x00	; 0
 646:	53 95       	inc	r21
 648:	c9 f7       	brne	.-14     	; 0x63c <__addsf3x+0x4e>
 64a:	7e f4       	brtc	.+30     	; 0x66a <__addsf3x+0x7c>
 64c:	1f 16       	cp	r1, r31
 64e:	ba 0b       	sbc	r27, r26
 650:	62 0b       	sbc	r22, r18
 652:	73 0b       	sbc	r23, r19
 654:	84 0b       	sbc	r24, r20
 656:	ba f0       	brmi	.+46     	; 0x686 <__addsf3x+0x98>
 658:	91 50       	subi	r25, 0x01	; 1
 65a:	a1 f0       	breq	.+40     	; 0x684 <__addsf3x+0x96>
 65c:	ff 0f       	add	r31, r31
 65e:	bb 1f       	adc	r27, r27
 660:	66 1f       	adc	r22, r22
 662:	77 1f       	adc	r23, r23
 664:	88 1f       	adc	r24, r24
 666:	c2 f7       	brpl	.-16     	; 0x658 <__addsf3x+0x6a>
 668:	0e c0       	rjmp	.+28     	; 0x686 <__addsf3x+0x98>
 66a:	ba 0f       	add	r27, r26
 66c:	62 1f       	adc	r22, r18
 66e:	73 1f       	adc	r23, r19
 670:	84 1f       	adc	r24, r20
 672:	48 f4       	brcc	.+18     	; 0x686 <__addsf3x+0x98>
 674:	87 95       	ror	r24
 676:	77 95       	ror	r23
 678:	67 95       	ror	r22
 67a:	b7 95       	ror	r27
 67c:	f7 95       	ror	r31
 67e:	9e 3f       	cpi	r25, 0xFE	; 254
 680:	08 f0       	brcs	.+2      	; 0x684 <__addsf3x+0x96>
 682:	b3 cf       	rjmp	.-154    	; 0x5ea <__addsf3+0x1e>
 684:	93 95       	inc	r25
 686:	88 0f       	add	r24, r24
 688:	08 f0       	brcs	.+2      	; 0x68c <__addsf3x+0x9e>
 68a:	99 27       	eor	r25, r25
 68c:	ee 0f       	add	r30, r30
 68e:	97 95       	ror	r25
 690:	87 95       	ror	r24
 692:	08 95       	ret

00000694 <__divsf3>:
 694:	0c d0       	rcall	.+24     	; 0x6ae <__divsf3x>
 696:	ba c0       	rjmp	.+372    	; 0x80c <__fp_round>
 698:	b2 d0       	rcall	.+356    	; 0x7fe <__fp_pscB>
 69a:	40 f0       	brcs	.+16     	; 0x6ac <__divsf3+0x18>
 69c:	a9 d0       	rcall	.+338    	; 0x7f0 <__fp_pscA>
 69e:	30 f0       	brcs	.+12     	; 0x6ac <__divsf3+0x18>
 6a0:	21 f4       	brne	.+8      	; 0x6aa <__divsf3+0x16>
 6a2:	5f 3f       	cpi	r21, 0xFF	; 255
 6a4:	19 f0       	breq	.+6      	; 0x6ac <__divsf3+0x18>
 6a6:	9b c0       	rjmp	.+310    	; 0x7de <__fp_inf>
 6a8:	51 11       	cpse	r21, r1
 6aa:	e4 c0       	rjmp	.+456    	; 0x874 <__fp_szero>
 6ac:	9e c0       	rjmp	.+316    	; 0x7ea <__fp_nan>

000006ae <__divsf3x>:
 6ae:	bf d0       	rcall	.+382    	; 0x82e <__fp_split3>
 6b0:	98 f3       	brcs	.-26     	; 0x698 <__divsf3+0x4>

000006b2 <__divsf3_pse>:
 6b2:	99 23       	and	r25, r25
 6b4:	c9 f3       	breq	.-14     	; 0x6a8 <__divsf3+0x14>
 6b6:	55 23       	and	r21, r21
 6b8:	b1 f3       	breq	.-20     	; 0x6a6 <__divsf3+0x12>
 6ba:	95 1b       	sub	r25, r21
 6bc:	55 0b       	sbc	r21, r21
 6be:	bb 27       	eor	r27, r27
 6c0:	aa 27       	eor	r26, r26
 6c2:	62 17       	cp	r22, r18
 6c4:	73 07       	cpc	r23, r19
 6c6:	84 07       	cpc	r24, r20
 6c8:	38 f0       	brcs	.+14     	; 0x6d8 <__divsf3_pse+0x26>
 6ca:	9f 5f       	subi	r25, 0xFF	; 255
 6cc:	5f 4f       	sbci	r21, 0xFF	; 255
 6ce:	22 0f       	add	r18, r18
 6d0:	33 1f       	adc	r19, r19
 6d2:	44 1f       	adc	r20, r20
 6d4:	aa 1f       	adc	r26, r26
 6d6:	a9 f3       	breq	.-22     	; 0x6c2 <__divsf3_pse+0x10>
 6d8:	33 d0       	rcall	.+102    	; 0x740 <__divsf3_pse+0x8e>
 6da:	0e 2e       	mov	r0, r30
 6dc:	3a f0       	brmi	.+14     	; 0x6ec <__divsf3_pse+0x3a>
 6de:	e0 e8       	ldi	r30, 0x80	; 128
 6e0:	30 d0       	rcall	.+96     	; 0x742 <__divsf3_pse+0x90>
 6e2:	91 50       	subi	r25, 0x01	; 1
 6e4:	50 40       	sbci	r21, 0x00	; 0
 6e6:	e6 95       	lsr	r30
 6e8:	00 1c       	adc	r0, r0
 6ea:	ca f7       	brpl	.-14     	; 0x6de <__divsf3_pse+0x2c>
 6ec:	29 d0       	rcall	.+82     	; 0x740 <__divsf3_pse+0x8e>
 6ee:	fe 2f       	mov	r31, r30
 6f0:	27 d0       	rcall	.+78     	; 0x740 <__divsf3_pse+0x8e>
 6f2:	66 0f       	add	r22, r22
 6f4:	77 1f       	adc	r23, r23
 6f6:	88 1f       	adc	r24, r24
 6f8:	bb 1f       	adc	r27, r27
 6fa:	26 17       	cp	r18, r22
 6fc:	37 07       	cpc	r19, r23
 6fe:	48 07       	cpc	r20, r24
 700:	ab 07       	cpc	r26, r27
 702:	b0 e8       	ldi	r27, 0x80	; 128
 704:	09 f0       	breq	.+2      	; 0x708 <__divsf3_pse+0x56>
 706:	bb 0b       	sbc	r27, r27
 708:	80 2d       	mov	r24, r0
 70a:	bf 01       	movw	r22, r30
 70c:	ff 27       	eor	r31, r31
 70e:	93 58       	subi	r25, 0x83	; 131
 710:	5f 4f       	sbci	r21, 0xFF	; 255
 712:	2a f0       	brmi	.+10     	; 0x71e <__divsf3_pse+0x6c>
 714:	9e 3f       	cpi	r25, 0xFE	; 254
 716:	51 05       	cpc	r21, r1
 718:	68 f0       	brcs	.+26     	; 0x734 <__divsf3_pse+0x82>
 71a:	61 c0       	rjmp	.+194    	; 0x7de <__fp_inf>
 71c:	ab c0       	rjmp	.+342    	; 0x874 <__fp_szero>
 71e:	5f 3f       	cpi	r21, 0xFF	; 255
 720:	ec f3       	brlt	.-6      	; 0x71c <__divsf3_pse+0x6a>
 722:	98 3e       	cpi	r25, 0xE8	; 232
 724:	dc f3       	brlt	.-10     	; 0x71c <__divsf3_pse+0x6a>
 726:	86 95       	lsr	r24
 728:	77 95       	ror	r23
 72a:	67 95       	ror	r22
 72c:	b7 95       	ror	r27
 72e:	f7 95       	ror	r31
 730:	9f 5f       	subi	r25, 0xFF	; 255
 732:	c9 f7       	brne	.-14     	; 0x726 <__divsf3_pse+0x74>
 734:	88 0f       	add	r24, r24
 736:	91 1d       	adc	r25, r1
 738:	96 95       	lsr	r25
 73a:	87 95       	ror	r24
 73c:	97 f9       	bld	r25, 7
 73e:	08 95       	ret
 740:	e1 e0       	ldi	r30, 0x01	; 1
 742:	66 0f       	add	r22, r22
 744:	77 1f       	adc	r23, r23
 746:	88 1f       	adc	r24, r24
 748:	bb 1f       	adc	r27, r27
 74a:	62 17       	cp	r22, r18
 74c:	73 07       	cpc	r23, r19
 74e:	84 07       	cpc	r24, r20
 750:	ba 07       	cpc	r27, r26
 752:	20 f0       	brcs	.+8      	; 0x75c <__divsf3_pse+0xaa>
 754:	62 1b       	sub	r22, r18
 756:	73 0b       	sbc	r23, r19
 758:	84 0b       	sbc	r24, r20
 75a:	ba 0b       	sbc	r27, r26
 75c:	ee 1f       	adc	r30, r30
 75e:	88 f7       	brcc	.-30     	; 0x742 <__divsf3_pse+0x90>
 760:	e0 95       	com	r30
 762:	08 95       	ret

00000764 <__floatunsisf>:
 764:	e8 94       	clt
 766:	09 c0       	rjmp	.+18     	; 0x77a <__floatsisf+0x12>

00000768 <__floatsisf>:
 768:	97 fb       	bst	r25, 7
 76a:	3e f4       	brtc	.+14     	; 0x77a <__floatsisf+0x12>
 76c:	90 95       	com	r25
 76e:	80 95       	com	r24
 770:	70 95       	com	r23
 772:	61 95       	neg	r22
 774:	7f 4f       	sbci	r23, 0xFF	; 255
 776:	8f 4f       	sbci	r24, 0xFF	; 255
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	99 23       	and	r25, r25
 77c:	a9 f0       	breq	.+42     	; 0x7a8 <__floatsisf+0x40>
 77e:	f9 2f       	mov	r31, r25
 780:	96 e9       	ldi	r25, 0x96	; 150
 782:	bb 27       	eor	r27, r27
 784:	93 95       	inc	r25
 786:	f6 95       	lsr	r31
 788:	87 95       	ror	r24
 78a:	77 95       	ror	r23
 78c:	67 95       	ror	r22
 78e:	b7 95       	ror	r27
 790:	f1 11       	cpse	r31, r1
 792:	f8 cf       	rjmp	.-16     	; 0x784 <__floatsisf+0x1c>
 794:	fa f4       	brpl	.+62     	; 0x7d4 <__floatsisf+0x6c>
 796:	bb 0f       	add	r27, r27
 798:	11 f4       	brne	.+4      	; 0x79e <__floatsisf+0x36>
 79a:	60 ff       	sbrs	r22, 0
 79c:	1b c0       	rjmp	.+54     	; 0x7d4 <__floatsisf+0x6c>
 79e:	6f 5f       	subi	r22, 0xFF	; 255
 7a0:	7f 4f       	sbci	r23, 0xFF	; 255
 7a2:	8f 4f       	sbci	r24, 0xFF	; 255
 7a4:	9f 4f       	sbci	r25, 0xFF	; 255
 7a6:	16 c0       	rjmp	.+44     	; 0x7d4 <__floatsisf+0x6c>
 7a8:	88 23       	and	r24, r24
 7aa:	11 f0       	breq	.+4      	; 0x7b0 <__floatsisf+0x48>
 7ac:	96 e9       	ldi	r25, 0x96	; 150
 7ae:	11 c0       	rjmp	.+34     	; 0x7d2 <__floatsisf+0x6a>
 7b0:	77 23       	and	r23, r23
 7b2:	21 f0       	breq	.+8      	; 0x7bc <__floatsisf+0x54>
 7b4:	9e e8       	ldi	r25, 0x8E	; 142
 7b6:	87 2f       	mov	r24, r23
 7b8:	76 2f       	mov	r23, r22
 7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <__floatsisf+0x5e>
 7bc:	66 23       	and	r22, r22
 7be:	71 f0       	breq	.+28     	; 0x7dc <__floatsisf+0x74>
 7c0:	96 e8       	ldi	r25, 0x86	; 134
 7c2:	86 2f       	mov	r24, r22
 7c4:	70 e0       	ldi	r23, 0x00	; 0
 7c6:	60 e0       	ldi	r22, 0x00	; 0
 7c8:	2a f0       	brmi	.+10     	; 0x7d4 <__floatsisf+0x6c>
 7ca:	9a 95       	dec	r25
 7cc:	66 0f       	add	r22, r22
 7ce:	77 1f       	adc	r23, r23
 7d0:	88 1f       	adc	r24, r24
 7d2:	da f7       	brpl	.-10     	; 0x7ca <__floatsisf+0x62>
 7d4:	88 0f       	add	r24, r24
 7d6:	96 95       	lsr	r25
 7d8:	87 95       	ror	r24
 7da:	97 f9       	bld	r25, 7
 7dc:	08 95       	ret

000007de <__fp_inf>:
 7de:	97 f9       	bld	r25, 7
 7e0:	9f 67       	ori	r25, 0x7F	; 127
 7e2:	80 e8       	ldi	r24, 0x80	; 128
 7e4:	70 e0       	ldi	r23, 0x00	; 0
 7e6:	60 e0       	ldi	r22, 0x00	; 0
 7e8:	08 95       	ret

000007ea <__fp_nan>:
 7ea:	9f ef       	ldi	r25, 0xFF	; 255
 7ec:	80 ec       	ldi	r24, 0xC0	; 192
 7ee:	08 95       	ret

000007f0 <__fp_pscA>:
 7f0:	00 24       	eor	r0, r0
 7f2:	0a 94       	dec	r0
 7f4:	16 16       	cp	r1, r22
 7f6:	17 06       	cpc	r1, r23
 7f8:	18 06       	cpc	r1, r24
 7fa:	09 06       	cpc	r0, r25
 7fc:	08 95       	ret

000007fe <__fp_pscB>:
 7fe:	00 24       	eor	r0, r0
 800:	0a 94       	dec	r0
 802:	12 16       	cp	r1, r18
 804:	13 06       	cpc	r1, r19
 806:	14 06       	cpc	r1, r20
 808:	05 06       	cpc	r0, r21
 80a:	08 95       	ret

0000080c <__fp_round>:
 80c:	09 2e       	mov	r0, r25
 80e:	03 94       	inc	r0
 810:	00 0c       	add	r0, r0
 812:	11 f4       	brne	.+4      	; 0x818 <__fp_round+0xc>
 814:	88 23       	and	r24, r24
 816:	52 f0       	brmi	.+20     	; 0x82c <__fp_round+0x20>
 818:	bb 0f       	add	r27, r27
 81a:	40 f4       	brcc	.+16     	; 0x82c <__fp_round+0x20>
 81c:	bf 2b       	or	r27, r31
 81e:	11 f4       	brne	.+4      	; 0x824 <__fp_round+0x18>
 820:	60 ff       	sbrs	r22, 0
 822:	04 c0       	rjmp	.+8      	; 0x82c <__fp_round+0x20>
 824:	6f 5f       	subi	r22, 0xFF	; 255
 826:	7f 4f       	sbci	r23, 0xFF	; 255
 828:	8f 4f       	sbci	r24, 0xFF	; 255
 82a:	9f 4f       	sbci	r25, 0xFF	; 255
 82c:	08 95       	ret

0000082e <__fp_split3>:
 82e:	57 fd       	sbrc	r21, 7
 830:	90 58       	subi	r25, 0x80	; 128
 832:	44 0f       	add	r20, r20
 834:	55 1f       	adc	r21, r21
 836:	59 f0       	breq	.+22     	; 0x84e <__fp_splitA+0x10>
 838:	5f 3f       	cpi	r21, 0xFF	; 255
 83a:	71 f0       	breq	.+28     	; 0x858 <__fp_splitA+0x1a>
 83c:	47 95       	ror	r20

0000083e <__fp_splitA>:
 83e:	88 0f       	add	r24, r24
 840:	97 fb       	bst	r25, 7
 842:	99 1f       	adc	r25, r25
 844:	61 f0       	breq	.+24     	; 0x85e <__fp_splitA+0x20>
 846:	9f 3f       	cpi	r25, 0xFF	; 255
 848:	79 f0       	breq	.+30     	; 0x868 <__fp_splitA+0x2a>
 84a:	87 95       	ror	r24
 84c:	08 95       	ret
 84e:	12 16       	cp	r1, r18
 850:	13 06       	cpc	r1, r19
 852:	14 06       	cpc	r1, r20
 854:	55 1f       	adc	r21, r21
 856:	f2 cf       	rjmp	.-28     	; 0x83c <__fp_split3+0xe>
 858:	46 95       	lsr	r20
 85a:	f1 df       	rcall	.-30     	; 0x83e <__fp_splitA>
 85c:	08 c0       	rjmp	.+16     	; 0x86e <__fp_splitA+0x30>
 85e:	16 16       	cp	r1, r22
 860:	17 06       	cpc	r1, r23
 862:	18 06       	cpc	r1, r24
 864:	99 1f       	adc	r25, r25
 866:	f1 cf       	rjmp	.-30     	; 0x84a <__fp_splitA+0xc>
 868:	86 95       	lsr	r24
 86a:	71 05       	cpc	r23, r1
 86c:	61 05       	cpc	r22, r1
 86e:	08 94       	sec
 870:	08 95       	ret

00000872 <__fp_zero>:
 872:	e8 94       	clt

00000874 <__fp_szero>:
 874:	bb 27       	eor	r27, r27
 876:	66 27       	eor	r22, r22
 878:	77 27       	eor	r23, r23
 87a:	cb 01       	movw	r24, r22
 87c:	97 f9       	bld	r25, 7
 87e:	08 95       	ret

00000880 <sprintf>:
 880:	0f 93       	push	r16
 882:	1f 93       	push	r17
 884:	cf 93       	push	r28
 886:	df 93       	push	r29
 888:	cd b7       	in	r28, 0x3d	; 61
 88a:	de b7       	in	r29, 0x3e	; 62
 88c:	2e 97       	sbiw	r28, 0x0e	; 14
 88e:	0f b6       	in	r0, 0x3f	; 63
 890:	f8 94       	cli
 892:	de bf       	out	0x3e, r29	; 62
 894:	0f be       	out	0x3f, r0	; 63
 896:	cd bf       	out	0x3d, r28	; 61
 898:	0d 89       	ldd	r16, Y+21	; 0x15
 89a:	1e 89       	ldd	r17, Y+22	; 0x16
 89c:	86 e0       	ldi	r24, 0x06	; 6
 89e:	8c 83       	std	Y+4, r24	; 0x04
 8a0:	1a 83       	std	Y+2, r17	; 0x02
 8a2:	09 83       	std	Y+1, r16	; 0x01
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	9f e7       	ldi	r25, 0x7F	; 127
 8a8:	9e 83       	std	Y+6, r25	; 0x06
 8aa:	8d 83       	std	Y+5, r24	; 0x05
 8ac:	ae 01       	movw	r20, r28
 8ae:	47 5e       	subi	r20, 0xE7	; 231
 8b0:	5f 4f       	sbci	r21, 0xFF	; 255
 8b2:	6f 89       	ldd	r22, Y+23	; 0x17
 8b4:	78 8d       	ldd	r23, Y+24	; 0x18
 8b6:	ce 01       	movw	r24, r28
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	10 d0       	rcall	.+32     	; 0x8dc <vfprintf>
 8bc:	ef 81       	ldd	r30, Y+7	; 0x07
 8be:	f8 85       	ldd	r31, Y+8	; 0x08
 8c0:	e0 0f       	add	r30, r16
 8c2:	f1 1f       	adc	r31, r17
 8c4:	10 82       	st	Z, r1
 8c6:	2e 96       	adiw	r28, 0x0e	; 14
 8c8:	0f b6       	in	r0, 0x3f	; 63
 8ca:	f8 94       	cli
 8cc:	de bf       	out	0x3e, r29	; 62
 8ce:	0f be       	out	0x3f, r0	; 63
 8d0:	cd bf       	out	0x3d, r28	; 61
 8d2:	df 91       	pop	r29
 8d4:	cf 91       	pop	r28
 8d6:	1f 91       	pop	r17
 8d8:	0f 91       	pop	r16
 8da:	08 95       	ret

000008dc <vfprintf>:
 8dc:	2f 92       	push	r2
 8de:	3f 92       	push	r3
 8e0:	4f 92       	push	r4
 8e2:	5f 92       	push	r5
 8e4:	6f 92       	push	r6
 8e6:	7f 92       	push	r7
 8e8:	8f 92       	push	r8
 8ea:	9f 92       	push	r9
 8ec:	af 92       	push	r10
 8ee:	bf 92       	push	r11
 8f0:	cf 92       	push	r12
 8f2:	df 92       	push	r13
 8f4:	ef 92       	push	r14
 8f6:	ff 92       	push	r15
 8f8:	0f 93       	push	r16
 8fa:	1f 93       	push	r17
 8fc:	cf 93       	push	r28
 8fe:	df 93       	push	r29
 900:	cd b7       	in	r28, 0x3d	; 61
 902:	de b7       	in	r29, 0x3e	; 62
 904:	2b 97       	sbiw	r28, 0x0b	; 11
 906:	0f b6       	in	r0, 0x3f	; 63
 908:	f8 94       	cli
 90a:	de bf       	out	0x3e, r29	; 62
 90c:	0f be       	out	0x3f, r0	; 63
 90e:	cd bf       	out	0x3d, r28	; 61
 910:	6c 01       	movw	r12, r24
 912:	7b 01       	movw	r14, r22
 914:	8a 01       	movw	r16, r20
 916:	fc 01       	movw	r30, r24
 918:	17 82       	std	Z+7, r1	; 0x07
 91a:	16 82       	std	Z+6, r1	; 0x06
 91c:	83 81       	ldd	r24, Z+3	; 0x03
 91e:	81 ff       	sbrs	r24, 1
 920:	bf c1       	rjmp	.+894    	; 0xca0 <vfprintf+0x3c4>
 922:	ce 01       	movw	r24, r28
 924:	01 96       	adiw	r24, 0x01	; 1
 926:	3c 01       	movw	r6, r24
 928:	f6 01       	movw	r30, r12
 92a:	93 81       	ldd	r25, Z+3	; 0x03
 92c:	f7 01       	movw	r30, r14
 92e:	93 fd       	sbrc	r25, 3
 930:	85 91       	lpm	r24, Z+
 932:	93 ff       	sbrs	r25, 3
 934:	81 91       	ld	r24, Z+
 936:	7f 01       	movw	r14, r30
 938:	88 23       	and	r24, r24
 93a:	09 f4       	brne	.+2      	; 0x93e <vfprintf+0x62>
 93c:	ad c1       	rjmp	.+858    	; 0xc98 <vfprintf+0x3bc>
 93e:	85 32       	cpi	r24, 0x25	; 37
 940:	39 f4       	brne	.+14     	; 0x950 <vfprintf+0x74>
 942:	93 fd       	sbrc	r25, 3
 944:	85 91       	lpm	r24, Z+
 946:	93 ff       	sbrs	r25, 3
 948:	81 91       	ld	r24, Z+
 94a:	7f 01       	movw	r14, r30
 94c:	85 32       	cpi	r24, 0x25	; 37
 94e:	21 f4       	brne	.+8      	; 0x958 <vfprintf+0x7c>
 950:	b6 01       	movw	r22, r12
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	d6 d1       	rcall	.+940    	; 0xd02 <fputc>
 956:	e8 cf       	rjmp	.-48     	; 0x928 <vfprintf+0x4c>
 958:	91 2c       	mov	r9, r1
 95a:	21 2c       	mov	r2, r1
 95c:	31 2c       	mov	r3, r1
 95e:	ff e1       	ldi	r31, 0x1F	; 31
 960:	f3 15       	cp	r31, r3
 962:	d8 f0       	brcs	.+54     	; 0x99a <vfprintf+0xbe>
 964:	8b 32       	cpi	r24, 0x2B	; 43
 966:	79 f0       	breq	.+30     	; 0x986 <vfprintf+0xaa>
 968:	38 f4       	brcc	.+14     	; 0x978 <vfprintf+0x9c>
 96a:	80 32       	cpi	r24, 0x20	; 32
 96c:	79 f0       	breq	.+30     	; 0x98c <vfprintf+0xb0>
 96e:	83 32       	cpi	r24, 0x23	; 35
 970:	a1 f4       	brne	.+40     	; 0x99a <vfprintf+0xbe>
 972:	23 2d       	mov	r18, r3
 974:	20 61       	ori	r18, 0x10	; 16
 976:	1d c0       	rjmp	.+58     	; 0x9b2 <vfprintf+0xd6>
 978:	8d 32       	cpi	r24, 0x2D	; 45
 97a:	61 f0       	breq	.+24     	; 0x994 <vfprintf+0xb8>
 97c:	80 33       	cpi	r24, 0x30	; 48
 97e:	69 f4       	brne	.+26     	; 0x99a <vfprintf+0xbe>
 980:	23 2d       	mov	r18, r3
 982:	21 60       	ori	r18, 0x01	; 1
 984:	16 c0       	rjmp	.+44     	; 0x9b2 <vfprintf+0xd6>
 986:	83 2d       	mov	r24, r3
 988:	82 60       	ori	r24, 0x02	; 2
 98a:	38 2e       	mov	r3, r24
 98c:	e3 2d       	mov	r30, r3
 98e:	e4 60       	ori	r30, 0x04	; 4
 990:	3e 2e       	mov	r3, r30
 992:	2a c0       	rjmp	.+84     	; 0x9e8 <vfprintf+0x10c>
 994:	f3 2d       	mov	r31, r3
 996:	f8 60       	ori	r31, 0x08	; 8
 998:	1d c0       	rjmp	.+58     	; 0x9d4 <vfprintf+0xf8>
 99a:	37 fc       	sbrc	r3, 7
 99c:	2d c0       	rjmp	.+90     	; 0x9f8 <vfprintf+0x11c>
 99e:	20 ed       	ldi	r18, 0xD0	; 208
 9a0:	28 0f       	add	r18, r24
 9a2:	2a 30       	cpi	r18, 0x0A	; 10
 9a4:	40 f0       	brcs	.+16     	; 0x9b6 <vfprintf+0xda>
 9a6:	8e 32       	cpi	r24, 0x2E	; 46
 9a8:	b9 f4       	brne	.+46     	; 0x9d8 <vfprintf+0xfc>
 9aa:	36 fc       	sbrc	r3, 6
 9ac:	75 c1       	rjmp	.+746    	; 0xc98 <vfprintf+0x3bc>
 9ae:	23 2d       	mov	r18, r3
 9b0:	20 64       	ori	r18, 0x40	; 64
 9b2:	32 2e       	mov	r3, r18
 9b4:	19 c0       	rjmp	.+50     	; 0x9e8 <vfprintf+0x10c>
 9b6:	36 fe       	sbrs	r3, 6
 9b8:	06 c0       	rjmp	.+12     	; 0x9c6 <vfprintf+0xea>
 9ba:	8a e0       	ldi	r24, 0x0A	; 10
 9bc:	98 9e       	mul	r9, r24
 9be:	20 0d       	add	r18, r0
 9c0:	11 24       	eor	r1, r1
 9c2:	92 2e       	mov	r9, r18
 9c4:	11 c0       	rjmp	.+34     	; 0x9e8 <vfprintf+0x10c>
 9c6:	ea e0       	ldi	r30, 0x0A	; 10
 9c8:	2e 9e       	mul	r2, r30
 9ca:	20 0d       	add	r18, r0
 9cc:	11 24       	eor	r1, r1
 9ce:	22 2e       	mov	r2, r18
 9d0:	f3 2d       	mov	r31, r3
 9d2:	f0 62       	ori	r31, 0x20	; 32
 9d4:	3f 2e       	mov	r3, r31
 9d6:	08 c0       	rjmp	.+16     	; 0x9e8 <vfprintf+0x10c>
 9d8:	8c 36       	cpi	r24, 0x6C	; 108
 9da:	21 f4       	brne	.+8      	; 0x9e4 <vfprintf+0x108>
 9dc:	83 2d       	mov	r24, r3
 9de:	80 68       	ori	r24, 0x80	; 128
 9e0:	38 2e       	mov	r3, r24
 9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <vfprintf+0x10c>
 9e4:	88 36       	cpi	r24, 0x68	; 104
 9e6:	41 f4       	brne	.+16     	; 0x9f8 <vfprintf+0x11c>
 9e8:	f7 01       	movw	r30, r14
 9ea:	93 fd       	sbrc	r25, 3
 9ec:	85 91       	lpm	r24, Z+
 9ee:	93 ff       	sbrs	r25, 3
 9f0:	81 91       	ld	r24, Z+
 9f2:	7f 01       	movw	r14, r30
 9f4:	81 11       	cpse	r24, r1
 9f6:	b3 cf       	rjmp	.-154    	; 0x95e <vfprintf+0x82>
 9f8:	98 2f       	mov	r25, r24
 9fa:	9f 7d       	andi	r25, 0xDF	; 223
 9fc:	95 54       	subi	r25, 0x45	; 69
 9fe:	93 30       	cpi	r25, 0x03	; 3
 a00:	28 f4       	brcc	.+10     	; 0xa0c <vfprintf+0x130>
 a02:	0c 5f       	subi	r16, 0xFC	; 252
 a04:	1f 4f       	sbci	r17, 0xFF	; 255
 a06:	9f e3       	ldi	r25, 0x3F	; 63
 a08:	99 83       	std	Y+1, r25	; 0x01
 a0a:	0d c0       	rjmp	.+26     	; 0xa26 <vfprintf+0x14a>
 a0c:	83 36       	cpi	r24, 0x63	; 99
 a0e:	31 f0       	breq	.+12     	; 0xa1c <vfprintf+0x140>
 a10:	83 37       	cpi	r24, 0x73	; 115
 a12:	71 f0       	breq	.+28     	; 0xa30 <vfprintf+0x154>
 a14:	83 35       	cpi	r24, 0x53	; 83
 a16:	09 f0       	breq	.+2      	; 0xa1a <vfprintf+0x13e>
 a18:	55 c0       	rjmp	.+170    	; 0xac4 <vfprintf+0x1e8>
 a1a:	20 c0       	rjmp	.+64     	; 0xa5c <vfprintf+0x180>
 a1c:	f8 01       	movw	r30, r16
 a1e:	80 81       	ld	r24, Z
 a20:	89 83       	std	Y+1, r24	; 0x01
 a22:	0e 5f       	subi	r16, 0xFE	; 254
 a24:	1f 4f       	sbci	r17, 0xFF	; 255
 a26:	88 24       	eor	r8, r8
 a28:	83 94       	inc	r8
 a2a:	91 2c       	mov	r9, r1
 a2c:	53 01       	movw	r10, r6
 a2e:	12 c0       	rjmp	.+36     	; 0xa54 <vfprintf+0x178>
 a30:	28 01       	movw	r4, r16
 a32:	f2 e0       	ldi	r31, 0x02	; 2
 a34:	4f 0e       	add	r4, r31
 a36:	51 1c       	adc	r5, r1
 a38:	f8 01       	movw	r30, r16
 a3a:	a0 80       	ld	r10, Z
 a3c:	b1 80       	ldd	r11, Z+1	; 0x01
 a3e:	36 fe       	sbrs	r3, 6
 a40:	03 c0       	rjmp	.+6      	; 0xa48 <vfprintf+0x16c>
 a42:	69 2d       	mov	r22, r9
 a44:	70 e0       	ldi	r23, 0x00	; 0
 a46:	02 c0       	rjmp	.+4      	; 0xa4c <vfprintf+0x170>
 a48:	6f ef       	ldi	r22, 0xFF	; 255
 a4a:	7f ef       	ldi	r23, 0xFF	; 255
 a4c:	c5 01       	movw	r24, r10
 a4e:	4e d1       	rcall	.+668    	; 0xcec <strnlen>
 a50:	4c 01       	movw	r8, r24
 a52:	82 01       	movw	r16, r4
 a54:	f3 2d       	mov	r31, r3
 a56:	ff 77       	andi	r31, 0x7F	; 127
 a58:	3f 2e       	mov	r3, r31
 a5a:	15 c0       	rjmp	.+42     	; 0xa86 <vfprintf+0x1aa>
 a5c:	28 01       	movw	r4, r16
 a5e:	22 e0       	ldi	r18, 0x02	; 2
 a60:	42 0e       	add	r4, r18
 a62:	51 1c       	adc	r5, r1
 a64:	f8 01       	movw	r30, r16
 a66:	a0 80       	ld	r10, Z
 a68:	b1 80       	ldd	r11, Z+1	; 0x01
 a6a:	36 fe       	sbrs	r3, 6
 a6c:	03 c0       	rjmp	.+6      	; 0xa74 <vfprintf+0x198>
 a6e:	69 2d       	mov	r22, r9
 a70:	70 e0       	ldi	r23, 0x00	; 0
 a72:	02 c0       	rjmp	.+4      	; 0xa78 <vfprintf+0x19c>
 a74:	6f ef       	ldi	r22, 0xFF	; 255
 a76:	7f ef       	ldi	r23, 0xFF	; 255
 a78:	c5 01       	movw	r24, r10
 a7a:	2d d1       	rcall	.+602    	; 0xcd6 <strnlen_P>
 a7c:	4c 01       	movw	r8, r24
 a7e:	f3 2d       	mov	r31, r3
 a80:	f0 68       	ori	r31, 0x80	; 128
 a82:	3f 2e       	mov	r3, r31
 a84:	82 01       	movw	r16, r4
 a86:	33 fc       	sbrc	r3, 3
 a88:	19 c0       	rjmp	.+50     	; 0xabc <vfprintf+0x1e0>
 a8a:	82 2d       	mov	r24, r2
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	88 16       	cp	r8, r24
 a90:	99 06       	cpc	r9, r25
 a92:	a0 f4       	brcc	.+40     	; 0xabc <vfprintf+0x1e0>
 a94:	b6 01       	movw	r22, r12
 a96:	80 e2       	ldi	r24, 0x20	; 32
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	33 d1       	rcall	.+614    	; 0xd02 <fputc>
 a9c:	2a 94       	dec	r2
 a9e:	f5 cf       	rjmp	.-22     	; 0xa8a <vfprintf+0x1ae>
 aa0:	f5 01       	movw	r30, r10
 aa2:	37 fc       	sbrc	r3, 7
 aa4:	85 91       	lpm	r24, Z+
 aa6:	37 fe       	sbrs	r3, 7
 aa8:	81 91       	ld	r24, Z+
 aaa:	5f 01       	movw	r10, r30
 aac:	b6 01       	movw	r22, r12
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	28 d1       	rcall	.+592    	; 0xd02 <fputc>
 ab2:	21 10       	cpse	r2, r1
 ab4:	2a 94       	dec	r2
 ab6:	21 e0       	ldi	r18, 0x01	; 1
 ab8:	82 1a       	sub	r8, r18
 aba:	91 08       	sbc	r9, r1
 abc:	81 14       	cp	r8, r1
 abe:	91 04       	cpc	r9, r1
 ac0:	79 f7       	brne	.-34     	; 0xaa0 <vfprintf+0x1c4>
 ac2:	e1 c0       	rjmp	.+450    	; 0xc86 <vfprintf+0x3aa>
 ac4:	84 36       	cpi	r24, 0x64	; 100
 ac6:	11 f0       	breq	.+4      	; 0xacc <vfprintf+0x1f0>
 ac8:	89 36       	cpi	r24, 0x69	; 105
 aca:	39 f5       	brne	.+78     	; 0xb1a <vfprintf+0x23e>
 acc:	f8 01       	movw	r30, r16
 ace:	37 fe       	sbrs	r3, 7
 ad0:	07 c0       	rjmp	.+14     	; 0xae0 <vfprintf+0x204>
 ad2:	60 81       	ld	r22, Z
 ad4:	71 81       	ldd	r23, Z+1	; 0x01
 ad6:	82 81       	ldd	r24, Z+2	; 0x02
 ad8:	93 81       	ldd	r25, Z+3	; 0x03
 ada:	0c 5f       	subi	r16, 0xFC	; 252
 adc:	1f 4f       	sbci	r17, 0xFF	; 255
 ade:	08 c0       	rjmp	.+16     	; 0xaf0 <vfprintf+0x214>
 ae0:	60 81       	ld	r22, Z
 ae2:	71 81       	ldd	r23, Z+1	; 0x01
 ae4:	07 2e       	mov	r0, r23
 ae6:	00 0c       	add	r0, r0
 ae8:	88 0b       	sbc	r24, r24
 aea:	99 0b       	sbc	r25, r25
 aec:	0e 5f       	subi	r16, 0xFE	; 254
 aee:	1f 4f       	sbci	r17, 0xFF	; 255
 af0:	f3 2d       	mov	r31, r3
 af2:	ff 76       	andi	r31, 0x6F	; 111
 af4:	3f 2e       	mov	r3, r31
 af6:	97 ff       	sbrs	r25, 7
 af8:	09 c0       	rjmp	.+18     	; 0xb0c <vfprintf+0x230>
 afa:	90 95       	com	r25
 afc:	80 95       	com	r24
 afe:	70 95       	com	r23
 b00:	61 95       	neg	r22
 b02:	7f 4f       	sbci	r23, 0xFF	; 255
 b04:	8f 4f       	sbci	r24, 0xFF	; 255
 b06:	9f 4f       	sbci	r25, 0xFF	; 255
 b08:	f0 68       	ori	r31, 0x80	; 128
 b0a:	3f 2e       	mov	r3, r31
 b0c:	2a e0       	ldi	r18, 0x0A	; 10
 b0e:	30 e0       	ldi	r19, 0x00	; 0
 b10:	a3 01       	movw	r20, r6
 b12:	33 d1       	rcall	.+614    	; 0xd7a <__ultoa_invert>
 b14:	88 2e       	mov	r8, r24
 b16:	86 18       	sub	r8, r6
 b18:	44 c0       	rjmp	.+136    	; 0xba2 <vfprintf+0x2c6>
 b1a:	85 37       	cpi	r24, 0x75	; 117
 b1c:	31 f4       	brne	.+12     	; 0xb2a <vfprintf+0x24e>
 b1e:	23 2d       	mov	r18, r3
 b20:	2f 7e       	andi	r18, 0xEF	; 239
 b22:	b2 2e       	mov	r11, r18
 b24:	2a e0       	ldi	r18, 0x0A	; 10
 b26:	30 e0       	ldi	r19, 0x00	; 0
 b28:	25 c0       	rjmp	.+74     	; 0xb74 <vfprintf+0x298>
 b2a:	93 2d       	mov	r25, r3
 b2c:	99 7f       	andi	r25, 0xF9	; 249
 b2e:	b9 2e       	mov	r11, r25
 b30:	8f 36       	cpi	r24, 0x6F	; 111
 b32:	c1 f0       	breq	.+48     	; 0xb64 <vfprintf+0x288>
 b34:	18 f4       	brcc	.+6      	; 0xb3c <vfprintf+0x260>
 b36:	88 35       	cpi	r24, 0x58	; 88
 b38:	79 f0       	breq	.+30     	; 0xb58 <vfprintf+0x27c>
 b3a:	ae c0       	rjmp	.+348    	; 0xc98 <vfprintf+0x3bc>
 b3c:	80 37       	cpi	r24, 0x70	; 112
 b3e:	19 f0       	breq	.+6      	; 0xb46 <vfprintf+0x26a>
 b40:	88 37       	cpi	r24, 0x78	; 120
 b42:	21 f0       	breq	.+8      	; 0xb4c <vfprintf+0x270>
 b44:	a9 c0       	rjmp	.+338    	; 0xc98 <vfprintf+0x3bc>
 b46:	e9 2f       	mov	r30, r25
 b48:	e0 61       	ori	r30, 0x10	; 16
 b4a:	be 2e       	mov	r11, r30
 b4c:	b4 fe       	sbrs	r11, 4
 b4e:	0d c0       	rjmp	.+26     	; 0xb6a <vfprintf+0x28e>
 b50:	fb 2d       	mov	r31, r11
 b52:	f4 60       	ori	r31, 0x04	; 4
 b54:	bf 2e       	mov	r11, r31
 b56:	09 c0       	rjmp	.+18     	; 0xb6a <vfprintf+0x28e>
 b58:	34 fe       	sbrs	r3, 4
 b5a:	0a c0       	rjmp	.+20     	; 0xb70 <vfprintf+0x294>
 b5c:	29 2f       	mov	r18, r25
 b5e:	26 60       	ori	r18, 0x06	; 6
 b60:	b2 2e       	mov	r11, r18
 b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0x294>
 b64:	28 e0       	ldi	r18, 0x08	; 8
 b66:	30 e0       	ldi	r19, 0x00	; 0
 b68:	05 c0       	rjmp	.+10     	; 0xb74 <vfprintf+0x298>
 b6a:	20 e1       	ldi	r18, 0x10	; 16
 b6c:	30 e0       	ldi	r19, 0x00	; 0
 b6e:	02 c0       	rjmp	.+4      	; 0xb74 <vfprintf+0x298>
 b70:	20 e1       	ldi	r18, 0x10	; 16
 b72:	32 e0       	ldi	r19, 0x02	; 2
 b74:	f8 01       	movw	r30, r16
 b76:	b7 fe       	sbrs	r11, 7
 b78:	07 c0       	rjmp	.+14     	; 0xb88 <vfprintf+0x2ac>
 b7a:	60 81       	ld	r22, Z
 b7c:	71 81       	ldd	r23, Z+1	; 0x01
 b7e:	82 81       	ldd	r24, Z+2	; 0x02
 b80:	93 81       	ldd	r25, Z+3	; 0x03
 b82:	0c 5f       	subi	r16, 0xFC	; 252
 b84:	1f 4f       	sbci	r17, 0xFF	; 255
 b86:	06 c0       	rjmp	.+12     	; 0xb94 <vfprintf+0x2b8>
 b88:	60 81       	ld	r22, Z
 b8a:	71 81       	ldd	r23, Z+1	; 0x01
 b8c:	80 e0       	ldi	r24, 0x00	; 0
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	0e 5f       	subi	r16, 0xFE	; 254
 b92:	1f 4f       	sbci	r17, 0xFF	; 255
 b94:	a3 01       	movw	r20, r6
 b96:	f1 d0       	rcall	.+482    	; 0xd7a <__ultoa_invert>
 b98:	88 2e       	mov	r8, r24
 b9a:	86 18       	sub	r8, r6
 b9c:	fb 2d       	mov	r31, r11
 b9e:	ff 77       	andi	r31, 0x7F	; 127
 ba0:	3f 2e       	mov	r3, r31
 ba2:	36 fe       	sbrs	r3, 6
 ba4:	0d c0       	rjmp	.+26     	; 0xbc0 <vfprintf+0x2e4>
 ba6:	23 2d       	mov	r18, r3
 ba8:	2e 7f       	andi	r18, 0xFE	; 254
 baa:	a2 2e       	mov	r10, r18
 bac:	89 14       	cp	r8, r9
 bae:	58 f4       	brcc	.+22     	; 0xbc6 <vfprintf+0x2ea>
 bb0:	34 fe       	sbrs	r3, 4
 bb2:	0b c0       	rjmp	.+22     	; 0xbca <vfprintf+0x2ee>
 bb4:	32 fc       	sbrc	r3, 2
 bb6:	09 c0       	rjmp	.+18     	; 0xbca <vfprintf+0x2ee>
 bb8:	83 2d       	mov	r24, r3
 bba:	8e 7e       	andi	r24, 0xEE	; 238
 bbc:	a8 2e       	mov	r10, r24
 bbe:	05 c0       	rjmp	.+10     	; 0xbca <vfprintf+0x2ee>
 bc0:	b8 2c       	mov	r11, r8
 bc2:	a3 2c       	mov	r10, r3
 bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x2f0>
 bc6:	b8 2c       	mov	r11, r8
 bc8:	01 c0       	rjmp	.+2      	; 0xbcc <vfprintf+0x2f0>
 bca:	b9 2c       	mov	r11, r9
 bcc:	a4 fe       	sbrs	r10, 4
 bce:	0f c0       	rjmp	.+30     	; 0xbee <vfprintf+0x312>
 bd0:	fe 01       	movw	r30, r28
 bd2:	e8 0d       	add	r30, r8
 bd4:	f1 1d       	adc	r31, r1
 bd6:	80 81       	ld	r24, Z
 bd8:	80 33       	cpi	r24, 0x30	; 48
 bda:	21 f4       	brne	.+8      	; 0xbe4 <vfprintf+0x308>
 bdc:	9a 2d       	mov	r25, r10
 bde:	99 7e       	andi	r25, 0xE9	; 233
 be0:	a9 2e       	mov	r10, r25
 be2:	09 c0       	rjmp	.+18     	; 0xbf6 <vfprintf+0x31a>
 be4:	a2 fe       	sbrs	r10, 2
 be6:	06 c0       	rjmp	.+12     	; 0xbf4 <vfprintf+0x318>
 be8:	b3 94       	inc	r11
 bea:	b3 94       	inc	r11
 bec:	04 c0       	rjmp	.+8      	; 0xbf6 <vfprintf+0x31a>
 bee:	8a 2d       	mov	r24, r10
 bf0:	86 78       	andi	r24, 0x86	; 134
 bf2:	09 f0       	breq	.+2      	; 0xbf6 <vfprintf+0x31a>
 bf4:	b3 94       	inc	r11
 bf6:	a3 fc       	sbrc	r10, 3
 bf8:	10 c0       	rjmp	.+32     	; 0xc1a <vfprintf+0x33e>
 bfa:	a0 fe       	sbrs	r10, 0
 bfc:	06 c0       	rjmp	.+12     	; 0xc0a <vfprintf+0x32e>
 bfe:	b2 14       	cp	r11, r2
 c00:	80 f4       	brcc	.+32     	; 0xc22 <vfprintf+0x346>
 c02:	28 0c       	add	r2, r8
 c04:	92 2c       	mov	r9, r2
 c06:	9b 18       	sub	r9, r11
 c08:	0d c0       	rjmp	.+26     	; 0xc24 <vfprintf+0x348>
 c0a:	b2 14       	cp	r11, r2
 c0c:	58 f4       	brcc	.+22     	; 0xc24 <vfprintf+0x348>
 c0e:	b6 01       	movw	r22, r12
 c10:	80 e2       	ldi	r24, 0x20	; 32
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	76 d0       	rcall	.+236    	; 0xd02 <fputc>
 c16:	b3 94       	inc	r11
 c18:	f8 cf       	rjmp	.-16     	; 0xc0a <vfprintf+0x32e>
 c1a:	b2 14       	cp	r11, r2
 c1c:	18 f4       	brcc	.+6      	; 0xc24 <vfprintf+0x348>
 c1e:	2b 18       	sub	r2, r11
 c20:	02 c0       	rjmp	.+4      	; 0xc26 <vfprintf+0x34a>
 c22:	98 2c       	mov	r9, r8
 c24:	21 2c       	mov	r2, r1
 c26:	a4 fe       	sbrs	r10, 4
 c28:	0f c0       	rjmp	.+30     	; 0xc48 <vfprintf+0x36c>
 c2a:	b6 01       	movw	r22, r12
 c2c:	80 e3       	ldi	r24, 0x30	; 48
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	68 d0       	rcall	.+208    	; 0xd02 <fputc>
 c32:	a2 fe       	sbrs	r10, 2
 c34:	16 c0       	rjmp	.+44     	; 0xc62 <vfprintf+0x386>
 c36:	a1 fc       	sbrc	r10, 1
 c38:	03 c0       	rjmp	.+6      	; 0xc40 <vfprintf+0x364>
 c3a:	88 e7       	ldi	r24, 0x78	; 120
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	02 c0       	rjmp	.+4      	; 0xc44 <vfprintf+0x368>
 c40:	88 e5       	ldi	r24, 0x58	; 88
 c42:	90 e0       	ldi	r25, 0x00	; 0
 c44:	b6 01       	movw	r22, r12
 c46:	0c c0       	rjmp	.+24     	; 0xc60 <vfprintf+0x384>
 c48:	8a 2d       	mov	r24, r10
 c4a:	86 78       	andi	r24, 0x86	; 134
 c4c:	51 f0       	breq	.+20     	; 0xc62 <vfprintf+0x386>
 c4e:	a1 fe       	sbrs	r10, 1
 c50:	02 c0       	rjmp	.+4      	; 0xc56 <vfprintf+0x37a>
 c52:	8b e2       	ldi	r24, 0x2B	; 43
 c54:	01 c0       	rjmp	.+2      	; 0xc58 <vfprintf+0x37c>
 c56:	80 e2       	ldi	r24, 0x20	; 32
 c58:	a7 fc       	sbrc	r10, 7
 c5a:	8d e2       	ldi	r24, 0x2D	; 45
 c5c:	b6 01       	movw	r22, r12
 c5e:	90 e0       	ldi	r25, 0x00	; 0
 c60:	50 d0       	rcall	.+160    	; 0xd02 <fputc>
 c62:	89 14       	cp	r8, r9
 c64:	30 f4       	brcc	.+12     	; 0xc72 <vfprintf+0x396>
 c66:	b6 01       	movw	r22, r12
 c68:	80 e3       	ldi	r24, 0x30	; 48
 c6a:	90 e0       	ldi	r25, 0x00	; 0
 c6c:	4a d0       	rcall	.+148    	; 0xd02 <fputc>
 c6e:	9a 94       	dec	r9
 c70:	f8 cf       	rjmp	.-16     	; 0xc62 <vfprintf+0x386>
 c72:	8a 94       	dec	r8
 c74:	f3 01       	movw	r30, r6
 c76:	e8 0d       	add	r30, r8
 c78:	f1 1d       	adc	r31, r1
 c7a:	80 81       	ld	r24, Z
 c7c:	b6 01       	movw	r22, r12
 c7e:	90 e0       	ldi	r25, 0x00	; 0
 c80:	40 d0       	rcall	.+128    	; 0xd02 <fputc>
 c82:	81 10       	cpse	r8, r1
 c84:	f6 cf       	rjmp	.-20     	; 0xc72 <vfprintf+0x396>
 c86:	22 20       	and	r2, r2
 c88:	09 f4       	brne	.+2      	; 0xc8c <vfprintf+0x3b0>
 c8a:	4e ce       	rjmp	.-868    	; 0x928 <vfprintf+0x4c>
 c8c:	b6 01       	movw	r22, r12
 c8e:	80 e2       	ldi	r24, 0x20	; 32
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	37 d0       	rcall	.+110    	; 0xd02 <fputc>
 c94:	2a 94       	dec	r2
 c96:	f7 cf       	rjmp	.-18     	; 0xc86 <vfprintf+0x3aa>
 c98:	f6 01       	movw	r30, r12
 c9a:	86 81       	ldd	r24, Z+6	; 0x06
 c9c:	97 81       	ldd	r25, Z+7	; 0x07
 c9e:	02 c0       	rjmp	.+4      	; 0xca4 <vfprintf+0x3c8>
 ca0:	8f ef       	ldi	r24, 0xFF	; 255
 ca2:	9f ef       	ldi	r25, 0xFF	; 255
 ca4:	2b 96       	adiw	r28, 0x0b	; 11
 ca6:	0f b6       	in	r0, 0x3f	; 63
 ca8:	f8 94       	cli
 caa:	de bf       	out	0x3e, r29	; 62
 cac:	0f be       	out	0x3f, r0	; 63
 cae:	cd bf       	out	0x3d, r28	; 61
 cb0:	df 91       	pop	r29
 cb2:	cf 91       	pop	r28
 cb4:	1f 91       	pop	r17
 cb6:	0f 91       	pop	r16
 cb8:	ff 90       	pop	r15
 cba:	ef 90       	pop	r14
 cbc:	df 90       	pop	r13
 cbe:	cf 90       	pop	r12
 cc0:	bf 90       	pop	r11
 cc2:	af 90       	pop	r10
 cc4:	9f 90       	pop	r9
 cc6:	8f 90       	pop	r8
 cc8:	7f 90       	pop	r7
 cca:	6f 90       	pop	r6
 ccc:	5f 90       	pop	r5
 cce:	4f 90       	pop	r4
 cd0:	3f 90       	pop	r3
 cd2:	2f 90       	pop	r2
 cd4:	08 95       	ret

00000cd6 <strnlen_P>:
 cd6:	fc 01       	movw	r30, r24
 cd8:	05 90       	lpm	r0, Z+
 cda:	61 50       	subi	r22, 0x01	; 1
 cdc:	70 40       	sbci	r23, 0x00	; 0
 cde:	01 10       	cpse	r0, r1
 ce0:	d8 f7       	brcc	.-10     	; 0xcd8 <strnlen_P+0x2>
 ce2:	80 95       	com	r24
 ce4:	90 95       	com	r25
 ce6:	8e 0f       	add	r24, r30
 ce8:	9f 1f       	adc	r25, r31
 cea:	08 95       	ret

00000cec <strnlen>:
 cec:	fc 01       	movw	r30, r24
 cee:	61 50       	subi	r22, 0x01	; 1
 cf0:	70 40       	sbci	r23, 0x00	; 0
 cf2:	01 90       	ld	r0, Z+
 cf4:	01 10       	cpse	r0, r1
 cf6:	d8 f7       	brcc	.-10     	; 0xcee <strnlen+0x2>
 cf8:	80 95       	com	r24
 cfa:	90 95       	com	r25
 cfc:	8e 0f       	add	r24, r30
 cfe:	9f 1f       	adc	r25, r31
 d00:	08 95       	ret

00000d02 <fputc>:
 d02:	0f 93       	push	r16
 d04:	1f 93       	push	r17
 d06:	cf 93       	push	r28
 d08:	df 93       	push	r29
 d0a:	fb 01       	movw	r30, r22
 d0c:	23 81       	ldd	r18, Z+3	; 0x03
 d0e:	21 fd       	sbrc	r18, 1
 d10:	03 c0       	rjmp	.+6      	; 0xd18 <fputc+0x16>
 d12:	8f ef       	ldi	r24, 0xFF	; 255
 d14:	9f ef       	ldi	r25, 0xFF	; 255
 d16:	2c c0       	rjmp	.+88     	; 0xd70 <fputc+0x6e>
 d18:	22 ff       	sbrs	r18, 2
 d1a:	16 c0       	rjmp	.+44     	; 0xd48 <fputc+0x46>
 d1c:	46 81       	ldd	r20, Z+6	; 0x06
 d1e:	57 81       	ldd	r21, Z+7	; 0x07
 d20:	24 81       	ldd	r18, Z+4	; 0x04
 d22:	35 81       	ldd	r19, Z+5	; 0x05
 d24:	42 17       	cp	r20, r18
 d26:	53 07       	cpc	r21, r19
 d28:	44 f4       	brge	.+16     	; 0xd3a <fputc+0x38>
 d2a:	a0 81       	ld	r26, Z
 d2c:	b1 81       	ldd	r27, Z+1	; 0x01
 d2e:	9d 01       	movw	r18, r26
 d30:	2f 5f       	subi	r18, 0xFF	; 255
 d32:	3f 4f       	sbci	r19, 0xFF	; 255
 d34:	31 83       	std	Z+1, r19	; 0x01
 d36:	20 83       	st	Z, r18
 d38:	8c 93       	st	X, r24
 d3a:	26 81       	ldd	r18, Z+6	; 0x06
 d3c:	37 81       	ldd	r19, Z+7	; 0x07
 d3e:	2f 5f       	subi	r18, 0xFF	; 255
 d40:	3f 4f       	sbci	r19, 0xFF	; 255
 d42:	37 83       	std	Z+7, r19	; 0x07
 d44:	26 83       	std	Z+6, r18	; 0x06
 d46:	14 c0       	rjmp	.+40     	; 0xd70 <fputc+0x6e>
 d48:	8b 01       	movw	r16, r22
 d4a:	ec 01       	movw	r28, r24
 d4c:	fb 01       	movw	r30, r22
 d4e:	00 84       	ldd	r0, Z+8	; 0x08
 d50:	f1 85       	ldd	r31, Z+9	; 0x09
 d52:	e0 2d       	mov	r30, r0
 d54:	09 95       	icall
 d56:	89 2b       	or	r24, r25
 d58:	e1 f6       	brne	.-72     	; 0xd12 <fputc+0x10>
 d5a:	d8 01       	movw	r26, r16
 d5c:	16 96       	adiw	r26, 0x06	; 6
 d5e:	8d 91       	ld	r24, X+
 d60:	9c 91       	ld	r25, X
 d62:	17 97       	sbiw	r26, 0x07	; 7
 d64:	01 96       	adiw	r24, 0x01	; 1
 d66:	17 96       	adiw	r26, 0x07	; 7
 d68:	9c 93       	st	X, r25
 d6a:	8e 93       	st	-X, r24
 d6c:	16 97       	sbiw	r26, 0x06	; 6
 d6e:	ce 01       	movw	r24, r28
 d70:	df 91       	pop	r29
 d72:	cf 91       	pop	r28
 d74:	1f 91       	pop	r17
 d76:	0f 91       	pop	r16
 d78:	08 95       	ret

00000d7a <__ultoa_invert>:
 d7a:	fa 01       	movw	r30, r20
 d7c:	aa 27       	eor	r26, r26
 d7e:	28 30       	cpi	r18, 0x08	; 8
 d80:	51 f1       	breq	.+84     	; 0xdd6 <__ultoa_invert+0x5c>
 d82:	20 31       	cpi	r18, 0x10	; 16
 d84:	81 f1       	breq	.+96     	; 0xde6 <__ultoa_invert+0x6c>
 d86:	e8 94       	clt
 d88:	6f 93       	push	r22
 d8a:	6e 7f       	andi	r22, 0xFE	; 254
 d8c:	6e 5f       	subi	r22, 0xFE	; 254
 d8e:	7f 4f       	sbci	r23, 0xFF	; 255
 d90:	8f 4f       	sbci	r24, 0xFF	; 255
 d92:	9f 4f       	sbci	r25, 0xFF	; 255
 d94:	af 4f       	sbci	r26, 0xFF	; 255
 d96:	b1 e0       	ldi	r27, 0x01	; 1
 d98:	3e d0       	rcall	.+124    	; 0xe16 <__ultoa_invert+0x9c>
 d9a:	b4 e0       	ldi	r27, 0x04	; 4
 d9c:	3c d0       	rcall	.+120    	; 0xe16 <__ultoa_invert+0x9c>
 d9e:	67 0f       	add	r22, r23
 da0:	78 1f       	adc	r23, r24
 da2:	89 1f       	adc	r24, r25
 da4:	9a 1f       	adc	r25, r26
 da6:	a1 1d       	adc	r26, r1
 da8:	68 0f       	add	r22, r24
 daa:	79 1f       	adc	r23, r25
 dac:	8a 1f       	adc	r24, r26
 dae:	91 1d       	adc	r25, r1
 db0:	a1 1d       	adc	r26, r1
 db2:	6a 0f       	add	r22, r26
 db4:	71 1d       	adc	r23, r1
 db6:	81 1d       	adc	r24, r1
 db8:	91 1d       	adc	r25, r1
 dba:	a1 1d       	adc	r26, r1
 dbc:	20 d0       	rcall	.+64     	; 0xdfe <__ultoa_invert+0x84>
 dbe:	09 f4       	brne	.+2      	; 0xdc2 <__ultoa_invert+0x48>
 dc0:	68 94       	set
 dc2:	3f 91       	pop	r19
 dc4:	2a e0       	ldi	r18, 0x0A	; 10
 dc6:	26 9f       	mul	r18, r22
 dc8:	11 24       	eor	r1, r1
 dca:	30 19       	sub	r19, r0
 dcc:	30 5d       	subi	r19, 0xD0	; 208
 dce:	31 93       	st	Z+, r19
 dd0:	de f6       	brtc	.-74     	; 0xd88 <__ultoa_invert+0xe>
 dd2:	cf 01       	movw	r24, r30
 dd4:	08 95       	ret
 dd6:	46 2f       	mov	r20, r22
 dd8:	47 70       	andi	r20, 0x07	; 7
 dda:	40 5d       	subi	r20, 0xD0	; 208
 ddc:	41 93       	st	Z+, r20
 dde:	b3 e0       	ldi	r27, 0x03	; 3
 de0:	0f d0       	rcall	.+30     	; 0xe00 <__ultoa_invert+0x86>
 de2:	c9 f7       	brne	.-14     	; 0xdd6 <__ultoa_invert+0x5c>
 de4:	f6 cf       	rjmp	.-20     	; 0xdd2 <__ultoa_invert+0x58>
 de6:	46 2f       	mov	r20, r22
 de8:	4f 70       	andi	r20, 0x0F	; 15
 dea:	40 5d       	subi	r20, 0xD0	; 208
 dec:	4a 33       	cpi	r20, 0x3A	; 58
 dee:	18 f0       	brcs	.+6      	; 0xdf6 <__ultoa_invert+0x7c>
 df0:	49 5d       	subi	r20, 0xD9	; 217
 df2:	31 fd       	sbrc	r19, 1
 df4:	40 52       	subi	r20, 0x20	; 32
 df6:	41 93       	st	Z+, r20
 df8:	02 d0       	rcall	.+4      	; 0xdfe <__ultoa_invert+0x84>
 dfa:	a9 f7       	brne	.-22     	; 0xde6 <__ultoa_invert+0x6c>
 dfc:	ea cf       	rjmp	.-44     	; 0xdd2 <__ultoa_invert+0x58>
 dfe:	b4 e0       	ldi	r27, 0x04	; 4
 e00:	a6 95       	lsr	r26
 e02:	97 95       	ror	r25
 e04:	87 95       	ror	r24
 e06:	77 95       	ror	r23
 e08:	67 95       	ror	r22
 e0a:	ba 95       	dec	r27
 e0c:	c9 f7       	brne	.-14     	; 0xe00 <__ultoa_invert+0x86>
 e0e:	00 97       	sbiw	r24, 0x00	; 0
 e10:	61 05       	cpc	r22, r1
 e12:	71 05       	cpc	r23, r1
 e14:	08 95       	ret
 e16:	9b 01       	movw	r18, r22
 e18:	ac 01       	movw	r20, r24
 e1a:	0a 2e       	mov	r0, r26
 e1c:	06 94       	lsr	r0
 e1e:	57 95       	ror	r21
 e20:	47 95       	ror	r20
 e22:	37 95       	ror	r19
 e24:	27 95       	ror	r18
 e26:	ba 95       	dec	r27
 e28:	c9 f7       	brne	.-14     	; 0xe1c <__ultoa_invert+0xa2>
 e2a:	62 0f       	add	r22, r18
 e2c:	73 1f       	adc	r23, r19
 e2e:	84 1f       	adc	r24, r20
 e30:	95 1f       	adc	r25, r21
 e32:	a0 1d       	adc	r26, r0
 e34:	08 95       	ret

00000e36 <_exit>:
 e36:	f8 94       	cli

00000e38 <__stop_program>:
 e38:	ff cf       	rjmp	.-2      	; 0xe38 <__stop_program>
